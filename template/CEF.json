{
    "$schema":  "http://schema.management.azure.com/schemas/2014-04-01-preview/deploymenttemplate.json#",
    "contentversion":  "1.0.0.0",
    "parameters":  {
                       "location":  {
                                        "type":  "string",
                                        "defaultvalue":  "chinaeast2"
                                    },
                       "workspacename":  {
                                             "type":  "string"
                                         },
                       "security - Cisco_id":  {
                                                   "defaultValue":  "[newGuid()]",
                                                   "type":  "string"
                                               },
                       "security - OneIdentity_id":  {
                                                         "defaultValue":  "[newGuid()]",
                                                         "type":  "string"
                                                     }
                   },
    "resources":  [
                      {
                          "properties":  {
                                             "category":  "Sentinel-CEF-Detection-Low",
                                             "displayName":  "Cisco ASA - average attack detection rate increase",
                                             "query":  "//This will help you determine if Cisco ASA devices are under heavier attack than normal over the last hour versus the previous 6 hours based on DeviceEventClassID 733100\n//References: https://www.cisco.com/c/en/us/td/docs/security/asa/syslog/b_syslog/syslogs9.html\n//Details on how to further troubleshoot/investigate: https://www.cisco.com/c/en/us/support/docs/security/asa-5500-x-series-next-generation-firewalls/113685-asa-threat-detection.html\n//\n\nlet timeframe = 1h;\nlet last1h = CommonSecurityLog \n| where TimeGenerated \u003e= ago(timeframe)\n| where isempty(CommunicationDirection) \n| where DeviceEventClassID == \"733100\"\n| extend SourceOfDropRateCount = tostring(split(tostring(split(Message, \"]\")[0]),\"[ \")[1])\n| extend splitMessage = split(Message, \".\")\n| extend DropRate = tostring(split(tostring(splitMessage[0]),\"] \")[1])\n| extend CurrentBurstRate = split(tostring(split(tostring(splitMessage[1]),\"  \")[0]),\"is \")\n| extend CurrentBurstRatePerSec = toint(split(tostring(CurrentBurstRate[1]),\" \")[0])\n| extend MaxConfiguredBurstRate = toint(CurrentBurstRate[2])\n| extend CurrentAvgRate = split(tostring(split(tostring(splitMessage[1]),\"  \")[1]),\"is \")\n| extend CurrentAvgRatePerSec = toint(split(tostring(CurrentAvgRate[1]),\" \")[0])\n| extend MaxConfiguredAvgRate = toint(CurrentAvgRate[2])\n| extend CumulativeTotal = toint(split(tostring(split(tostring(splitMessage[1]),\"  \")[2]),\"is \")[1])\n| summarize last1hCumTotal = sum(CumulativeTotal), last1hAvgRatePerSec = avg(CurrentAvgRatePerSec), last1hAvgBurstRatePerSec = avg(CurrentBurstRatePerSec) by DeviceName, DeviceEventClassID, SourceIP, SourceOfDropRateCount, DropRate;\nlet prev6h = CommonSecurityLog \n| where TimeGenerated between (ago(6h) .. ago(1h))\n| where isempty(CommunicationDirection) \n| where DeviceEventClassID == \"733100\"\n| extend SourceOfDropRateCount = tostring(split(tostring(split(Message, \"]\")[0]),\"[ \")[1])\n| extend splitMessage = split(Message, \".\")\n| extend DropRate = tostring(split(tostring(splitMessage[0]),\"] \")[1])\n| extend CurrentBurstRate = split(tostring(split(tostring(splitMessage[1]),\"  \")[0]),\"is \")\n| extend prevCurrentBurstRatePerSec = toint(split(tostring(CurrentBurstRate[1]),\" \")[0])\n| extend prevMaxConfiguredBurstRate = toint(CurrentBurstRate[2])\n| extend CurrentAvgRate = split(tostring(split(tostring(splitMessage[1]),\"  \")[1]),\"is \")\n| extend prevCurrentAvgRatePerSec = toint(split(tostring(CurrentAvgRate[1]),\" \")[0])\n| extend prevMaxConfiguredAvgRate = toint(CurrentAvgRate[2])\n| extend prevCumulativeTotal = toint(split(tostring(split(tostring(splitMessage[1]),\"  \")[2]),\"is \")[1])\n| summarize StartTimeUtc = min(TimeGenerated), EndTimeUtc = max(TimeGenerated), prev6hCumTotal = sum(prevCumulativeTotal), prev6hAvgRatePerSec = avg(prevCurrentAvgRatePerSec), prev6hAvgBurstRatePerSec = avg(prevCurrentBurstRatePerSec) \nby DeviceName, DeviceEventClassID, SourceIP, SourceOfDropRateCount, DropRate;\nlast1h | join (\n  prev6h \n) on DeviceName, DeviceEventClassID, SourceIP, SourceOfDropRateCount, DropRate\n| project StartTimeUtc, EndTimeUtc, DeviceName, DeviceEventClassID, SourceIP, SourceOfDropRateCount, DropRate, last1hCumTotal, prev6hCumTotal, prev6hAvgCumTotal = prev6hCumTotal/6, last1hAvgRatePerSec, prev6hAvgRatePerSec, last1hAvgBurstRatePerSec, prev6hAvgBurstRatePerSec\n// Select only events that indicate a doubling of the expected rate in the last hour over the previous 6 hours\n| where last1hCumTotal \u003e 2*prev6hAvgCumTotal or last1hAvgRatePerSec \u003e 2*prev6hAvgRatePerSec or last1hAvgBurstRatePerSec \u003e 2*prev6hAvgBurstRatePerSec\n| extend timestamp = StartTimeUtc, IPCustomEntity = SourceIP, HostCustomEntity = DeviceName\n",
                                             "version":  "1.0"
                                         },
                          "name":  "[concat(parameters('workspacename'), '/' , 'sentinel_CEF_query_1')]",
                          "apiVersion":  "2020-03-01-preview",
                          "type":  "Microsoft.OperationalInsights/workspaces/savedSearches",
                          "location":  "[parameters('location')]"
                      },
                      {
                          "properties":  {
                                             "category":  "Sentinel-CEF-Detection-Medium",
                                             "displayName":  "Cisco ASA - threat detection message fired",
                                             "query":  "//Identifies when the Cisco ASA Threat Detection engine fired an alert based on malicious activity occurring on the network inicated by DeviceEventClassID 733101-733105\n//Resources: https://www.cisco.com/c/en/us/td/docs/security/asa/syslog/b_syslog/syslogs9.html\n//Details on how to further troubleshoot/investigate: https://www.cisco.com/c/en/us/support/docs/security/asa-5500-x-series-next-generation-firewalls/113685-asa-threat-detection.html\n//\n\nlet timeframe = 1h;\nCommonSecurityLog \n| where TimeGenerated \u003e= ago(timeframe)\n| where isempty(CommunicationDirection) \n| where DeviceEventClassID in (\"733101\",\"733102\",\"733103\",\"733104\",\"733105\")\n| extend timestamp = TimeGenerated, IPCustomEntity = SourceIP, HostCustomEntity = DeviceName\n",
                                             "version":  "1.0"
                                         },
                          "name":  "[concat(parameters('workspacename'), '/' , 'sentinel_CEF_query_2')]",
                          "apiVersion":  "2020-03-01-preview",
                          "type":  "Microsoft.OperationalInsights/workspaces/savedSearches",
                          "location":  "[parameters('location')]"
                      },
                      {
                          "properties":  {
                                             "category":  "Sentinel-CEF-Detection-Low",
                                             "displayName":  "Fortinet - Beacon pattern detected",
                                             "query":  "//Identifies patterns in the time deltas of contacts between internal and external IPs in Fortinet network data that are consistent with beaconing.\n// Accounts for randomness (jitter) and seasonality such as working hours that may have been introduced into the beacon pattern.\n// The lookback is set to 1d, the minimum granularity in time deltas is set to 60 seconds and the minimum number of beacons required to emit a\n// detection is set to 4.\n// Increase the lookback period to capture beacons with larger periodicities.\n// The jitter tolerance is set to 0.2 - This means we account for an overall 20% deviation from the infered beacon periodicity. Seasonality is dealt with\n// automatically using series_outliers.\n// Note: In large environments it may be necessary to reduce the lookback period to get fast query times.\n//\n\nlet starttime = 1d;\nlet TimeDeltaThresholdInSeconds = 60; // we ignore beacons diffs that fall below this threshold \nlet TotalBeaconsThreshold = 4; // minimum number of beacons required in a session to surface a row\nlet JitterTolerance = 0.2; // tolerance to jitter, e.g. - 0.2 = 20% jitter is tolerated either side of the periodicity\nlet PrivateIPregex = @\"^127\\.|^10\\.|^172\\.1[6-9]\\.|^172\\.2[0-9]\\.|^172\\.3[0-1]\\.|^192\\.168\\.\"; // exclude destinations that fall into this category\nCommonSecurityLog\n| where DeviceVendor == \"Fortinet\"\n| where TimeGenerated \u003e ago(starttime)\n// eliminate bad data\n| where isnotempty(SourceIP) and isnotempty(DestinationIP) and SourceIP != \"0.0.0.0\"\n// filter out deny, close, rst and SNMP to reduce data volume\n| where DeviceAction !in (\"close\", \"client-rst\", \"server-rst\", \"deny\") and DestinationPort != 161\n// map input fields\n| project TimeGenerated , SourceIP, DestinationIP, DestinationPort, ReceivedBytes, SentBytes, DeviceAction \n// where destination IPs are public\n| extend DestinationIPType = iff(DestinationIP matches regex PrivateIPregex,\"private\" ,\"public\" )\n| where DestinationIPType == \"public\"\n// sort into source-\u003edestination 'sessions'\n| sort by SourceIP asc, DestinationIP asc, DestinationPort asc, TimeGenerated asc\n| serialize\n// time diff the contact times between source and destination to get a list of deltas\n| extend nextTimeGenerated = next(TimeGenerated, 1), nextSourceIP = next(SourceIP, 1), nextDestIP = next(DestinationIP, 1), nextDestPort = next(DestinationPort, 1)\n| extend TimeDeltainSeconds = datetime_diff(\"second\",nextTimeGenerated,TimeGenerated)\n| where SourceIP == nextSourceIP and DestinationIP == nextDestIP and DestinationPort == nextDestPort\n// remove small time deltas below the set threshold\n| where TimeDeltainSeconds \u003e TimeDeltaThresholdInSeconds\n| project TimeGenerated, TimeDeltainSeconds, SourceIP, DestinationIP, DestinationPort, ReceivedBytes, SentBytes, DeviceAction \n// summarize the deltas by source-\u003edestination\n| summarize count(), StartTime=min(TimeGenerated), EndTime=max(TimeGenerated), sum(ReceivedBytes), sum(SentBytes), makelist(TimeDeltainSeconds), makeset(DeviceAction) by SourceIP, DestinationIP, DestinationPort\n// get some statistical properties of the delta distribution and smooth any outliers (e.g. laptop shut overnight, working hours)\n| extend series_stats(list_TimeDeltainSeconds), outliers=series_outliers(list_TimeDeltainSeconds)\n// expand the deltas and the outliers\n| mvexpand list_TimeDeltainSeconds to typeof(double), outliers to typeof(double)\n// replace outliers with the average of the distribution\n| extend list_TimeDeltainSeconds_normalized=iff(outliers \u003e 1.5 or outliers \u003c -1.5, series_stats_list_TimeDeltainSeconds_avg , list_TimeDeltainSeconds)\n// summarize with the smoothed distribution\n| summarize BeaconCount=count(), makelist(list_TimeDeltainSeconds), list_TimeDeltainSeconds_normalized=makelist(list_TimeDeltainSeconds_normalized), makeset(set_DeviceAction) by StartTime, EndTime, SourceIP, DestinationIP, DestinationPort, sum_ReceivedBytes, sum_SentBytes\n// get stats on the smoothed distribution\n| extend series_stats(list_TimeDeltainSeconds_normalized)\n// match jitter tolerance on smoothed distrib\n| extend MaxJitter = (series_stats_list_TimeDeltainSeconds_normalized_avg*JitterTolerance)\n| where series_stats_list_TimeDeltainSeconds_normalized_stdev \u003c MaxJitter\n// where the minimum beacon threshold is satisfied and there was some data transfer\n| where BeaconCount \u003e TotalBeaconsThreshold and (sum_SentBytes \u003e 0 or sum_ReceivedBytes \u003e 0)\n// final projection\n| project StartTime, EndTime, SourceIP, DestinationIP, DestinationPort, BeaconCount, TimeDeltasInSeconds=list_list_TimeDeltainSeconds, Periodicity=series_stats_list_TimeDeltainSeconds_normalized_avg, ReceivedBytes=sum_ReceivedBytes, SentBytes=sum_SentBytes, Actions=set_set_DeviceAction\n// where periodicity is order of magnitude larger than time delta threshold (eliminates FPs whose periodicity is close to the values we ignored)\n| where Periodicity \u003e= (10*TimeDeltaThresholdInSeconds)\n| extend timestamp = StartTime, IPCustomEntity = DestinationIP\n",
                                             "version":  "1.0"
                                         },
                          "name":  "[concat(parameters('workspacename'), '/' , 'sentinel_CEF_query_3')]",
                          "apiVersion":  "2020-03-01-preview",
                          "type":  "Microsoft.OperationalInsights/workspaces/savedSearches",
                          "location":  "[parameters('location')]"
                      },
                      {
                          "properties":  {
                                             "category":  "Sentinel-CEF-Detection-Medium",
                                             "displayName":  "Possible contact with a domain generated by a DGA",
                                             "query":  "//Identifies contacts with domains names in CommonSecurityLog that might have been generated by a Domain Generation Algorithm (DGA). DGAs can be used\n//by malware to generate rendezvous points that are difficult to predict in advance. This detection uses the Alexa Top 1 million domain names to build a model\n//of what normal domains look like. It uses this to identify domains that may have been randomly generated by an algorithm.\n//The triThreshold is set to 500 - increase this to report on domains that are less likely to have been randomly generated, decrease it for more likely.\n//The start time and end time look back over 6 hours of data and the dgaLengthThreshold is set to 8 - meaning domains whose length is 8 or more are reported.\n//\n\nlet triThreshold = 500;\nlet startTime = 6h;\nlet dgaLengthThreshold = 8;\n// fetch the alexa top 1M domains\nlet top1M =  (externaldata (Position:int, Domain:string)   [@\"http://s3-us-west-1.amazonaws.com/umbrella-static/top-1m.csv.zip\"]  with (format=\"csv\", zipPattern=\"*.csv\"));\n// extract tri grams that are above our threshold - i.e. are common\nlet triBaseline =   top1M\n| extend Domain = tolower(extract(\"([^.]*).{0,7}$\", 1, Domain))\n| extend AllTriGrams = array_concat(extract_all(\"(...)\", Domain), extract_all(\"(...)\", substring(Domain, 1)), extract_all(\"(...)\", substring(Domain, 2)))\n| mvexpand Trigram=AllTriGrams\n| summarize triCount=count() by tostring(Trigram)\n| sort by triCount desc\n| where triCount \u003e triThreshold\n| distinct Trigram;\n// collect domain information from common security log, filter and extract the DGA candidate and its trigrams\nlet allDataSummarized =   CommonSecurityLog\n| where TimeGenerated \u003e ago(startTime)\n| where isnotempty(DestinationHostName)\n| extend Name = tolower(DestinationHostName)\n| distinct Name\n| where Name has \".\"\n| where Name !endswith \".home\" and Name !endswith \".lan\"\n// extract DGA candidate\n| extend DGADomain = extract(\"([^.]*).{0,7}$\", 1, Name)\n| where strlen(DGADomain) \u003e dgaLengthThreshold\n// throw out domains with number in them\n| where DGADomain matches regex \"^[A-Za-z]{0,}$\"\n// extract the tri grams from summarized data\n| extend AllTriGrams = array_concat(extract_all(\"(...)\", DGADomain), extract_all(\"(...)\", substring(DGADomain, 1)), extract_all(\"(...)\", substring(DGADomain, 2)));\n// throw out domains that have repeating tri's and/or \u003e=3 repeating letters\nlet nonRepeatingTris =  allDataSummarized\n| join kind=leftanti\n(\n    allDataSummarized\n    | mvexpand AllTriGrams\n    | summarize count() by tostring(AllTriGrams), DGADomain\n    | where count_ \u003e 1\n    | distinct DGADomain\n)\non DGADomain;\n// find domains that do not have a common tri in the baseline\nlet dataWithRareTris =  nonRepeatingTris\n| join kind=leftanti\n(\n    nonRepeatingTris\n    | mvexpand AllTriGrams\n    | extend Trigram = tostring(AllTriGrams)\n    | distinct Trigram, DGADomain\n    | join kind=inner\n    (\n        triBaseline\n    )\n    on Trigram\n    | distinct DGADomain\n)\non DGADomain;\ndataWithRareTris\n// join DGAs back on connection data\n| join kind=inner\n(\n    CommonSecurityLog\n    | where TimeGenerated \u003e ago(startTime)\n    | where isnotempty(DestinationHostName)\n    | extend DestinationHostName = tolower(DestinationHostName)\n    | project-rename Name=DestinationHostName, DataSource=DeviceVendor\n    | summarize StartTime=min(TimeGenerated), EndTime=max(TimeGenerated) by Name, SourceIP, DestinationIP, DataSource\n)\non Name\n| project StartTime, EndTime, Name, DGADomain, SourceIP, DestinationIP, DataSource\n| extend timestamp=StartTime, IPCustomEntity=SourceIP\n",
                                             "version":  "1.0"
                                         },
                          "name":  "[concat(parameters('workspacename'), '/' , 'sentinel_CEF_query_4')]",
                          "apiVersion":  "2020-03-01-preview",
                          "type":  "Microsoft.OperationalInsights/workspaces/savedSearches",
                          "location":  "[parameters('location')]"
                      },
                      {
                          "properties":  {
                                             "category":  "Sentinel-CEF-Detection-Low",
                                             "displayName":  "Palo Alto - potential beaconing detected",
                                             "query":  "//Identifies beaconing patterns from Palo Alto Network traffic logs based on recurrent timedelta patterns. \n//The query leverages various KQL functions to calculate time deltas and then compares it with total events observed in a day to find percentage of beaconing. \n//This outbound beaconing pattern to untrusted public networks should be investigated for any malware callbacks or data exfiltration attempts.\n//Reference Blog:\n//http://www.austintaylor.io/detect/beaconing/intrusion/detection/system/command/control/flare/elastic/stack/2017/06/10/detect-beaconing-with-flare-elasticsearch-and-intrusion-detection-systems/\n//\n\nlet starttime = 2d;\nlet endtime = 1d;\nlet TimeDeltaThreshold = 10;\nlet TotalEventsThreshold = 15;\nlet PercentBeaconThreshold = 80;\nlet PrivateIPregex = @'^127\\.|^10\\.|^172\\.1[6-9]\\.|^172\\.2[0-9]\\.|^172\\.3[0-1]\\.|^192\\.168\\.';\nCommonSecurityLog\n| where DeviceVendor == \"Palo Alto Networks\" and Activity == \"TRAFFIC\"\n| where TimeGenerated between (ago(starttime)..ago(endtime))\n| extend DestinationIPType = iff(DestinationIP matches regex PrivateIPregex,\"private\" ,\"public\" )\n| where DestinationIPType == \"public\"\n| project TimeGenerated, DeviceName, SourceUserID, SourceIP, SourcePort, DestinationIP, DestinationPort, ReceivedBytes, SentBytes\n| sort by SourceIP asc,TimeGenerated asc, DestinationIP asc, DestinationPort asc\n| serialize\n| extend nextTimeGenerated = next(TimeGenerated, 1), nextSourceIP = next(SourceIP, 1)\n| extend TimeDeltainSeconds = datetime_diff('second',nextTimeGenerated,TimeGenerated)\n| where SourceIP == nextSourceIP\n//Whitelisting criteria/ threshold criteria\n| where TimeDeltainSeconds \u003e TimeDeltaThreshold \n| project TimeGenerated, TimeDeltainSeconds, DeviceName, SourceUserID, SourceIP, SourcePort, DestinationIP, DestinationPort, ReceivedBytes, SentBytes\n| summarize count(), sum(ReceivedBytes), sum(SentBytes), make_list(TimeDeltainSeconds) \nby TimeDeltainSeconds, bin(TimeGenerated, 1h), DeviceName, SourceUserID, SourceIP, DestinationIP, DestinationPort\n| summarize (MostFrequentTimeDeltaCount, MostFrequentTimeDeltainSeconds) = arg_max(count_, TimeDeltainSeconds), TotalEvents=sum(count_), TotalSentBytes = sum(sum_SentBytes), TotalReceivedBytes = sum(sum_ReceivedBytes) \nby bin(TimeGenerated, 1h), DeviceName, SourceUserID, SourceIP, DestinationIP, DestinationPort\n| where TotalEvents \u003e TotalEventsThreshold \n| extend BeaconPercent = MostFrequentTimeDeltaCount/toreal(TotalEvents) * 100\n| where BeaconPercent \u003e PercentBeaconThreshold\n| extend timestamp = TimeGenerated, IPCustomEntity = DestinationIP, AccountCustomEntity = SourceUserID, HostCustomEntity = DeviceName \n",
                                             "version":  "1.0"
                                         },
                          "name":  "[concat(parameters('workspacename'), '/' , 'sentinel_CEF_query_5')]",
                          "apiVersion":  "2020-03-01-preview",
                          "type":  "Microsoft.OperationalInsights/workspaces/savedSearches",
                          "location":  "[parameters('location')]"
                      },
                      {
                          "properties":  {
                                             "category":  "Sentinel-CEF-Detection-Low",
                                             "displayName":  "Palo Alto - possible internal to external port scanning",
                                             "query":  "//Identifies a list of internal Source IPs (10.x.x.x Hosts) that have triggered 10 or more non-graceful tcp server resets from one or more Destination IPs which \n//results in an \"ApplicationProtocol = incomplete\" designation. The server resets coupled with an \"Incomplete\" ApplicationProtocol designation can be an indication \n//of internal to external port scanning or probing attack. \n//References: https://knowledgebase.paloaltonetworks.com/KCSArticleDetail?id=kA10g000000ClUvCAK and\n//https://knowledgebase.paloaltonetworks.com/KCSArticleDetail?id=kA10g000000ClTaCAK\n//\n\nlet timeframe = 1h;\nCommonSecurityLog \n| where TimeGenerated \u003e ago(timeframe) \n| where isnotempty(DestinationPort) and DeviceAction !in (\"reset-both\", \"deny\") \n// filter out common usage ports. Add ports that are legitimate for your environment\n| where DestinationPort !in (\"443\", \"53\", \"389\", \"80\", \"0\", \"880\", \"8888\", \"8080\")\n| where ApplicationProtocol == \"incomplete\" \n// filter out IANA ephemeral or negotiated ports as per https://en.wikipedia.org/wiki/Ephemeral_port\n| where DestinationPort !between (toint(49512) .. toint(65535)) \n| where Computer != \"\" \n| where DestinationIP !startswith \"10.\"\n// Filter out any graceful reset reasons of AGED OUT which occurs when a TCP session closes with a FIN due to aging out. \n| where AdditionalExtensions !has \"reason=aged-out\" \n// Filter out any TCP FIN which occurs when a TCP FIN is used to gracefully close half or both sides of a connection.\n| where AdditionalExtensions !has \"reason=tcp-fin\" \n// Uncomment one of the following where clauses to trigger on specific TCP reset reasons\n// See Palo Alto article for details - https://knowledgebase.paloaltonetworks.com/KCSArticleDetail?id=kA10g000000ClUvCAK\n// TCP RST-server - Occurs when the server sends a TCP reset to the client\n// | where AdditionalExtensions has \"reason=tcp-rst-from-server\"  \n// TCP RST-client - Occurs when the client sends a TCP reset to the server\n// | where AdditionalExtensions has \"reason=tcp-rst-from-client\"  \n| extend reason = tostring(split(AdditionalExtensions, \";\")[3])\n| summarize StartTimeUtc = min(TimeGenerated), EndTimeUtc = max(TimeGenerated), count() by DeviceName, SourceUserID, SourceIP, ApplicationProtocol, reason, DestinationPort, Protocol, DeviceVendor, DeviceProduct, DeviceAction, DestinationIP\n| where count_ \u003e= 10\n| summarize StartTimeUtc = min(StartTimeUtc), EndTimeUtc = max(EndTimeUtc), makeset(DestinationIP), totalcount = sum(count_) by DeviceName, SourceUserID, SourceIP, ApplicationProtocol, reason, DestinationPort, Protocol, DeviceVendor, DeviceProduct, DeviceAction\n| extend timestamp = StartTimeUtc, IPCustomEntity = SourceIP, AccountCustomEntity = SourceUserID, HostCustomEntity = DeviceName \n",
                                             "version":  "1.0"
                                         },
                          "name":  "[concat(parameters('workspacename'), '/' , 'sentinel_CEF_query_6')]",
                          "apiVersion":  "2020-03-01-preview",
                          "type":  "Microsoft.OperationalInsights/workspaces/savedSearches",
                          "location":  "[parameters('location')]"
                      },
                      {
                          "properties":  {
                                             "category":  "Sentinel-CEF-Detection-Medium",
                                             "displayName":  "Time series anomaly detection for total volume of traffic",
                                             "query":  "//Identifies anamalous spikes in network traffic logs as compared to baseline or normal historical patterns. \n//The query leverages a KQL built-in anomaly detection algorithm to find large deviations from baseline patterns. \n//Sudden increases in network traffic volume may be an indication of data exfiltration attempts and should be investigated.\n//The higher the score, the further it is from the baseline value.\n//The output is aggregated to provide summary view of unique source IP to destination IP address and port traffic observed in the flagged anomaly hour. \n//The source IP addresses which were sending less than percentotalthreshold of the total traffic have been exluded whose value can be adjusted as needed .\n//You may have to run queries for individual source IP addresses from SourceIPlist to determine if anything looks suspicious\n//\n\nlet starttime = 14d;\nlet endtime = 1d;\nlet timeframe = 1h;\nlet scorethreshold = 5;\nlet percentotalthreshold = 25;\nlet TimeSeriesData = CommonSecurityLog \n| where isnotempty(DestinationIP) and isnotempty(SourceIP)\n| where TimeGenerated between (startofday(ago(starttime))..startofday(ago(endtime)))\n| project TimeGenerated,SourceIP, DestinationIP, DeviceVendor\n| make-series Total=count() on TimeGenerated from startofday(ago(starttime)) to startofday(ago(endtime)) step timeframe by DeviceVendor;\n//Filtering specific records associated with spikes as outliers\nlet TimeSeriesAlerts=TimeSeriesData\n| extend (anomalies, score, baseline) = series_decompose_anomalies(Total, scorethreshold, -1, 'linefit')\n| mv-expand Total to typeof(double), TimeGenerated to typeof(datetime), anomalies to typeof(double),score to typeof(double), baseline to typeof(long)\n| where anomalies \u003e 0 | extend score = round(score,2), AnomalyHour = TimeGenerated\n| project DeviceVendor,AnomalyHour, TimeGenerated, Total, baseline, anomalies, score;\n//Join anomalies with Base Data to popalate associated records for investigation - Results sorted by score in descending order \nTimeSeriesAlerts \n| join (\n    CommonSecurityLog \n| where isnotempty(DestinationIP) and isnotempty(SourceIP)\n| where TimeGenerated between (startofday(ago(starttime))..startofday(ago(endtime)))\n| summarize HourlyCount = count(), TimeGeneratedMax = arg_max(TimeGenerated, *), DestinationIPlist = make_set(DestinationIP), DestinationPortlist = make_set(DestinationPort) by DeviceVendor, SourceIP, TimeGeneratedHour= bin(TimeGenerated, 1h)\n| extend AnomalyHour = TimeGeneratedHour\n) on AnomalyHour, DeviceVendor \n| extend PercentTotal = round((HourlyCount / Total) * 100, 3)\n| where PercentTotal \u003e percentotalthreshold\n| project DeviceVendor , AnomalyHour, TimeGeneratedMax, SourceIP, DestinationIPlist, DestinationPortlist, HourlyCount, PercentTotal, Total, baseline, score, anomalies\n| summarize HourlyCount=sum(HourlyCount), StartTimeUtc=min(TimeGeneratedMax), EndTimeUtc=max(TimeGeneratedMax), SourceIPlist = make_set(SourceIP), SourceIPMax= arg_max(SourceIP, *), DestinationIPlist = make_set(DestinationIPlist), DestinationPortlist = make_set(DestinationPortlist) by DeviceVendor , AnomalyHour, Total, baseline, score, anomalies\n| project DeviceVendor , AnomalyHour, EndTimeUtc, SourceIPMax ,SourceIPlist, DestinationIPlist, DestinationPortlist, HourlyCount, Total, baseline, score, anomalies\n| extend timestamp= EndTimeUtc , IPCustomEntity = SourceIPMax\n",
                                             "version":  "1.0"
                                         },
                          "name":  "[concat(parameters('workspacename'), '/' , 'sentinel_CEF_query_7')]",
                          "apiVersion":  "2020-03-01-preview",
                          "type":  "Microsoft.OperationalInsights/workspaces/savedSearches",
                          "location":  "[parameters('location')]"
                      },
                      {
                          "properties":  {
                                             "category":  "Sentinel-CEF-Detection-Low",
                                             "displayName":  "Wazuh - Large Number of Web errors from an IP",
                                             "query":  "//Identifies instances where Wazuh logged over 400 403 Web Errors from one IP Address. To onboard Wazuh data into Sentinel please view: https://github.com/wazuh/wazuh-documentation/blob/master/source/azure/monitoring%20activity.rst\n//\n\nlet incidentTime = ago(1d);\nCommonSecurityLog\n| where TimeGenerated \u003e incidentTime\n| where DeviceProduct =~ \"Wazuh\"\n| where Activity has \"Web server 400 error code.\"\n| where Message has \"403\"\n| extend HostName=substring(split(DeviceCustomString1,\")\")[0],1)\n| summarize StartTime = min(TimeGenerated), EndTime = max(TimeGenerated), NumberOfErrors = count(SourceIP) by HostName, SourceIP\n| where NumberOfErrors \u003e 400\n| sort by NumberOfErrors desc\n| extend timestamp = StartTime, HostCustomEntity = HostName, IPCustomEntity = SourceIP\n",
                                             "version":  "1.0"
                                         },
                          "name":  "[concat(parameters('workspacename'), '/' , 'sentinel_CEF_query_8')]",
                          "apiVersion":  "2020-03-01-preview",
                          "type":  "Microsoft.OperationalInsights/workspaces/savedSearches",
                          "location":  "[parameters('location')]"
                      },
                      {
                          "properties":  {
                                             "category":  "Sentinel-CEF-Detection-Low",
                                             "displayName":  "Request for single resource on domain",
                                             "query":  "//This will look for connections to a domain where only a single file is requested, this is unusual as most modern web applications require additional recources. This type of activity is often assocaited with malware beaconing or tracking URLs delivered in emails. Developed for Zscaler but applicable to any outbound web logging.\n//\n\nlet timeRange = 1d;\n//The number of URI's seen to be suspicious, higher = less likely to be suspicious\nlet uriThreshold = 1;\nlet suspiciousURLs =\nCommonSecurityLog\n| where TimeGenerated \u003e= ago(timeRange)\n// Only look at connections that were allowed through the web proxy. Comment line out for all events including those which were blocked\n| where DeviceVendor =~ \"Zscaler\" and DeviceAction =~ \"Allowed\"\n// Only look where some data was exchanged. Comment out to see 0 byte connections\n| where SentBytes \u003e 0 and ReceivedBytes \u003e 0\n// Extract the Domain\n| extend Domain = iff(countof(DestinationHostName,'.') \u003e= 2, strcat(split(DestinationHostName,'.')[-2], '.',split(DestinationHostName,'.')[-1]), DestinationHostName)\n| summarize StartTimeUtc = min(TimeGenerated), EndTimeUtc = max(TimeGenerated), makelist(RequestURL), makelist(DestinationIP), makelist(SourceIP), numOfConnections = count() by Domain\n// Determine the number of URIs that have been visited for the domain\n| extend destinationURI = arraylength(list_RequestURL)\n| where destinationURI \u003c= uriThreshold\n| where tostring(list_RequestURL) has_any (\".php\",\".aspx\")\n;\nsuspiciousURLs\n| mvexpand list_RequestURL, list_DestinationIP\n| extend RequestURL = tostring(list_RequestURL), DestinationIP = tostring(list_DestinationIP), ClientIP = tostring(list_SourceIP)\n| extend timestamp = StartTimeUtc, IPCustomEntity = DestinationIP\n| project-away list_RequestURL, list_DestinationIP, list_SourceIP, destinationURI, Domain, StartTimeUtc, EndTimeUtc, numOfConnections \n",
                                             "version":  "1.0"
                                         },
                          "name":  "[concat(parameters('workspacename'), '/' , 'sentinel_CEF_query_9')]",
                          "apiVersion":  "2020-03-01-preview",
                          "type":  "Microsoft.OperationalInsights/workspaces/savedSearches",
                          "location":  "[parameters('location')]"
                      },
                      {
                          "properties":  {
                                             "category":  "Sentinel-CEF-Detection-Medium",
                                             "displayName":  "IP with multiple failed Azure AD logins successfully logs in to Palo Alto VPN",
                                             "query":  "//This query creates a list of IP addresses with a number failed login attempts to AAD \n//above a set threshold.  It then looks for any successful Palo Alto VPN logins from any\n//of these IPs within the same timeframe.\n//\nlet timeframe = 1d;\n//Set a threshold of failed AAD signins from an IP address within 1 day above which we want to deem those logins suspicious.\nlet signin_threshold = 5; \n//Make a list of IPs with AAD signin failures above our threshold.\nlet suspicious_signins = \n    SigninLogs\n    | where TimeGenerated \u003e= ago(timeframe)\n    //Looking for logon failure results\n    | where ResultType !in (\"0\", \"50125\", \"50140\")\n    //Exclude localhost addresses to reduce the chance of FPs\n    | where IPAddress != \"127.0.0.1\"\n    | summarize count() by IPAddress\n    | where count_ \u003e  signin_threshold\n    | summarize make_list(IPAddress);\n//See if any of those IPs have sucessfully logged into PA VPNs during the same timeperiod\nCommonSecurityLog\n    | where TimeGenerated \u003e ago(timeframe)\n    //Select only PA VPN sucessful logons\n    | where DeviceVendor == \"Palo Alto Networks\" and DeviceEventClassID == \"globalprotect\"\n    | where Message has \"GlobalProtect gateway user authentication succeeded\"\n    //Parse out the logon source IP from the Message field to match on\n    | extend SourceIP = extract(\"Login from: ([^,]+)\", 1, Message) \n    | where SourceIP in (suspicious_signins)\n    | extend Reason = \"Multiple failed AAD logins from SourceIP\"\n    //Parse out other useful information from Message field\n    | extend User = extract(\"User name: ([^,]+)\", 1, Message) \n    | extend ClientOS = extract(\"Client OS version: ([^,\\\"]+)\", 1, Message)\n    | extend Location = extract(\"Source region: ([^,]{2})\",1, Message)\n    | project TimeGenerated, Reason, SourceIP, User, ClientOS, Location, Message, DeviceName, ReceiptTime, DeviceVendor, DeviceEventClassID, Computer, FileName\n    | extend AccountCustomEntity = User, IPCustomEntity = SourceIP, timestamp = TimeGenerated, HostCustomEntity = DeviceName \n",
                                             "version":  "1.0"
                                         },
                          "name":  "[concat(parameters('workspacename'), '/' , 'sentinel_CEF_query_10')]",
                          "apiVersion":  "2020-03-01-preview",
                          "type":  "Microsoft.OperationalInsights/workspaces/savedSearches",
                          "location":  "[parameters('location')]"
                      },
                      {
                          "properties":  {
                                             "category":  "Sentinel-CEF-Detection-Medium",
                                             "displayName":  "Network endpoint to host executable correlation",
                                             "query":  "//Correlates blocked URLs hosting [malicious] executables with host endpoint data\n//to identify potential instances of executables of the same name having been recently run.\n//\n\nlet timeframe = 1d;\nlet endpointData = \n(SecurityEvent\n  | where TimeGenerated \u003e= ago(timeframe) \n  | where EventID == 4688\n  | extend shortFileName = tostring(split(NewProcessName, '\\\\')[-1])\n  );\n// Correlate suspect executables seen in TrendMicro rule updates with similar activity on endpoints\nCommonSecurityLog\n| where TimeGenerated \u003e= ago(timeframe)\n| where DeviceVendor =~ \"Trend Micro\"\n| where Activity =~ \"Deny List updated\" \n| where RequestURL endswith \".exe\"\n| project TimeGenerated, Activity , RequestURL , SourceIP, DestinationIP\n| extend suspectExeName = tolower(tostring(split(RequestURL, '/')[-1]))\n| join (endpointData) on $left.suspectExeName == $right.shortFileName \n| extend timestamp = TimeGenerated, IPCustomEntity = DestinationIP, AccountCustomEntity = TargetUserName, HostCustomEntity = Computer, URLCustomEntity = RequestURL\n",
                                             "version":  "1.0"
                                         },
                          "name":  "[concat(parameters('workspacename'), '/' , 'sentinel_CEF_query_11')]",
                          "apiVersion":  "2020-03-01-preview",
                          "type":  "Microsoft.OperationalInsights/workspaces/savedSearches",
                          "location":  "[parameters('location')]"
                      },
                      {
                          "properties":  {
                                             "category":  "Sentinel-CEF-Detection-Medium",
                                             "displayName":  "Cisco - firewall block but success logon to Azure AD",
                                             "query":  "//Correlate IPs blocked by a Cisco firewall appliance with successful Azure Active Directory signins. \n//Because the IP was blocked by the firewall, that same IP logging on successfully to AAD is potentially suspect\n//and could indicate credential compromise for the user account.\n//\n\nlet PrivateIPregex = @'^127\\.|^10\\.|^172\\.1[6-9]\\.|^172\\.2[0-9]\\.|^172\\.3[0-1]\\.|^192\\.168\\.';\nlet endtime = 1d;\nCommonSecurityLog\n| where TimeGenerated \u003e= ago(endtime) \n| where DeviceVendor =~ \"Cisco\"\n| where DeviceAction =~ \"denied\"\n| extend SourceIPType = iff(SourceIP matches regex PrivateIPregex,\"private\" ,\"public\" )\n| where SourceIPType == \"public\"\n| summarize count() by SourceIP\n| join (\n    // Successful signins from IPs blocked by the firewall solution are suspect\n    // Include fully successful sign-ins, but also ones that failed only at MFA stage\n    // as that supposes the password was sucessfully guessed.\n  SigninLogs\n  | where ResultType in (\"0\", \"50074\", \"50076\") \n) on $left.SourceIP == $right.IPAddress\n| extend timestamp = TimeGenerated, IPCustomEntity = SourceIP, AccountCustomEntity = UserPrincipalName\n",
                                             "version":  "1.0"
                                         },
                          "name":  "[concat(parameters('workspacename'), '/' , 'sentinel_CEF_query_12')]",
                          "apiVersion":  "2020-03-01-preview",
                          "type":  "Microsoft.OperationalInsights/workspaces/savedSearches",
                          "location":  "[parameters('location')]"
                      },
                      {
                          "properties":  {
                                             "category":  "Sentinel-CEF-Hunting-Common",
                                             "displayName":  "Failed Login Attempt by Expired account",
                                             "query":  "//This query looks at Account Logon events found through Windows Event Ids as well as SigninLogs to discover \n//login attempts by accounts that have expired.\n//\n\nlet timeframe = 1d;\n(union isfuzzy=true\n(SecurityEvent\n| where TimeGenerated \u003e= ago(timeframe) \n| where EventID == 4625\n//4625: An account failed to log on\n| where AccountType == 'User' \n| where SubStatus == '0xc0000193' \n| extend Reason = \ncase\n( SubStatus == '0xc0000193', 'Windows EventID (4625) - Account has expired', \"Unknown\")\n| project Computer, Account,  Reason , TimeGenerated\n),\n(\nSecurityEvent\n| where TimeGenerated \u003e= ago(timeframe) \n| where EventID == 4769\n//4769: A Kerberos service ticket was requested ( Kerberos Auth)\n| parse EventData with * 'Status\"\u003e' Status \"\u003c\" *\n| parse EventData with * 'TargetUserName\"\u003e' TargetUserName \"\u003c\" *\n| where Status == '0x12'\n| where TargetUserName !has \"$\" and isnotempty(TargetUserName)\n| extend Reason = \ncase(\nStatus == '0x12', 'Windows EventID (4769) - Account disabled, expired, locked out',\n'Unknown'), Account = TargetUserName \n| project Computer, Account, Reason , TimeGenerated\n),\n(\nSecurityEvent\n| where TimeGenerated \u003e= ago(timeframe) \n| where EventID == 4776 \n// 4776: The domain controller attempted to validate the credentials for an account ( NTLM Auth)\n| where Status == \"0xc0000193\"\n| extend Reason = \ncase(\nErrorCode == '0xc0000193', 'Windows EventID (4776) - Account has expired',\n'Unknown'), Account = TargetAccount \n| parse EventData with * 'Workstation\"\u003e' Workstation \"\u003c\" *\n| extend Workstation = trim_start(@\"[\\\\]*\", Workstation)\n| extend Computer = iff(isnotempty(Workstation), Workstation, Computer ) \n| project Computer, Account, Reason , TimeGenerated\n) ,\n(\nSigninLogs\n| where TimeGenerated \u003e= ago(timeframe) \n| where ResultType == \"50057\" \n| extend Reason = \ncase(\nResultType == '50057', 'SigninLogs( Result Code- 50057) - User account is disabled. The account has been disabled by an administrator.',\n'Unknown'), Account = UserPrincipalName \n| project Computer, Account, Reason , TimeGenerated\n) )\n| summarize StartTimeUtc = min(TimeGenerated), EndTImeUtc = max(TimeGenerated), EventCount = count() by Computer, Account, Reason\n| extend timestamp = StartTimeUtc, AccountCustomEntity = Account, HostCustomEntity = Computer\n| order by EventCount desc \n",
                                             "version":  "1.0"
                                         },
                          "name":  "[concat(parameters('workspacename'), '/' , 'sentinel_CEF_query_13')]",
                          "apiVersion":  "2020-03-01-preview",
                          "type":  "Microsoft.OperationalInsights/workspaces/savedSearches",
                          "location":  "[parameters('location')]"
                      },
                      {
                          "properties":  {
                                             "category":  "Sentinel-CEF-Hunting-Common",
                                             "displayName":  "Retrospective hunt for STRONTIUM IP IOCs",
                                             "query":  "//Matches domain name IOCs related to Strontium group activity with CommonSecurityLog and SecurityAlert dataTypes.\n//The query is scoped in the time window that these IOCs were active.\n//References: https://blogs.microsoft.com/on-the-issues/2019/07/17/new-cyberthreats-require-new-ways-to-protect-democracy.\n//\n\nlet STRONTIUM_IPS = dynamic([\"82.118.242.171\" , \"167.114.153.55\" , \"94.237.37.28\", \"31.220.61.251\" , \"128.199.199.187\" ]);\n(union isfuzzy=true\n(CommonSecurityLog\n| where TimeGenerated between (startofday(datetime(2019-02-01)) .. endofday(datetime(2019-08-05)))\n| where SourceIP in (STRONTIUM_IPS) or DestinationIP in (STRONTIUM_IPS)\n| extend IPCustomEntity = SourceIP\n),\n(SecurityAlert\n| where TimeGenerated between (startofday(datetime(2019-02-01)) .. endofday(datetime(2019-08-05)))\n| extend RemoteAddress = iff(ExtendedProperties has \"RemoteAddress\", tostring(parse_json(ExtendedProperties)[\"RemoteAddress\"]), \"None\")\n| where RemoteAddress != \"None\"\n| where RemoteAddress in (STRONTIUM_IPS)\n| extend IPCustomEntity = RemoteAddress\n) \n)\n| extend timestamp = TimeGenerated\n",
                                             "version":  "1.0"
                                         },
                          "name":  "[concat(parameters('workspacename'), '/' , 'sentinel_CEF_query_14')]",
                          "apiVersion":  "2020-03-01-preview",
                          "type":  "Microsoft.OperationalInsights/workspaces/savedSearches",
                          "location":  "[parameters('location')]"
                      },
                      {
                          "name":  "[parameters('security - Cisco_id')]",
                          "properties":  {
                                             "displayName":  "security -  analyzer on Cisco CEF Trace",
                                             "serializedData":  "{   \"version\": \"Notebook/1.0\",   \"items\": [     {       \"type\": 1,       \"content\": {         \"json\": \"## Cisco\"       },       \"name\": \"text - 2\"     },     {       \"type\": 9,       \"content\": {         \"version\": \"KqlParameterItem/1.0\",         \"query\": \"\",         \"crossComponentResources\": [],         \"parameters\": [           {             \"id\": \"94910267-b8f6-4b30-aa2f-e5780ad9738e\",             \"version\": \"KqlParameterItem/1.0\",             \"name\": \"TimeRange\",             \"type\": 4,             \"isRequired\": true,             \"value\": {               \"durationMs\": 7776000000             },             \"typeSettings\": {               \"selectableValues\": [                 {                   \"durationMs\": 300000                 },                 {                   \"durationMs\": 900000                 },                 {                   \"durationMs\": 1800000                 },                 {                   \"durationMs\": 3600000                 },                 {                   \"durationMs\": 14400000                 },                 {                   \"durationMs\": 43200000                 },                 {                   \"durationMs\": 86400000                 },                 {                   \"durationMs\": 172800000                 },                 {                   \"durationMs\": 259200000                 },                 {                   \"durationMs\": 604800000                 },                 {                   \"durationMs\": 1209600000                 },                 {                   \"durationMs\": 2419200000                 },                 {                   \"durationMs\": 2592000000                 },                 {                   \"durationMs\": 5184000000                 },                 {                   \"durationMs\": 7776000000                 }               ],               \"allowCustom\": true             }           },           {             \"id\": \"bb491a9f-3089-4a2e-a6de-e7efbc77e7f6\",             \"version\": \"KqlParameterItem/1.0\",             \"name\": \"DeviceAddress\",             \"label\": \"Device Address\",             \"type\": 2,             \"isRequired\": true,             \"multiSelect\": true,             \"quote\": \"'\",             \"delimiter\": \",\",             \"query\": \"CommonSecurityLog\\r\\n| where DeviceProduct =~ 'ASA'\\r\\n| where DeviceVendor =~ 'Cisco'\\r\\n| distinct DeviceAddress\",             \"value\": [               \"value::all\"             ],             \"typeSettings\": {               \"additionalResourceOptions\": [                 \"value::all\"               ],               \"selectAllValue\": \"All\"             },             \"timeContext\": {               \"durationMs\": 0             },             \"timeContextFromParameter\": \"TimeRange\",             \"queryType\": 0,             \"resourceType\": \"microsoft.operationalinsights/workspaces\"           }         ],         \"style\": \"pills\",         \"queryType\": 0,         \"resourceType\": \"microsoft.operationalinsights/workspaces\"       },       \"name\": \"parameters - 1\"     },     {       \"type\": 3,       \"content\": {         \"version\": \"KqlItem/1.0\",         \"query\": \"//Count by Action\\r\\nlet data = CommonSecurityLog\\r\\n| where DeviceProduct =~ 'ASA'\\r\\n| where DeviceVendor =~ 'Cisco'\\r\\n| where DeviceAction != ''\\r\\n| where \\\"{DeviceAddress:lable}\\\" == \\\"All\\\" or DeviceAddress in ({DeviceAddress});\\r\\ndata\\r\\n| summarize Count = count() by SimplifiedDeviceAction\\r\\n| join kind = inner (data\\r\\n | make-series Trend = count() default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step {TimeRange:grain} by SimplifiedDeviceAction)\\r\\n on SimplifiedDeviceAction\\r\\n| project-away SimplifiedDeviceAction1, TimeGenerated\\r\\n| extend SimplifiedDeviceActions = SimplifiedDeviceAction\\r\\n| union (\\r\\n data \\r\\n | summarize Count = count() \\r\\n | extend jkey = 1\\r\\n | join kind=inner (data\\r\\n | make-series Trend = count() default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step {TimeRange:grain}\\r\\n | extend jkey = 1) on jkey\\r\\n | extend SimplifiedDeviceAction = 'All', SimplifiedDeviceActions = '*' \\r\\n)\\r\\n| order by Count desc\\r\\n| take 10\",         \"size\": 3,         \"exportFieldName\": \"SimplifiedDeviceAction\",         \"exportParameterName\": \"SelectedDeviceAction\",         \"exportDefaultValue\": \"All\",         \"exportToExcelOptions\": \"visible\",         \"title\": \"Events, by action\",         \"timeContext\": {           \"durationMs\": 0         },         \"timeContextFromParameter\": \"TimeRange\",         \"queryType\": 0,         \"resourceType\": \"microsoft.operationalinsights/workspaces\",         \"visualization\": \"tiles\",         \"tileSettings\": {           \"titleContent\": {             \"columnMatch\": \"SimplifiedDeviceAction\",             \"formatter\": 1,             \"formatOptions\": {               \"showIcon\": true             }           },           \"leftContent\": {             \"columnMatch\": \"Count\",             \"formatter\": 12,             \"formatOptions\": {               \"palette\": \"auto\",               \"showIcon\": true             },             \"numberFormat\": {               \"unit\": 17,               \"options\": {                 \"maximumSignificantDigits\": 3,                 \"maximumFractionDigits\": 2               }             }           },           \"secondaryContent\": {             \"columnMatch\": \"Trend\",             \"formatter\": 9,             \"formatOptions\": {               \"showIcon\": true             }           },           \"showBorder\": false         }       },       \"customWidth\": \"33\",       \"name\": \"Events by action\"     },     {       \"type\": 3,       \"content\": {         \"version\": \"KqlItem/1.0\",         \"query\": \"//Count by Severity\\r\\nlet data = CommonSecurityLog\\r\\n| where DeviceProduct =~ 'ASA'\\r\\n| where DeviceVendor =~ 'Cisco'\\r\\n| where \\\"{DeviceAddress:lable}\\\" == \\\"All\\\" or DeviceAddress in ({DeviceAddress});\\r\\ndata\\r\\n| summarize Count = count() by LogSeverity\\r\\n| join kind = inner (data\\r\\n | make-series Trend = count() default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step {TimeRange:grain} by LogSeverity)\\r\\n on LogSeverity\\r\\n| project-away LogSeverity1, TimeGenerated\\r\\n| extend LogSeveritys = LogSeverity\\r\\n| union (\\r\\n data \\r\\n | summarize Count = count() \\r\\n | extend jkey = 1\\r\\n | join kind=inner (data\\r\\n | make-series Trend = count() default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step {TimeRange:grain}\\r\\n | extend jkey = 1) on jkey\\r\\n | extend LogSeverity = 'All', LogSeveritys = '*' \\r\\n)\\r\\n| order by Count desc, LogSeverity asc\\r\\n| take 10\",         \"size\": 3,         \"exportFieldName\": \"LogSeverity\",         \"exportParameterName\": \"SelectedLogSeverity\",         \"exportDefaultValue\": \"All\",         \"exportToExcelOptions\": \"visible\",         \"title\": \"Severity, by volume\",         \"timeContext\": {           \"durationMs\": 0         },         \"timeContextFromParameter\": \"TimeRange\",         \"queryType\": 0,         \"resourceType\": \"microsoft.operationalinsights/workspaces\",         \"visualization\": \"tiles\",         \"tileSettings\": {           \"titleContent\": {             \"columnMatch\": \"LogSeverity\",             \"formatter\": 1,             \"formatOptions\": {               \"showIcon\": true             }           },           \"leftContent\": {             \"columnMatch\": \"Count\",             \"formatter\": 12,             \"formatOptions\": {               \"palette\": \"auto\",               \"showIcon\": true             },             \"numberFormat\": {               \"unit\": 17,               \"options\": {                 \"maximumSignificantDigits\": 3,                 \"maximumFractionDigits\": 2               }             }           },           \"secondaryContent\": {             \"columnMatch\": \"Trend\",             \"formatter\": 9,             \"formatOptions\": {               \"showIcon\": true             }           },           \"showBorder\": false,           \"sortCriteriaField\": \"LogSeverity\",           \"sortOrderField\": 1         }       },       \"customWidth\": \"33\",       \"name\": \"Severity by volume\"     },     {       \"type\": 3,       \"content\": {         \"version\": \"KqlItem/1.0\",         \"query\": \"//volume by time\\r\\nCommonSecurityLog\\r\\n| where DeviceVendor =~ 'Cisco'\\r\\n| where DeviceProduct =~ 'ASA'\\r\\n| where \\\"{DeviceAddress:lable}\\\" == \\\"All\\\" or DeviceAddress in ({DeviceAddress})\\r\\n| where '{SelectedDeviceAction}' == \\\"All\\\" or '{SelectedDeviceAction}' == SimplifiedDeviceAction\\r\\n| where '{SelectedLogSeverity}' == \\\"All\\\" or '{SelectedLogSeverity}' == LogSeverity\\r\\n| summarize Volme=count() by bin(TimeGenerated,{TimeRange:grain})\",         \"size\": 0,         \"exportToExcelOptions\": \"visible\",         \"title\": \"Event trends, by time\",         \"timeContext\": {           \"durationMs\": 0         },         \"timeContextFromParameter\": \"TimeRange\",         \"queryType\": 0,         \"resourceType\": \"microsoft.operationalinsights/workspaces\",         \"visualization\": \"timechart\"       },       \"customWidth\": \"50\",       \"name\": \"Severity\"     },     {       \"type\": 3,       \"content\": {         \"version\": \"KqlItem/1.0\",         \"query\": \"//volume by time\\r\\nCommonSecurityLog\\r\\n| where DeviceVendor =~ 'Cisco'\\r\\n| where DeviceProduct =~ 'ASA'\\r\\n| where \\\"{DeviceAddress:lable}\\\" == \\\"All\\\" or DeviceAddress in ({DeviceAddress})\\r\\n| where '{SelectedDeviceAction}' == \\\"All\\\" or '{SelectedDeviceAction}' == SimplifiedDeviceAction\\r\\n| where '{SelectedLogSeverity}' == \\\"All\\\" or '{SelectedLogSeverity}' == LogSeverity\\r\\n| summarize Volume=count() by LogSeverity, bin(TimeGenerated, {TimeRange:grain})\",         \"size\": 0,         \"exportToExcelOptions\": \"visible\",         \"title\": \"Event severity, by time\",         \"timeContext\": {           \"durationMs\": 0         },         \"timeContextFromParameter\": \"TimeRange\",         \"queryType\": 0,         \"resourceType\": \"microsoft.operationalinsights/workspaces\",         \"visualization\": \"timechart\"       },       \"customWidth\": \"50\",       \"name\": \"Event severity by time\"     },     {       \"type\": 3,       \"content\": {         \"version\": \"KqlItem/1.0\",         \"query\": \"CommonSecurityLog\\r\\n| where DeviceProduct =~ 'ASA'\\r\\n| where DeviceVendor =~ 'Cisco'\\r\\n| where '{DeviceAddress:label}' == \\\"All\\\" or DeviceAddress in ({DeviceAddress})\\r\\n| where '{SelectedDeviceAction}' == \\\"All\\\" or '{SelectedDeviceAction}' == SimplifiedDeviceAction\\r\\n| where '{SelectedLogSeverity}' == \\\"All\\\" or '{SelectedLogSeverity}' == LogSeverity\\r\\n| project TimeGenerated, LogSeverity, DeviceAction, SimplifiedDeviceAction, DeviceAddress, DestinationPort, DestinationIP, Message, Protocol, SourcePort, SourceIP\\r\\n| sort by TimeGenerated desc\",         \"size\": 0,         \"exportToExcelOptions\": \"visible\",         \"title\": \"All events, by time\",         \"timeContext\": {           \"durationMs\": 0         },         \"timeContextFromParameter\": \"TimeRange\",         \"queryType\": 0,         \"resourceType\": \"microsoft.operationalinsights/workspaces\",         \"visualization\": \"table\",         \"gridSettings\": {           \"filter\": true,           \"labelSettings\": []         }       },       \"name\": \"All events, by time\"     },     {       \"type\": 1,       \"content\": {         \"json\": \"---\"       },       \"name\": \"text - 6\"     },     {       \"type\": 3,       \"content\": {         \"version\": \"KqlItem/1.0\",         \"query\": \"//no. of concurrent sessions\\r\\nCommonSecurityLog\\r\\n| where DeviceProduct =~ 'ASA'\\r\\n| where DeviceVendor =~ 'Cisco'\\r\\n| where '{DeviceAddress:label}' == \\\"All\\\" or DeviceAddress in ({DeviceAddress})\\r\\n| where DeviceEventClassID  == '302010'\\r\\n| extend ConcurrentSession= extract('%ASA-6-302010: ([0-9]*?) in use,',1,Message)\\r\\n| summarize AvgSession=avg(toint(ConcurrentSession)) by TimeGenerated\",         \"size\": 0,         \"exportToExcelOptions\": \"visible\",         \"title\": \"Average concurrent sessions, by time\",         \"timeContext\": {           \"durationMs\": 0         },         \"timeContextFromParameter\": \"TimeRange\",         \"queryType\": 0,         \"resourceType\": \"microsoft.operationalinsights/workspaces\",         \"visualization\": \"timechart\"       },       \"customWidth\": \"33\",       \"name\": \"concurrent\"     },     {       \"type\": 3,       \"content\": {         \"version\": \"KqlItem/1.0\",         \"query\": \"//Max Sessions\\r\\nCommonSecurityLog\\r\\n| where DeviceProduct =~ 'ASA'\\r\\n| where DeviceVendor =~ 'Cisco'\\r\\n| where '{DeviceAddress:label}' == \\\"All\\\" or DeviceAddress in ({DeviceAddress})\\r\\n| where DeviceEventClassID  == '302010'\\r\\n| extend MaxSessions= extract('%ASA-6-302010:.*, ([0-9].*?) most used',1,Message)\\r\\n| summarize AvgSession=avg(toint(MaxSessions)) by TimeGenerated\\r\\n\",         \"size\": 0,         \"exportToExcelOptions\": \"visible\",         \"title\": \"Average max concurrent sessions, by time\",         \"timeContext\": {           \"durationMs\": 0         },         \"timeContextFromParameter\": \"TimeRange\",         \"queryType\": 0,         \"resourceType\": \"microsoft.operationalinsights/workspaces\",         \"visualization\": \"timechart\"       },       \"customWidth\": \"33\",       \"name\": \"max concurrent\"     },     {       \"type\": 3,       \"content\": {         \"version\": \"KqlItem/1.0\",         \"query\": \"//top 5 reason for packet drop\\r\\nCommonSecurityLog\\r\\n| where DeviceProduct =~ 'ASA'\\r\\n| where DeviceVendor =~ 'Cisco'\\r\\n| where '{DeviceAddress:label}' == \\\"All\\\" or DeviceAddress in ({DeviceAddress})\\r\\n| where DeviceEventClassID == '733100'\\r\\n| extend TrafficType= extract('%ASA-4-733100: \\\\\\\\[(.*?)\\\\\\\\]',1,Message)\\r\\n| project TrafficType\\r\\n| summarize AttackCount=count() by TrafficType\\r\\n| top 5 by AttackCount desc\",         \"size\": 0,         \"exportToExcelOptions\": \"visible\",         \"title\": \"Top 5 reasons for packet drop\",         \"timeContext\": {           \"durationMs\": 0         },         \"timeContextFromParameter\": \"TimeRange\",         \"queryType\": 0,         \"resourceType\": \"microsoft.operationalinsights/workspaces\",         \"gridSettings\": {           \"formatters\": [             {               \"columnMatch\": \"TrafficType\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"AttackCount\",               \"formatter\": 4,               \"formatOptions\": {                 \"palette\": \"coldHot\",                 \"showIcon\": true               }             }           ],           \"labelSettings\": []         }       },       \"customWidth\": \"30\",       \"name\": \"Top 5 reasons for packet drop\"     },     {       \"type\": 1,       \"content\": {         \"json\": \"---\\r\\n## Firewall log trends and activities\"       },       \"name\": \"text - 14\"     },     {       \"type\": 3,       \"content\": {         \"version\": \"KqlItem/1.0\",         \"query\": \"//Communication direction count by time\\r\\nCommonSecurityLog\\r\\n| where DeviceProduct =~ 'ASA'\\r\\n| where DeviceVendor =~ 'Cisco'\\r\\n| where '{DeviceAddress:label}' == \\\"All\\\" or DeviceAddress in ({DeviceAddress})\\r\\n| where CommunicationDirection != ''\\r\\n| summarize DirectionVolume=count() by CommunicationDirection, bin(TimeGenerated, {TimeRange:grain})\",         \"size\": 0,         \"exportToExcelOptions\": \"visible\",         \"title\": \"Inbound Outbound Time Trend\",         \"timeContext\": {           \"durationMs\": 0         },         \"timeContextFromParameter\": \"TimeRange\",         \"queryType\": 0,         \"resourceType\": \"microsoft.operationalinsights/workspaces\",         \"visualization\": \"timechart\"       },       \"customWidth\": \"25\",       \"name\": \"Inbound Outbound Time Trend\"     },     {       \"type\": 3,       \"content\": {         \"version\": \"KqlItem/1.0\",         \"query\": \"//out bound\\r\\nCommonSecurityLog\\r\\n| where DeviceProduct =~ 'ASA'\\r\\n| where DeviceVendor =~ 'Cisco'\\r\\n| where '{DeviceAddress:label}' == \\\"All\\\" or DeviceAddress in ({DeviceAddress})\\r\\n| where CommunicationDirection contains   'outbound'\\r\\n| summarize TrafficVolume=count() by SimplifiedDeviceAction, TimeGenerated\\r\\n\",         \"size\": 0,         \"exportToExcelOptions\": \"visible\",         \"title\": \"Outbound traffic connection, by time\",         \"timeContext\": {           \"durationMs\": 0         },         \"timeContextFromParameter\": \"TimeRange\",         \"queryType\": 0,         \"resourceType\": \"microsoft.operationalinsights/workspaces\",         \"visualization\": \"timechart\"       },       \"customWidth\": \"25\",       \"name\": \"Outbound traffic connection by time\"     },     {       \"type\": 3,       \"content\": {         \"version\": \"KqlItem/1.0\",         \"query\": \"//allowd vs denied for in bound\\r\\nCommonSecurityLog\\r\\n| where DeviceProduct =~ 'ASA'\\r\\n| where DeviceVendor =~ 'Cisco'\\r\\n| where '{DeviceAddress:label}' == \\\"All\\\" or DeviceAddress in ({DeviceAddress})\\r\\n| where CommunicationDirection contains   'inbound'\\r\\n| where SimplifiedDeviceAction in ('Deny', 'Allow')\\r\\n| summarize TrafficVolume=count() by SimplifiedDeviceAction, TimeGenerated\",         \"size\": 0,         \"exportToExcelOptions\": \"visible\",         \"title\": \"Inbound traffic events, by time\",         \"timeContext\": {           \"durationMs\": 0         },         \"timeContextFromParameter\": \"TimeRange\",         \"queryType\": 0,         \"resourceType\": \"microsoft.operationalinsights/workspaces\",         \"visualization\": \"timechart\"       },       \"customWidth\": \"25\",       \"name\": \"Inbound traffic events by time\"     },     {       \"type\": 3,       \"content\": {         \"version\": \"KqlItem/1.0\",         \"query\": \"//Communication direction count\\r\\nCommonSecurityLog\\r\\n| where DeviceProduct =~ 'ASA'\\r\\n| where DeviceVendor =~ 'Cisco'\\r\\n| where '{DeviceAddress:label}' == \\\"All\\\" or DeviceAddress in ({DeviceAddress})\\r\\n| where CommunicationDirection != ''\\r\\n| summarize DirectionVolume=count() by CommunicationDirection\\r\\n\",         \"size\": 0,         \"exportToExcelOptions\": \"visible\",         \"title\": \"Summary of inbound and outbound traffic\",         \"timeContext\": {           \"durationMs\": 0         },         \"timeContextFromParameter\": \"TimeRange\",         \"queryType\": 0,         \"resourceType\": \"microsoft.operationalinsights/workspaces\",         \"visualization\": \"timechart\"       },       \"customWidth\": \"25\",       \"name\": \"Summary of inbound and outbound traffic\"     },     {       \"type\": 1,       \"content\": {         \"json\": \"---\\r\\n## Top 5 allowed and blocked ports\"       },       \"name\": \"text - 15\"     },     {       \"type\": 3,       \"content\": {         \"version\": \"KqlItem/1.0\",         \"query\": \"//top 5 port inbound Allow \\r\\nCommonSecurityLog \\r\\n| where DeviceProduct =~ 'ASA' \\r\\n| where DeviceVendor =~ 'Cisco' \\r\\n| where '{DeviceAddress:label}' == \\\"All\\\" or DeviceAddress in ({DeviceAddress})\\r\\n| where DeviceEventClassID == '106100'  \\r\\n | where SimplifiedDeviceAction == 'Allow' \\r\\n//| where Message contains ' -\u003e inside'  \\r\\n| extend DestinationPortS=tostring(DestinationPort)   \\r\\n| summarize PortCount=count() by DestinationPortS \\r\\n| top 5 by PortCount desc\",         \"size\": 0,         \"exportToExcelOptions\": \"visible\",         \"title\": \"Top 5 allowed inbound ports\",         \"timeContext\": {           \"durationMs\": 0         },         \"timeContextFromParameter\": \"TimeRange\",         \"queryType\": 0,         \"resourceType\": \"microsoft.operationalinsights/workspaces\",         \"gridSettings\": {           \"formatters\": [             {               \"columnMatch\": \"DestinationPortS\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"PortCount\",               \"formatter\": 4,               \"formatOptions\": {                 \"showIcon\": true               }             }           ],           \"labelSettings\": []         }       },       \"customWidth\": \"25\",       \"name\": \"Top 5 allowed inbound ports\"     },     {       \"type\": 3,       \"content\": {         \"version\": \"KqlItem/1.0\",         \"query\": \"//top 5 port inbound deny\\r\\nCommonSecurityLog\\r\\n| where DeviceProduct =~ 'ASA'\\r\\n| where DeviceVendor =~ 'Cisco'\\r\\n| where '{DeviceAddress:label}' == \\\"All\\\" or DeviceAddress in ({DeviceAddress})\\r\\n| where CommunicationDirection contains   'inbound'\\r\\n  | where SimplifiedDeviceAction == 'Deny'\\r\\n| extend DestinationPortS=tostring(DestinationPort)\\r\\n| summarize PortCount=count() by DestinationPortS\\r\\n| top 5 by PortCount desc\",         \"size\": 0,         \"exportToExcelOptions\": \"visible\",         \"title\": \"Top 5 blocked inbound ports\",         \"timeContext\": {           \"durationMs\": 0         },         \"timeContextFromParameter\": \"TimeRange\",         \"queryType\": 0,         \"resourceType\": \"microsoft.operationalinsights/workspaces\",         \"gridSettings\": {           \"formatters\": [             {               \"columnMatch\": \"DestinationPortS\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"PortCount\",               \"formatter\": 4,               \"formatOptions\": {                 \"showIcon\": true               }             }           ],           \"labelSettings\": []         }       },       \"customWidth\": \"25\",       \"name\": \"Top 5 blocked inbound ports\"     },     {       \"type\": 3,       \"content\": {         \"version\": \"KqlItem/1.0\",         \"query\": \"//top 5 port outbound Allow\\r\\nCommonSecurityLog\\r\\n| where DeviceProduct =~ 'ASA'\\r\\n| where DeviceVendor =~ 'Cisco'\\r\\n| where '{DeviceAddress:label}' == \\\"All\\\" or DeviceAddress in ({DeviceAddress})\\r\\n| where DeviceEventClassID == '106100'\\r\\n | where SimplifiedDeviceAction == 'Allow'\\r\\n//| where Message contains ' -\u003e management'\\r\\n| extend DestinationPortS=tostring(DestinationPort)\\r\\n| summarize PortCount=count() by DestinationPortS\\r\\n| top 5 by PortCount desc\\r\\n\",         \"size\": 0,         \"exportToExcelOptions\": \"visible\",         \"title\": \"Top 5 allowed outbound ports\",         \"timeContext\": {           \"durationMs\": 0         },         \"timeContextFromParameter\": \"TimeRange\",         \"queryType\": 0,         \"resourceType\": \"microsoft.operationalinsights/workspaces\",         \"gridSettings\": {           \"formatters\": [             {               \"columnMatch\": \"DestinationPortS\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"PortCount\",               \"formatter\": 4,               \"formatOptions\": {                 \"showIcon\": true               }             }           ],           \"labelSettings\": []         }       },       \"customWidth\": \"25\",       \"name\": \"Top 5 allowed outbound ports\"     },     {       \"type\": 3,       \"content\": {         \"version\": \"KqlItem/1.0\",         \"query\": \"//Top 5 Outbound Ports Denied\\r\\nCommonSecurityLog\\r\\n| where DeviceProduct =~ 'ASA'\\r\\n| where DeviceVendor =~ 'Cisco'\\r\\n| where '{DeviceAddress:label}' == \\\"All\\\" or DeviceAddress in ({DeviceAddress})\\r\\n| where CommunicationDirection contains'outbound'\\r\\n| where SimplifiedDeviceAction =='Deny'\\r\\n| extend DestinationPortS=tostring(DestinationPort)\\r\\n| summarize PortCount=count() by DestinationPortS\\r\\n| top 5 by PortCount desc \",         \"size\": 0,         \"exportToExcelOptions\": \"visible\",         \"title\": \"Top 5 denied outbound ports\",         \"timeContext\": {           \"durationMs\": 0         },         \"timeContextFromParameter\": \"TimeRange\",         \"queryType\": 0,         \"resourceType\": \"microsoft.operationalinsights/workspaces\",         \"gridSettings\": {           \"formatters\": [             {               \"columnMatch\": \"DestinationPortS\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"PortCount\",               \"formatter\": 4,               \"formatOptions\": {                 \"showIcon\": true               }             }           ],           \"labelSettings\": []         }       },       \"customWidth\": \"25\",       \"name\": \"Top 5 denied outbound ports\"     },     {       \"type\": 1,       \"content\": {         \"json\": \"---\\r\\n## Top 5 allowed and blocked IP addresses\"       },       \"name\": \"text - 20\"     },     {       \"type\": 3,       \"content\": {         \"version\": \"KqlItem/1.0\",         \"query\": \"//top 5 protocol Deny\\r\\nCommonSecurityLog\\r\\n| where DeviceProduct =~ 'ASA'\\r\\n| where DeviceVendor =~ 'Cisco'\\r\\n| where '{DeviceAddress:label}' == \\\"All\\\" or DeviceAddress in ({DeviceAddress})\\r\\n| where Protocol != ''\\r\\n| where SimplifiedDeviceAction == 'Deny'\\r\\n| summarize ProtocolCount= count() by Protocol\\r\\n| top 5 by ProtocolCount\\r\\n\",         \"size\": 0,         \"exportToExcelOptions\": \"visible\",         \"title\": \"Top 5 denied protocols\",         \"timeContext\": {           \"durationMs\": 0         },         \"timeContextFromParameter\": \"TimeRange\",         \"queryType\": 0,         \"resourceType\": \"microsoft.operationalinsights/workspaces\",         \"visualization\": \"piechart\"       },       \"customWidth\": \"25\",       \"name\": \"Top 5 denied protocols\"     },     {       \"type\": 3,       \"content\": {         \"version\": \"KqlItem/1.0\",         \"query\": \"//top 5 protocol Allow\\r\\nCommonSecurityLog\\r\\n| where DeviceProduct =~ 'ASA'\\r\\n| where DeviceVendor =~ 'Cisco'\\r\\n| where '{DeviceAddress:label}' == \\\"All\\\" or DeviceAddress in ({DeviceAddress})\\r\\n| where Protocol != ''\\r\\n| where SimplifiedDeviceAction == 'Allow'\\r\\n| summarize ProtocolCount= count() by Protocol\\r\\n| top 5 by ProtocolCount\",         \"size\": 0,         \"exportToExcelOptions\": \"visible\",         \"title\": \"Top 5 allowed protocols\",         \"timeContext\": {           \"durationMs\": 0         },         \"timeContextFromParameter\": \"TimeRange\",         \"queryType\": 0,         \"resourceType\": \"microsoft.operationalinsights/workspaces\",         \"visualization\": \"piechart\"       },       \"customWidth\": \"25\",       \"name\": \"Top 5 allowed protocols\"     },     {       \"type\": 3,       \"content\": {         \"version\": \"KqlItem/1.0\",         \"query\": \"//Top 5 Inbound Destination IP Addresses Blocked \\r\\nCommonSecurityLog \\r\\n| where DeviceProduct =~ 'ASA' \\r\\n| where DeviceVendor =~ 'Cisco' \\r\\n| where '{DeviceAddress:label}' == \\\"All\\\" or DeviceAddress in ({DeviceAddress})\\r\\n| where CommunicationDirection contains   'inbound' \\r\\n| where SimplifiedDeviceAction == 'Deny' \\r\\n| summarize IpCount= count()  by DestinationIP \\r\\n| top 5 by IpCount desc nulls last \",         \"size\": 0,         \"exportToExcelOptions\": \"visible\",         \"title\": \"Top 5 blocked inbound destination IP addresses\",         \"timeContext\": {           \"durationMs\": 0         },         \"timeContextFromParameter\": \"TimeRange\",         \"queryType\": 0,         \"resourceType\": \"microsoft.operationalinsights/workspaces\",         \"visualization\": \"table\",         \"gridSettings\": {           \"formatters\": [             {               \"columnMatch\": \"DestinationIP\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"IpCount\",               \"formatter\": 4,               \"formatOptions\": {                 \"showIcon\": true               }             }           ],           \"labelSettings\": []         }       },       \"customWidth\": \"25\",       \"name\": \"Top 5 blocked inbound destination IP addresses\"     },     {       \"type\": 3,       \"content\": {         \"version\": \"KqlItem/1.0\",         \"query\": \"//Top 5 Inbound Destination IP Addresses Allowed \\r\\nCommonSecurityLog \\r\\n| where DeviceProduct =~ 'ASA' \\r\\n| where DeviceVendor =~ 'Cisco' \\r\\n| where '{DeviceAddress:label}' == \\\"All\\\" or DeviceAddress in ({DeviceAddress})\\r\\n| where CommunicationDirection contains   'inbound' \\r\\n| where DestinationIP != '' \\r\\n| where SimplifiedDeviceAction == 'Allow' or SimplifiedDeviceAction == 'Built' \\r\\n| summarize IpCount= count()  by DestinationIP \\r\\n| top 5 by IpCount desc nulls last\",         \"size\": 0,         \"exportToExcelOptions\": \"visible\",         \"title\": \"Top 5 allowed inbound destination IP addresses\",         \"timeContext\": {           \"durationMs\": 0         },         \"timeContextFromParameter\": \"TimeRange\",         \"queryType\": 0,         \"resourceType\": \"microsoft.operationalinsights/workspaces\",         \"gridSettings\": {           \"formatters\": [             {               \"columnMatch\": \"DestinationIP\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"IpCount\",               \"formatter\": 4,               \"formatOptions\": {                 \"showIcon\": true               }             }           ],           \"labelSettings\": []         }       },       \"customWidth\": \"25\",       \"name\": \"Top 5 allowed inbound destination IP addresses\"     },     {       \"type\": 3,       \"content\": {         \"version\": \"KqlItem/1.0\",         \"query\": \"//top 5 outbound deny dst ip\\r\\nCommonSecurityLog\\r\\n| where DeviceProduct =~ 'ASA'\\r\\n| where DeviceVendor =~ 'Cisco'\\r\\n| where '{DeviceAddress:label}' == \\\"All\\\" or DeviceAddress in ({DeviceAddress})\\r\\n| where DeviceEventClassID == '106100'\\r\\n | where SimplifiedDeviceAction == 'Deny'\\r\\n//| where Message contains ' -\u003e management'\\r\\n| summarize IpCount= count()  by DestinationIP\\r\\n| top 5 by IpCount desc nulls last\\r\\n\",         \"size\": 0,         \"exportToExcelOptions\": \"visible\",         \"title\": \"Top 5 denied outbound destination IP addresses\",         \"timeContext\": {           \"durationMs\": 0         },         \"timeContextFromParameter\": \"TimeRange\",         \"queryType\": 0,         \"resourceType\": \"microsoft.operationalinsights/workspaces\",         \"gridSettings\": {           \"formatters\": [             {               \"columnMatch\": \"DestinationIP\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"IpCount\",               \"formatter\": 4,               \"formatOptions\": {                 \"showIcon\": true               }             }           ],           \"labelSettings\": []         }       },       \"customWidth\": \"25\",       \"name\": \"Top 5 denied outbound destination IP addresses\"     },     {       \"type\": 3,       \"content\": {         \"version\": \"KqlItem/1.0\",         \"query\": \"//top 5 outbound Allow dst ip\\r\\nCommonSecurityLog\\r\\n| where DeviceProduct =~ 'ASA'\\r\\n| where DeviceVendor =~ 'Cisco'\\r\\n| where '{DeviceAddress:label}' == \\\"All\\\" or DeviceAddress in ({DeviceAddress})\\r\\n| where DeviceEventClassID == '106100'\\r\\n | where SimplifiedDeviceAction == 'Allow'\\r\\n | where Message contains ' -\u003e management'\\r\\n| summarize IpCount= count()  by DestinationIP\\r\\n| top 5 by IpCount desc nulls last\\r\\n\",         \"size\": 0,         \"exportToExcelOptions\": \"visible\",         \"title\": \"Top 5 allowed outbound destination IP addresses\",         \"timeContext\": {           \"durationMs\": 0         },         \"timeContextFromParameter\": \"TimeRange\",         \"queryType\": 0,         \"resourceType\": \"microsoft.operationalinsights/workspaces\",         \"gridSettings\": {           \"formatters\": [             {               \"columnMatch\": \"DestinationIP\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"IpCount\",               \"formatter\": 4,               \"formatOptions\": {                 \"showIcon\": true               }             }           ],           \"labelSettings\": []         }       },       \"customWidth\": \"25\",       \"name\": \"Top 5 allowed outbound destination IP addresses\"     },     {       \"type\": 3,       \"content\": {         \"version\": \"KqlItem/1.0\",         \"query\": \"//Top 5 Inbound Source IP Addresses Denied \\r\\nCommonSecurityLog \\r\\n| where DeviceProduct =~ 'ASA' \\r\\n| where DeviceVendor =~ 'Cisco' \\r\\n| where '{DeviceAddress:label}' == \\\"All\\\" or DeviceAddress in ({DeviceAddress})\\r\\n| where CommunicationDirection contains   'inbound' \\r\\n| where SimplifiedDeviceAction == 'Deny' \\r\\n| summarize IpCount= count()  by SourceIP \\r\\n| top 5 by IpCount desc nulls last\",         \"size\": 0,         \"exportToExcelOptions\": \"visible\",         \"title\": \"Top 5 denied inbound source IP addresses\",         \"timeContext\": {           \"durationMs\": 0         },         \"timeContextFromParameter\": \"TimeRange\",         \"queryType\": 0,         \"resourceType\": \"microsoft.operationalinsights/workspaces\",         \"gridSettings\": {           \"formatters\": [             {               \"columnMatch\": \"SourceIP\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"IpCount\",               \"formatter\": 4,               \"formatOptions\": {                 \"showIcon\": true               }             }           ],           \"labelSettings\": []         }       },       \"customWidth\": \"25\",       \"name\": \"Top 5 denied inbound source IP addresses\"     },     {       \"type\": 3,       \"content\": {         \"version\": \"KqlItem/1.0\",         \"query\": \"//Top 5 Outbound Source IP Addresses Allowed \\r\\nCommonSecurityLog \\r\\n| where DeviceProduct =~ 'ASA' \\r\\n| where DeviceVendor =~ 'Cisco' \\r\\n| where '{DeviceAddress:label}' == \\\"All\\\" or DeviceAddress in ({DeviceAddress})\\r\\n| where CommunicationDirection contains   'outbound' \\r\\n| where SimplifiedDeviceAction == 'Built' \\r\\n| summarize IpCount= count()  by SourceIP \\r\\n| top 5 by IpCount desc nulls last\",         \"size\": 0,         \"exportToExcelOptions\": \"visible\",         \"title\": \"Top 5 allowed outbound source IP addresses\",         \"timeContext\": {           \"durationMs\": 0         },         \"timeContextFromParameter\": \"TimeRange\",         \"queryType\": 0,         \"resourceType\": \"microsoft.operationalinsights/workspaces\",         \"gridSettings\": {           \"formatters\": [             {               \"columnMatch\": \"SourceIP\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"IpCount\",               \"formatter\": 4,               \"formatOptions\": {                 \"showIcon\": true               }             }           ],           \"labelSettings\": []         }       },       \"customWidth\": \"25\",       \"name\": \"Top 5 allowed outbound source IP addresses\"     },     {       \"type\": 1,       \"content\": {         \"json\": \"---\\r\\n## Firewall management\"       },       \"name\": \"text - 29\"     },     {       \"type\": 3,       \"content\": {         \"version\": \"KqlItem/1.0\",         \"query\": \"//Top 5 Source IP Addresses By Failed Authentication \\r\\nCommonSecurityLog \\r\\n| where DeviceProduct =~ 'ASA' \\r\\n| where DeviceVendor =~ 'Cisco' \\r\\n| where '{DeviceAddress:label}' == \\\"All\\\" or DeviceAddress in ({DeviceAddress})\\r\\n| where DeviceEventClassID == '611102' \\r\\n| extend IPAddress= extract('%ASA-6-611102:.*: IP address: (.*?), Uname.*',1,Message) \\r\\n| summarize IPAddressCount=count() by IPAddress \\r\\n| top 5 by IPAddressCount desc\",         \"size\": 0,         \"exportToExcelOptions\": \"visible\",         \"title\": \"Top 5 source IP addresses, by failed authentication\",         \"timeContext\": {           \"durationMs\": 0         },         \"timeContextFromParameter\": \"TimeRange\",         \"queryType\": 0,         \"resourceType\": \"microsoft.operationalinsights/workspaces\",         \"visualization\": \"piechart\",         \"gridSettings\": {           \"formatters\": [             {               \"columnMatch\": \"ipaddress\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"IPCount\",               \"formatter\": 4,               \"formatOptions\": {                 \"showIcon\": true               }             }           ],           \"labelSettings\": []         }       },       \"customWidth\": \"25\",       \"name\": \"Top 5 source IP addresses, by failed authentication\"     },     {       \"type\": 3,       \"content\": {         \"version\": \"KqlItem/1.0\",         \"query\": \"\\r\\n//Login Attempts For Nonexistent User Account \\r\\nCommonSecurityLog \\r\\n| where DeviceProduct =~ 'ASA' \\r\\n| where DeviceVendor =~ 'Cisco' \\r\\n| where '{DeviceAddress:label}' == \\\"All\\\" or DeviceAddress in ({DeviceAddress})\\r\\n| where DeviceEventClassID == '113015' \\r\\n| extend ipaddress=extract('%ASA-6-113015:.*: user IP = (.*)$',1,Message) \\r\\n| summarize IPCount=count() by ipaddress \\r\\n| top 5 by  IPCount desc\",         \"size\": 0,         \"exportToExcelOptions\": \"visible\",         \"title\": \"Logon attempts to nonexistent user account, by source IP address\",         \"timeContext\": {           \"durationMs\": 0         },         \"timeContextFromParameter\": \"TimeRange\",         \"queryType\": 0,         \"resourceType\": \"microsoft.operationalinsights/workspaces\",         \"visualization\": \"piechart\",         \"gridSettings\": {           \"formatters\": [             {               \"columnMatch\": \"ipaddress\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"IPCount\",               \"formatter\": 4,               \"formatOptions\": {                 \"showIcon\": true               }             }           ],           \"labelSettings\": []         }       },       \"customWidth\": \"25\",       \"name\": \"Logon attempts to nonexistent user account by source IP address\"     },     {       \"type\": 3,       \"content\": {         \"version\": \"KqlItem/1.0\",         \"query\": \"//Top 5 SSH Failed Attempt By Source IP \\r\\nCommonSecurityLog \\r\\n| where DeviceProduct =~ 'ASA' \\r\\n| where DeviceVendor =~ 'Cisco' \\r\\n| where '{DeviceAddress:label}' == \\\"All\\\" or DeviceAddress in ({DeviceAddress})\\r\\n| where DeviceEventClassID == '315011' \\r\\n| extend IP= extract('%ASA-6-315011: SSH session from (.*) on',1,Message) \\r\\n| summarize  ReasonCount=count() by IP \\r\\n| top 5 by ReasonCount  desc\",         \"size\": 0,         \"exportToExcelOptions\": \"visible\",         \"title\": \"Top 5 SSH failed attempts, by source IP address\",         \"timeContext\": {           \"durationMs\": 0         },         \"timeContextFromParameter\": \"TimeRange\",         \"queryType\": 0,         \"resourceType\": \"microsoft.operationalinsights/workspaces\",         \"visualization\": \"piechart\",         \"gridSettings\": {           \"formatters\": [             {               \"columnMatch\": \"IP\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"ReasonCount\",               \"formatter\": 4,               \"formatOptions\": {                 \"showIcon\": true               }             }           ],           \"labelSettings\": []         }       },       \"customWidth\": \"25\",       \"name\": \"Top 5 SSH failed attempts by source IP address\"     },     {       \"type\": 3,       \"content\": {         \"version\": \"KqlItem/1.0\",         \"query\": \"//Authentocation Success\\r\\nCommonSecurityLog\\r\\n| where DeviceProduct =~ 'ASA'\\r\\n| where DeviceVendor =~ 'Cisco'\\r\\n| where '{DeviceAddress:label}' == \\\"All\\\" or DeviceAddress in ({DeviceAddress})\\r\\n| where DeviceEventClassID == '113012'\\r\\n| extend UserName= extract('%ASA-6-113012:.*: user = (.*)$',1,Message)\\r\\n| summarize UserCount=count() by UserName\\r\\n| top 5 by UserCount desc\\r\\n\",         \"size\": 0,         \"exportToExcelOptions\": \"visible\",         \"title\": \"Top 5 successfully authenticated users\",         \"timeContext\": {           \"durationMs\": 0         },         \"timeContextFromParameter\": \"TimeRange\",         \"queryType\": 0,         \"resourceType\": \"microsoft.operationalinsights/workspaces\",         \"visualization\": \"piechart\",         \"gridSettings\": {           \"formatters\": [             {               \"columnMatch\": \"UserName\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"UserCount\",               \"formatter\": 4,               \"formatOptions\": {                 \"showIcon\": true               }             }           ],           \"labelSettings\": []         }       },       \"customWidth\": \"25\",       \"name\": \"Top 5 successfully authenticated users\"     },     {       \"type\": 3,       \"content\": {         \"version\": \"KqlItem/1.0\",         \"query\": \"//top 10 commands\\r\\nCommonSecurityLog\\r\\n| where DeviceProduct == \\\"ASA\\\"\\r\\n| where DeviceVendor == \\\"Cisco\\\"\\r\\n| where '{DeviceAddress:label}' == \\\"All\\\" or DeviceAddress in ({DeviceAddress})\\r\\n| where DeviceEventClassID == \\\"111008\\\"\\r\\n| extend CommandExecuted= extract(\\\"%ASA-5-111008: User '.*?' executed the '(.*?)' command.\\\",1,Message) \\r\\n| summarize Count= count() by CommandExecuted  \\r\\n| top 10 by Count desc \",         \"size\": 0,         \"exportToExcelOptions\": \"visible\",         \"title\": \"Top 5 Commands Executed on Firewall\",         \"timeContext\": {           \"durationMs\": 0         },         \"timeContextFromParameter\": \"TimeRange\",         \"queryType\": 0,         \"resourceType\": \"microsoft.operationalinsights/workspaces\",         \"visualization\": \"piechart\",         \"gridSettings\": {           \"formatters\": [             {               \"columnMatch\": \"CommandExecuted\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"Count\",               \"formatter\": 4,               \"formatOptions\": {                 \"showIcon\": true               }             }           ],           \"labelSettings\": []         }       },       \"customWidth\": \"25\",       \"name\": \"Top 5 Commands Executed on Firewall\"     }   ],   \"styleSettings\": {},   \"fromTemplateId\": \"sentinel-Cisco\",   \"$schema\": \"https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json\" }",
                                             "category":  "workbook",
                                             "version":  "1.0",
                                             "sourceId":  "[resourceid('Microsoft.OperationalInsights/workspaces',parameters('workspacename'))]"
                                         },
                          "type":  "microsoft.insights/workbooks",
                          "kind":  "shared",
                          "apiVersion":  "2018-06-17-preview",
                          "location":  "[parameters('location')]"
                      },
                      {
                          "name":  "[parameters('security - OneIdentity_id')]",
                          "properties":  {
                                             "displayName":  "security - CEF One Identity",
                                             "serializedData":  "{   \"version\": \"Notebook/1.0\",   \"items\": [     {       \"type\": 1,       \"content\": {         \"json\": \"## One Identity Safeguard for Privileged Sessions\\n---\\n\\nThis simple workbook gives an overview of sessions going through your Safeguard for Privileged Sessions device.\\n\\n### Number of sessions generating events per hour\"       },       \"name\": \"text - 2\"     },     {       \"type\": 3,       \"content\": {         \"version\": \"KqlItem/1.0\",         \"query\": \"CommonSecurityLog\\n| where DeviceVendor == \\\"OneIdentity\\\" and DeviceProduct == \\\"SPS\\\"\\n| where DeviceCustomString1Label == \\\"Session ID\\\"\\n| summarize count(TimeGenerated) by DeviceCustomString1, bin(TimeGenerated, 1d)\\n| summarize count() by bin(TimeGenerated, 1d)\\n\",         \"size\": 1,         \"exportToExcelOptions\": \"visible\",         \"timeContext\": {           \"durationMs\": 604800000         },         \"queryType\": 0,         \"resourceType\": \"microsoft.operationalinsights/workspaces\",         \"visualization\": \"barchart\",         \"gridSettings\": {           \"formatters\": [             {               \"columnMatch\": \"Count\",               \"formatter\": 1,               \"formatOptions\": {                 \"showIcon\": true               }             }           ],           \"sortBy\": [             {               \"itemKey\": \"Count\",               \"sortOrder\": 1             }           ],           \"labelSettings\": [             {               \"columnId\": \"Count\",               \"label\": \"Session Count of the last 24 hours\"             }           ]         },         \"tileSettings\": {           \"titleContent\": {             \"formatter\": 1,             \"formatOptions\": {               \"showIcon\": true             }           },           \"subtitleContent\": {             \"columnMatch\": \"Count\",             \"formatter\": 1,             \"formatOptions\": {               \"showIcon\": true             }           },           \"showBorder\": false         }       },       \"name\": \"query - 2\"     },     {       \"type\": 1,       \"content\": {         \"json\": \"### Number of sessions per severity per hour\\n\"       },       \"name\": \"text - 4\"     },     {       \"type\": 3,       \"content\": {         \"version\": \"KqlItem/1.0\",         \"query\": \"CommonSecurityLog\\n| where DeviceVendor == \\\"OneIdentity\\\" and DeviceProduct == \\\"SPS\\\"\\n| where Activity == \\\"ServerConnect\\\" or Activity == \\\"SessionClosed\\\"\\n| where DeviceCustomString1Label == \\\"Session ID\\\"\\n| where TimeGenerated \u003e ago(7d)\\n| summarize max(LogSeverity) by DeviceCustomString1, bin(TimeGenerated, 1h)\\n| summarize count() by max_LogSeverity, bin(TimeGenerated, 1h)\\n\\n\\n\\n\",         \"size\": 0,         \"aggregation\": 3,         \"exportToExcelOptions\": \"visible\",         \"queryType\": 0,         \"resourceType\": \"microsoft.operationalinsights/workspaces\",         \"visualization\": \"barchart\"       },       \"name\": \"query - 3\"     },     {       \"type\": 1,       \"content\": {         \"json\": \"### Latest logs\"       },       \"name\": \"text - 5\"     },     {       \"type\": 3,       \"content\": {         \"version\": \"KqlItem/1.0\",         \"query\": \"CommonSecurityLog\\n| where TimeGenerated \u003e ago(1d)\\n| where DeviceVendor == \\\"OneIdentity\\\" and DeviceProduct == \\\"SPS\\\"\\n| sort by TimeGenerated desc\\n\",         \"size\": 0,         \"exportToExcelOptions\": \"visible\",         \"queryType\": 0,         \"resourceType\": \"microsoft.operationalinsights/workspaces\",         \"visualization\": \"table\",         \"gridSettings\": {           \"formatters\": [             {               \"columnMatch\": \"TimeGenerated\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"ReceiptTime\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"DeviceVendor\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"DeviceProduct\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"DeviceEventClassID\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"LogSeverity\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"OriginalLogSeverity\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"DeviceAction\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"SimplifiedDeviceAction\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"Computer\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"CommunicationDirection\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"DeviceFacility\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"DestinationPort\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"DestinationIP\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"DeviceAddress\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"DeviceName\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"Message\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"Protocol\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"SourcePort\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"SourceIP\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"RemoteIP\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"RemotePort\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"MaliciousIP\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"ThreatSeverity\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"IndicatorThreatType\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"ThreatDescription\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"ThreatConfidence\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"ReportReferenceLink\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"MaliciousIPLongitude\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"MaliciousIPLatitude\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"MaliciousIPCountry\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"DeviceVersion\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"Activity\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"ApplicationProtocol\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"EventCount\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"DestinationDnsDomain\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"DestinationServiceName\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"DestinationTranslatedAddress\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"DestinationTranslatedPort\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"DeviceDnsDomain\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"DeviceExternalID\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"DeviceInboundInterface\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"DeviceNtDomain\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"DeviceOutboundInterface\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"DevicePayloadId\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"ProcessName\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"DeviceTranslatedAddress\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"DestinationHostName\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"DestinationMACAddress\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"DestinationNTDomain\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"DestinationProcessId\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"DestinationUserPrivileges\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"DestinationProcessName\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"DeviceTimeZone\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"DestinationUserID\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"DestinationUserName\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"DeviceMacAddress\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"ProcessID\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"ExternalID\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"FileCreateTime\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"FileHash\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"FileID\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"FileModificationTime\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"FilePath\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"FilePermission\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"FileType\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"FileName\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"FileSize\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"ReceivedBytes\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"OldFileCreateTime\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"OldFileHash\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"OldFileID\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"OldFileModificationTime\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"OldFileName\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"OldFilePath\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"OldFilePermission\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"OldFileSize\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"OldFileType\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"SentBytes\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"RequestURL\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"RequestClientApplication\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"RequestContext\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"RequestCookies\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"RequestMethod\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"SourceHostName\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"SourceMACAddress\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"SourceNTDomain\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"SourceDnsDomain\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"SourceServiceName\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"SourceTranslatedAddress\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"SourceTranslatedPort\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"SourceProcessId\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"SourceUserPrivileges\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"SourceProcessName\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"SourceUserID\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"SourceUserName\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"EventType\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"DeviceCustomIPv6Address1\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             }           ]         }       },       \"name\": \"query - 5\"     }   ],   \"styleSettings\": {},   \"fromTemplateId\": \"sentinel-OneIdentity\",   \"$schema\": \"https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json\" }",
                                             "category":  "workbook",
                                             "version":  "1.0",
                                             "sourceId":  "[resourceid('Microsoft.OperationalInsights/workspaces',parameters('workspacename'))]"
                                         },
                          "type":  "microsoft.insights/workbooks",
                          "kind":  "shared",
                          "apiVersion":  "2018-06-17-preview",
                          "location":  "[parameters('location')]"
                      }
                  ]
}
