{
    "$schema":  "http://schema.management.azure.com/schemas/2014-04-01-preview/deploymenttemplate.json#",
    "contentversion":  "1.0.0.0",
    "parameters":  {
                       "location":  {
                                        "type":  "string",
                                        "defaultvalue":  "chinaeast2"
                                    },
                       "workspacename":  {
                                             "type":  "string"
                                         },
                       "security - Cisco_id":  {
                                                   "defaultValue":  "[newGuid()]",
                                                   "type":  "string"
                                               },
                       "security - OneIdentity_id":  {
                                                         "defaultValue":  "[newGuid()]",
                                                         "type":  "string"
                                                     },
                       "security - InsecureProtocols_id":  {
                                                               "defaultValue":  "[newGuid()]",
                                                               "type":  "string"
                                                           },
                       "security - SecurityStatus_id":  {
                                                            "defaultValue":  "[newGuid()]",
                                                            "type":  "string"
                                                        }
                   },
    "resources":  [
                      {
                          "properties":  {
                                             "category":  "Sentinel-CEF-Detection-Low",
                                             "displayName":  "Cisco ASA - average attack detection rate increase",
                                             "query":  "//This will help you determine if Cisco ASA devices are under heavier attack than normal over the last hour versus the previous 6 hours based on DeviceEventClassID 733100\n//References: https://www.cisco.com/c/en/us/td/docs/security/asa/syslog/b_syslog/syslogs9.html\n//Details on how to further troubleshoot/investigate: https://www.cisco.com/c/en/us/support/docs/security/asa-5500-x-series-next-generation-firewalls/113685-asa-threat-detection.html\n//\n\nlet timeframe = 1h;\nlet last1h = CommonSecurityLog \n| where TimeGenerated \u003e= ago(timeframe)\n| where isempty(CommunicationDirection) \n| where DeviceEventClassID == \"733100\"\n| extend SourceOfDropRateCount = tostring(split(tostring(split(Message, \"]\")[0]),\"[ \")[1])\n| extend splitMessage = split(Message, \".\")\n| extend DropRate = tostring(split(tostring(splitMessage[0]),\"] \")[1])\n| extend CurrentBurstRate = split(tostring(split(tostring(splitMessage[1]),\"  \")[0]),\"is \")\n| extend CurrentBurstRatePerSec = toint(split(tostring(CurrentBurstRate[1]),\" \")[0])\n| extend MaxConfiguredBurstRate = toint(CurrentBurstRate[2])\n| extend CurrentAvgRate = split(tostring(split(tostring(splitMessage[1]),\"  \")[1]),\"is \")\n| extend CurrentAvgRatePerSec = toint(split(tostring(CurrentAvgRate[1]),\" \")[0])\n| extend MaxConfiguredAvgRate = toint(CurrentAvgRate[2])\n| extend CumulativeTotal = toint(split(tostring(split(tostring(splitMessage[1]),\"  \")[2]),\"is \")[1])\n| summarize last1hCumTotal = sum(CumulativeTotal), last1hAvgRatePerSec = avg(CurrentAvgRatePerSec), last1hAvgBurstRatePerSec = avg(CurrentBurstRatePerSec) by DeviceName, DeviceEventClassID, SourceIP, SourceOfDropRateCount, DropRate;\nlet prev6h = CommonSecurityLog \n| where TimeGenerated between (ago(6h) .. ago(1h))\n| where isempty(CommunicationDirection) \n| where DeviceEventClassID == \"733100\"\n| extend SourceOfDropRateCount = tostring(split(tostring(split(Message, \"]\")[0]),\"[ \")[1])\n| extend splitMessage = split(Message, \".\")\n| extend DropRate = tostring(split(tostring(splitMessage[0]),\"] \")[1])\n| extend CurrentBurstRate = split(tostring(split(tostring(splitMessage[1]),\"  \")[0]),\"is \")\n| extend prevCurrentBurstRatePerSec = toint(split(tostring(CurrentBurstRate[1]),\" \")[0])\n| extend prevMaxConfiguredBurstRate = toint(CurrentBurstRate[2])\n| extend CurrentAvgRate = split(tostring(split(tostring(splitMessage[1]),\"  \")[1]),\"is \")\n| extend prevCurrentAvgRatePerSec = toint(split(tostring(CurrentAvgRate[1]),\" \")[0])\n| extend prevMaxConfiguredAvgRate = toint(CurrentAvgRate[2])\n| extend prevCumulativeTotal = toint(split(tostring(split(tostring(splitMessage[1]),\"  \")[2]),\"is \")[1])\n| summarize StartTimeUtc = min(TimeGenerated), EndTimeUtc = max(TimeGenerated), prev6hCumTotal = sum(prevCumulativeTotal), prev6hAvgRatePerSec = avg(prevCurrentAvgRatePerSec), prev6hAvgBurstRatePerSec = avg(prevCurrentBurstRatePerSec) \nby DeviceName, DeviceEventClassID, SourceIP, SourceOfDropRateCount, DropRate;\nlast1h | join (\n  prev6h \n) on DeviceName, DeviceEventClassID, SourceIP, SourceOfDropRateCount, DropRate\n| project StartTimeUtc, EndTimeUtc, DeviceName, DeviceEventClassID, SourceIP, SourceOfDropRateCount, DropRate, last1hCumTotal, prev6hCumTotal, prev6hAvgCumTotal = prev6hCumTotal/6, last1hAvgRatePerSec, prev6hAvgRatePerSec, last1hAvgBurstRatePerSec, prev6hAvgBurstRatePerSec\n// Select only events that indicate a doubling of the expected rate in the last hour over the previous 6 hours\n| where last1hCumTotal \u003e 2*prev6hAvgCumTotal or last1hAvgRatePerSec \u003e 2*prev6hAvgRatePerSec or last1hAvgBurstRatePerSec \u003e 2*prev6hAvgBurstRatePerSec\n| extend timestamp = StartTimeUtc, IPCustomEntity = SourceIP, HostCustomEntity = DeviceName\n",
                                             "version":  "1.0"
                                         },
                          "name":  "[concat(parameters('workspacename'), '/' , 'sentinel_CEF_query_1')]",
                          "apiVersion":  "2020-03-01-preview",
                          "type":  "Microsoft.OperationalInsights/workspaces/savedSearches",
                          "location":  "[parameters('location')]"
                      },
                      {
                          "properties":  {
                                             "category":  "Sentinel-CEF-Detection-Medium",
                                             "displayName":  "Cisco ASA - threat detection message fired",
                                             "query":  "//Identifies when the Cisco ASA Threat Detection engine fired an alert based on malicious activity occurring on the network inicated by DeviceEventClassID 733101-733105\n//Resources: https://www.cisco.com/c/en/us/td/docs/security/asa/syslog/b_syslog/syslogs9.html\n//Details on how to further troubleshoot/investigate: https://www.cisco.com/c/en/us/support/docs/security/asa-5500-x-series-next-generation-firewalls/113685-asa-threat-detection.html\n//\n\nlet timeframe = 1h;\nCommonSecurityLog \n| where TimeGenerated \u003e= ago(timeframe)\n| where isempty(CommunicationDirection) \n| where DeviceEventClassID in (\"733101\",\"733102\",\"733103\",\"733104\",\"733105\")\n| extend timestamp = TimeGenerated, IPCustomEntity = SourceIP, HostCustomEntity = DeviceName\n",
                                             "version":  "1.0"
                                         },
                          "name":  "[concat(parameters('workspacename'), '/' , 'sentinel_CEF_query_2')]",
                          "apiVersion":  "2020-03-01-preview",
                          "type":  "Microsoft.OperationalInsights/workspaces/savedSearches",
                          "location":  "[parameters('location')]"
                      },
                      {
                          "properties":  {
                                             "category":  "Sentinel-CEF-Detection-Low",
                                             "displayName":  "Fortinet - Beacon pattern detected",
                                             "query":  "//Identifies patterns in the time deltas of contacts between internal and external IPs in Fortinet network data that are consistent with beaconing.\n// Accounts for randomness (jitter) and seasonality such as working hours that may have been introduced into the beacon pattern.\n// The lookback is set to 1d, the minimum granularity in time deltas is set to 60 seconds and the minimum number of beacons required to emit a\n// detection is set to 4.\n// Increase the lookback period to capture beacons with larger periodicities.\n// The jitter tolerance is set to 0.2 - This means we account for an overall 20% deviation from the infered beacon periodicity. Seasonality is dealt with\n// automatically using series_outliers.\n// Note: In large environments it may be necessary to reduce the lookback period to get fast query times.\n//\n\nlet starttime = 1d;\nlet TimeDeltaThresholdInSeconds = 60; // we ignore beacons diffs that fall below this threshold \nlet TotalBeaconsThreshold = 4; // minimum number of beacons required in a session to surface a row\nlet JitterTolerance = 0.2; // tolerance to jitter, e.g. - 0.2 = 20% jitter is tolerated either side of the periodicity\nlet PrivateIPregex = @\"^127\\.|^10\\.|^172\\.1[6-9]\\.|^172\\.2[0-9]\\.|^172\\.3[0-1]\\.|^192\\.168\\.\"; // exclude destinations that fall into this category\nCommonSecurityLog\n| where DeviceVendor == \"Fortinet\"\n| where TimeGenerated \u003e ago(starttime)\n// eliminate bad data\n| where isnotempty(SourceIP) and isnotempty(DestinationIP) and SourceIP != \"0.0.0.0\"\n// filter out deny, close, rst and SNMP to reduce data volume\n| where DeviceAction !in (\"close\", \"client-rst\", \"server-rst\", \"deny\") and DestinationPort != 161\n// map input fields\n| project TimeGenerated , SourceIP, DestinationIP, DestinationPort, ReceivedBytes, SentBytes, DeviceAction \n// where destination IPs are public\n| extend DestinationIPType = iff(DestinationIP matches regex PrivateIPregex,\"private\" ,\"public\" )\n| where DestinationIPType == \"public\"\n// sort into source-\u003edestination 'sessions'\n| sort by SourceIP asc, DestinationIP asc, DestinationPort asc, TimeGenerated asc\n| serialize\n// time diff the contact times between source and destination to get a list of deltas\n| extend nextTimeGenerated = next(TimeGenerated, 1), nextSourceIP = next(SourceIP, 1), nextDestIP = next(DestinationIP, 1), nextDestPort = next(DestinationPort, 1)\n| extend TimeDeltainSeconds = datetime_diff(\"second\",nextTimeGenerated,TimeGenerated)\n| where SourceIP == nextSourceIP and DestinationIP == nextDestIP and DestinationPort == nextDestPort\n// remove small time deltas below the set threshold\n| where TimeDeltainSeconds \u003e TimeDeltaThresholdInSeconds\n| project TimeGenerated, TimeDeltainSeconds, SourceIP, DestinationIP, DestinationPort, ReceivedBytes, SentBytes, DeviceAction \n// summarize the deltas by source-\u003edestination\n| summarize count(), StartTime=min(TimeGenerated), EndTime=max(TimeGenerated), sum(ReceivedBytes), sum(SentBytes), makelist(TimeDeltainSeconds), makeset(DeviceAction) by SourceIP, DestinationIP, DestinationPort\n// get some statistical properties of the delta distribution and smooth any outliers (e.g. laptop shut overnight, working hours)\n| extend series_stats(list_TimeDeltainSeconds), outliers=series_outliers(list_TimeDeltainSeconds)\n// expand the deltas and the outliers\n| mvexpand list_TimeDeltainSeconds to typeof(double), outliers to typeof(double)\n// replace outliers with the average of the distribution\n| extend list_TimeDeltainSeconds_normalized=iff(outliers \u003e 1.5 or outliers \u003c -1.5, series_stats_list_TimeDeltainSeconds_avg , list_TimeDeltainSeconds)\n// summarize with the smoothed distribution\n| summarize BeaconCount=count(), makelist(list_TimeDeltainSeconds), list_TimeDeltainSeconds_normalized=makelist(list_TimeDeltainSeconds_normalized), makeset(set_DeviceAction) by StartTime, EndTime, SourceIP, DestinationIP, DestinationPort, sum_ReceivedBytes, sum_SentBytes\n// get stats on the smoothed distribution\n| extend series_stats(list_TimeDeltainSeconds_normalized)\n// match jitter tolerance on smoothed distrib\n| extend MaxJitter = (series_stats_list_TimeDeltainSeconds_normalized_avg*JitterTolerance)\n| where series_stats_list_TimeDeltainSeconds_normalized_stdev \u003c MaxJitter\n// where the minimum beacon threshold is satisfied and there was some data transfer\n| where BeaconCount \u003e TotalBeaconsThreshold and (sum_SentBytes \u003e 0 or sum_ReceivedBytes \u003e 0)\n// final projection\n| project StartTime, EndTime, SourceIP, DestinationIP, DestinationPort, BeaconCount, TimeDeltasInSeconds=list_list_TimeDeltainSeconds, Periodicity=series_stats_list_TimeDeltainSeconds_normalized_avg, ReceivedBytes=sum_ReceivedBytes, SentBytes=sum_SentBytes, Actions=set_set_DeviceAction\n// where periodicity is order of magnitude larger than time delta threshold (eliminates FPs whose periodicity is close to the values we ignored)\n| where Periodicity \u003e= (10*TimeDeltaThresholdInSeconds)\n| extend timestamp = StartTime, IPCustomEntity = DestinationIP\n",
                                             "version":  "1.0"
                                         },
                          "name":  "[concat(parameters('workspacename'), '/' , 'sentinel_CEF_query_3')]",
                          "apiVersion":  "2020-03-01-preview",
                          "type":  "Microsoft.OperationalInsights/workspaces/savedSearches",
                          "location":  "[parameters('location')]"
                      },
                      {
                          "properties":  {
                                             "category":  "Sentinel-CEF-Detection-Medium",
                                             "displayName":  "Possible contact with a domain generated by a DGA",
                                             "query":  "//Identifies contacts with domains names in CommonSecurityLog that might have been generated by a Domain Generation Algorithm (DGA). DGAs can be used\n//by malware to generate rendezvous points that are difficult to predict in advance. This detection uses the Alexa Top 1 million domain names to build a model\n//of what normal domains look like. It uses this to identify domains that may have been randomly generated by an algorithm.\n//The triThreshold is set to 500 - increase this to report on domains that are less likely to have been randomly generated, decrease it for more likely.\n//The start time and end time look back over 6 hours of data and the dgaLengthThreshold is set to 8 - meaning domains whose length is 8 or more are reported.\n//\n\nlet triThreshold = 500;\nlet startTime = 6h;\nlet dgaLengthThreshold = 8;\n// fetch the alexa top 1M domains\nlet top1M =  (externaldata (Position:int, Domain:string)   [@\"http://s3-us-west-1.amazonaws.com/umbrella-static/top-1m.csv.zip\"]  with (format=\"csv\", zipPattern=\"*.csv\"));\n// extract tri grams that are above our threshold - i.e. are common\nlet triBaseline =   top1M\n| extend Domain = tolower(extract(\"([^.]*).{0,7}$\", 1, Domain))\n| extend AllTriGrams = array_concat(extract_all(\"(...)\", Domain), extract_all(\"(...)\", substring(Domain, 1)), extract_all(\"(...)\", substring(Domain, 2)))\n| mvexpand Trigram=AllTriGrams\n| summarize triCount=count() by tostring(Trigram)\n| sort by triCount desc\n| where triCount \u003e triThreshold\n| distinct Trigram;\n// collect domain information from common security log, filter and extract the DGA candidate and its trigrams\nlet allDataSummarized =   CommonSecurityLog\n| where TimeGenerated \u003e ago(startTime)\n| where isnotempty(DestinationHostName)\n| extend Name = tolower(DestinationHostName)\n| distinct Name\n| where Name has \".\"\n| where Name !endswith \".home\" and Name !endswith \".lan\"\n// extract DGA candidate\n| extend DGADomain = extract(\"([^.]*).{0,7}$\", 1, Name)\n| where strlen(DGADomain) \u003e dgaLengthThreshold\n// throw out domains with number in them\n| where DGADomain matches regex \"^[A-Za-z]{0,}$\"\n// extract the tri grams from summarized data\n| extend AllTriGrams = array_concat(extract_all(\"(...)\", DGADomain), extract_all(\"(...)\", substring(DGADomain, 1)), extract_all(\"(...)\", substring(DGADomain, 2)));\n// throw out domains that have repeating tri's and/or \u003e=3 repeating letters\nlet nonRepeatingTris =  allDataSummarized\n| join kind=leftanti\n(\n    allDataSummarized\n    | mvexpand AllTriGrams\n    | summarize count() by tostring(AllTriGrams), DGADomain\n    | where count_ \u003e 1\n    | distinct DGADomain\n)\non DGADomain;\n// find domains that do not have a common tri in the baseline\nlet dataWithRareTris =  nonRepeatingTris\n| join kind=leftanti\n(\n    nonRepeatingTris\n    | mvexpand AllTriGrams\n    | extend Trigram = tostring(AllTriGrams)\n    | distinct Trigram, DGADomain\n    | join kind=inner\n    (\n        triBaseline\n    )\n    on Trigram\n    | distinct DGADomain\n)\non DGADomain;\ndataWithRareTris\n// join DGAs back on connection data\n| join kind=inner\n(\n    CommonSecurityLog\n    | where TimeGenerated \u003e ago(startTime)\n    | where isnotempty(DestinationHostName)\n    | extend DestinationHostName = tolower(DestinationHostName)\n    | project-rename Name=DestinationHostName, DataSource=DeviceVendor\n    | summarize StartTime=min(TimeGenerated), EndTime=max(TimeGenerated) by Name, SourceIP, DestinationIP, DataSource\n)\non Name\n| project StartTime, EndTime, Name, DGADomain, SourceIP, DestinationIP, DataSource\n| extend timestamp=StartTime, IPCustomEntity=SourceIP\n",
                                             "version":  "1.0"
                                         },
                          "name":  "[concat(parameters('workspacename'), '/' , 'sentinel_CEF_query_4')]",
                          "apiVersion":  "2020-03-01-preview",
                          "type":  "Microsoft.OperationalInsights/workspaces/savedSearches",
                          "location":  "[parameters('location')]"
                      },
                      {
                          "properties":  {
                                             "category":  "Sentinel-CEF-Detection-Low",
                                             "displayName":  "Palo Alto - potential beaconing detected",
                                             "query":  "//Identifies beaconing patterns from Palo Alto Network traffic logs based on recurrent timedelta patterns. \n//The query leverages various KQL functions to calculate time deltas and then compares it with total events observed in a day to find percentage of beaconing. \n//This outbound beaconing pattern to untrusted public networks should be investigated for any malware callbacks or data exfiltration attempts.\n//Reference Blog:\n//http://www.austintaylor.io/detect/beaconing/intrusion/detection/system/command/control/flare/elastic/stack/2017/06/10/detect-beaconing-with-flare-elasticsearch-and-intrusion-detection-systems/\n//\n\nlet starttime = 2d;\nlet endtime = 1d;\nlet TimeDeltaThreshold = 10;\nlet TotalEventsThreshold = 15;\nlet PercentBeaconThreshold = 80;\nlet PrivateIPregex = @'^127\\.|^10\\.|^172\\.1[6-9]\\.|^172\\.2[0-9]\\.|^172\\.3[0-1]\\.|^192\\.168\\.';\nCommonSecurityLog\n| where DeviceVendor == \"Palo Alto Networks\" and Activity == \"TRAFFIC\"\n| where TimeGenerated between (ago(starttime)..ago(endtime))\n| extend DestinationIPType = iff(DestinationIP matches regex PrivateIPregex,\"private\" ,\"public\" )\n| where DestinationIPType == \"public\"\n| project TimeGenerated, DeviceName, SourceUserID, SourceIP, SourcePort, DestinationIP, DestinationPort, ReceivedBytes, SentBytes\n| sort by SourceIP asc,TimeGenerated asc, DestinationIP asc, DestinationPort asc\n| serialize\n| extend nextTimeGenerated = next(TimeGenerated, 1), nextSourceIP = next(SourceIP, 1)\n| extend TimeDeltainSeconds = datetime_diff('second',nextTimeGenerated,TimeGenerated)\n| where SourceIP == nextSourceIP\n//Whitelisting criteria/ threshold criteria\n| where TimeDeltainSeconds \u003e TimeDeltaThreshold \n| project TimeGenerated, TimeDeltainSeconds, DeviceName, SourceUserID, SourceIP, SourcePort, DestinationIP, DestinationPort, ReceivedBytes, SentBytes\n| summarize count(), sum(ReceivedBytes), sum(SentBytes), make_list(TimeDeltainSeconds) \nby TimeDeltainSeconds, bin(TimeGenerated, 1h), DeviceName, SourceUserID, SourceIP, DestinationIP, DestinationPort\n| summarize (MostFrequentTimeDeltaCount, MostFrequentTimeDeltainSeconds) = arg_max(count_, TimeDeltainSeconds), TotalEvents=sum(count_), TotalSentBytes = sum(sum_SentBytes), TotalReceivedBytes = sum(sum_ReceivedBytes) \nby bin(TimeGenerated, 1h), DeviceName, SourceUserID, SourceIP, DestinationIP, DestinationPort\n| where TotalEvents \u003e TotalEventsThreshold \n| extend BeaconPercent = MostFrequentTimeDeltaCount/toreal(TotalEvents) * 100\n| where BeaconPercent \u003e PercentBeaconThreshold\n| extend timestamp = TimeGenerated, IPCustomEntity = DestinationIP, AccountCustomEntity = SourceUserID, HostCustomEntity = DeviceName \n",
                                             "version":  "1.0"
                                         },
                          "name":  "[concat(parameters('workspacename'), '/' , 'sentinel_CEF_query_5')]",
                          "apiVersion":  "2020-03-01-preview",
                          "type":  "Microsoft.OperationalInsights/workspaces/savedSearches",
                          "location":  "[parameters('location')]"
                      },
                      {
                          "properties":  {
                                             "category":  "Sentinel-CEF-Detection-Low",
                                             "displayName":  "Palo Alto - possible internal to external port scanning",
                                             "query":  "//Identifies a list of internal Source IPs (10.x.x.x Hosts) that have triggered 10 or more non-graceful tcp server resets from one or more Destination IPs which \n//results in an \"ApplicationProtocol = incomplete\" designation. The server resets coupled with an \"Incomplete\" ApplicationProtocol designation can be an indication \n//of internal to external port scanning or probing attack. \n//References: https://knowledgebase.paloaltonetworks.com/KCSArticleDetail?id=kA10g000000ClUvCAK and\n//https://knowledgebase.paloaltonetworks.com/KCSArticleDetail?id=kA10g000000ClTaCAK\n//\n\nlet timeframe = 1h;\nCommonSecurityLog \n| where TimeGenerated \u003e ago(timeframe) \n| where isnotempty(DestinationPort) and DeviceAction !in (\"reset-both\", \"deny\") \n// filter out common usage ports. Add ports that are legitimate for your environment\n| where DestinationPort !in (\"443\", \"53\", \"389\", \"80\", \"0\", \"880\", \"8888\", \"8080\")\n| where ApplicationProtocol == \"incomplete\" \n// filter out IANA ephemeral or negotiated ports as per https://en.wikipedia.org/wiki/Ephemeral_port\n| where DestinationPort !between (toint(49512) .. toint(65535)) \n| where Computer != \"\" \n| where DestinationIP !startswith \"10.\"\n// Filter out any graceful reset reasons of AGED OUT which occurs when a TCP session closes with a FIN due to aging out. \n| where AdditionalExtensions !has \"reason=aged-out\" \n// Filter out any TCP FIN which occurs when a TCP FIN is used to gracefully close half or both sides of a connection.\n| where AdditionalExtensions !has \"reason=tcp-fin\" \n// Uncomment one of the following where clauses to trigger on specific TCP reset reasons\n// See Palo Alto article for details - https://knowledgebase.paloaltonetworks.com/KCSArticleDetail?id=kA10g000000ClUvCAK\n// TCP RST-server - Occurs when the server sends a TCP reset to the client\n// | where AdditionalExtensions has \"reason=tcp-rst-from-server\"  \n// TCP RST-client - Occurs when the client sends a TCP reset to the server\n// | where AdditionalExtensions has \"reason=tcp-rst-from-client\"  \n| extend reason = tostring(split(AdditionalExtensions, \";\")[3])\n| summarize StartTimeUtc = min(TimeGenerated), EndTimeUtc = max(TimeGenerated), count() by DeviceName, SourceUserID, SourceIP, ApplicationProtocol, reason, DestinationPort, Protocol, DeviceVendor, DeviceProduct, DeviceAction, DestinationIP\n| where count_ \u003e= 10\n| summarize StartTimeUtc = min(StartTimeUtc), EndTimeUtc = max(EndTimeUtc), makeset(DestinationIP), totalcount = sum(count_) by DeviceName, SourceUserID, SourceIP, ApplicationProtocol, reason, DestinationPort, Protocol, DeviceVendor, DeviceProduct, DeviceAction\n| extend timestamp = StartTimeUtc, IPCustomEntity = SourceIP, AccountCustomEntity = SourceUserID, HostCustomEntity = DeviceName \n",
                                             "version":  "1.0"
                                         },
                          "name":  "[concat(parameters('workspacename'), '/' , 'sentinel_CEF_query_6')]",
                          "apiVersion":  "2020-03-01-preview",
                          "type":  "Microsoft.OperationalInsights/workspaces/savedSearches",
                          "location":  "[parameters('location')]"
                      },
                      {
                          "properties":  {
                                             "category":  "Sentinel-CEF-Detection-Medium",
                                             "displayName":  "Time series anomaly detection for total volume of traffic",
                                             "query":  "//Identifies anamalous spikes in network traffic logs as compared to baseline or normal historical patterns. \n//The query leverages a KQL built-in anomaly detection algorithm to find large deviations from baseline patterns. \n//Sudden increases in network traffic volume may be an indication of data exfiltration attempts and should be investigated.\n//The higher the score, the further it is from the baseline value.\n//The output is aggregated to provide summary view of unique source IP to destination IP address and port traffic observed in the flagged anomaly hour. \n//The source IP addresses which were sending less than percentotalthreshold of the total traffic have been exluded whose value can be adjusted as needed .\n//You may have to run queries for individual source IP addresses from SourceIPlist to determine if anything looks suspicious\n//\n\nlet starttime = 14d;\nlet endtime = 1d;\nlet timeframe = 1h;\nlet scorethreshold = 5;\nlet percentotalthreshold = 25;\nlet TimeSeriesData = CommonSecurityLog \n| where isnotempty(DestinationIP) and isnotempty(SourceIP)\n| where TimeGenerated between (startofday(ago(starttime))..startofday(ago(endtime)))\n| project TimeGenerated,SourceIP, DestinationIP, DeviceVendor\n| make-series Total=count() on TimeGenerated from startofday(ago(starttime)) to startofday(ago(endtime)) step timeframe by DeviceVendor;\n//Filtering specific records associated with spikes as outliers\nlet TimeSeriesAlerts=TimeSeriesData\n| extend (anomalies, score, baseline) = series_decompose_anomalies(Total, scorethreshold, -1, 'linefit')\n| mv-expand Total to typeof(double), TimeGenerated to typeof(datetime), anomalies to typeof(double),score to typeof(double), baseline to typeof(long)\n| where anomalies \u003e 0 | extend score = round(score,2), AnomalyHour = TimeGenerated\n| project DeviceVendor,AnomalyHour, TimeGenerated, Total, baseline, anomalies, score;\n//Join anomalies with Base Data to popalate associated records for investigation - Results sorted by score in descending order \nTimeSeriesAlerts \n| join (\n    CommonSecurityLog \n| where isnotempty(DestinationIP) and isnotempty(SourceIP)\n| where TimeGenerated between (startofday(ago(starttime))..startofday(ago(endtime)))\n| summarize HourlyCount = count(), TimeGeneratedMax = arg_max(TimeGenerated, *), DestinationIPlist = make_set(DestinationIP), DestinationPortlist = make_set(DestinationPort) by DeviceVendor, SourceIP, TimeGeneratedHour= bin(TimeGenerated, 1h)\n| extend AnomalyHour = TimeGeneratedHour\n) on AnomalyHour, DeviceVendor \n| extend PercentTotal = round((HourlyCount / Total) * 100, 3)\n| where PercentTotal \u003e percentotalthreshold\n| project DeviceVendor , AnomalyHour, TimeGeneratedMax, SourceIP, DestinationIPlist, DestinationPortlist, HourlyCount, PercentTotal, Total, baseline, score, anomalies\n| summarize HourlyCount=sum(HourlyCount), StartTimeUtc=min(TimeGeneratedMax), EndTimeUtc=max(TimeGeneratedMax), SourceIPlist = make_set(SourceIP), SourceIPMax= arg_max(SourceIP, *), DestinationIPlist = make_set(DestinationIPlist), DestinationPortlist = make_set(DestinationPortlist) by DeviceVendor , AnomalyHour, Total, baseline, score, anomalies\n| project DeviceVendor , AnomalyHour, EndTimeUtc, SourceIPMax ,SourceIPlist, DestinationIPlist, DestinationPortlist, HourlyCount, Total, baseline, score, anomalies\n| extend timestamp= EndTimeUtc , IPCustomEntity = SourceIPMax\n",
                                             "version":  "1.0"
                                         },
                          "name":  "[concat(parameters('workspacename'), '/' , 'sentinel_CEF_query_7')]",
                          "apiVersion":  "2020-03-01-preview",
                          "type":  "Microsoft.OperationalInsights/workspaces/savedSearches",
                          "location":  "[parameters('location')]"
                      },
                      {
                          "properties":  {
                                             "category":  "Sentinel-CEF-Detection-Low",
                                             "displayName":  "Wazuh - Large Number of Web errors from an IP",
                                             "query":  "//Identifies instances where Wazuh logged over 400 403 Web Errors from one IP Address. To onboard Wazuh data into Sentinel please view: https://github.com/wazuh/wazuh-documentation/blob/master/source/azure/monitoring%20activity.rst\n//\n\nlet incidentTime = ago(1d);\nCommonSecurityLog\n| where TimeGenerated \u003e incidentTime\n| where DeviceProduct =~ \"Wazuh\"\n| where Activity has \"Web server 400 error code.\"\n| where Message has \"403\"\n| extend HostName=substring(split(DeviceCustomString1,\")\")[0],1)\n| summarize StartTime = min(TimeGenerated), EndTime = max(TimeGenerated), NumberOfErrors = count(SourceIP) by HostName, SourceIP\n| where NumberOfErrors \u003e 400\n| sort by NumberOfErrors desc\n| extend timestamp = StartTime, HostCustomEntity = HostName, IPCustomEntity = SourceIP\n",
                                             "version":  "1.0"
                                         },
                          "name":  "[concat(parameters('workspacename'), '/' , 'sentinel_CEF_query_8')]",
                          "apiVersion":  "2020-03-01-preview",
                          "type":  "Microsoft.OperationalInsights/workspaces/savedSearches",
                          "location":  "[parameters('location')]"
                      },
                      {
                          "properties":  {
                                             "category":  "Sentinel-CEF-Detection-Low",
                                             "displayName":  "Request for single resource on domain",
                                             "query":  "//This will look for connections to a domain where only a single file is requested, this is unusual as most modern web applications require additional recources. This type of activity is often assocaited with malware beaconing or tracking URLs delivered in emails. Developed for Zscaler but applicable to any outbound web logging.\n//\n\nlet timeRange = 1d;\n//The number of URI's seen to be suspicious, higher = less likely to be suspicious\nlet uriThreshold = 1;\nlet suspiciousURLs =\nCommonSecurityLog\n| where TimeGenerated \u003e= ago(timeRange)\n// Only look at connections that were allowed through the web proxy. Comment line out for all events including those which were blocked\n| where DeviceVendor =~ \"Zscaler\" and DeviceAction =~ \"Allowed\"\n// Only look where some data was exchanged. Comment out to see 0 byte connections\n| where SentBytes \u003e 0 and ReceivedBytes \u003e 0\n// Extract the Domain\n| extend Domain = iff(countof(DestinationHostName,'.') \u003e= 2, strcat(split(DestinationHostName,'.')[-2], '.',split(DestinationHostName,'.')[-1]), DestinationHostName)\n| summarize StartTimeUtc = min(TimeGenerated), EndTimeUtc = max(TimeGenerated), makelist(RequestURL), makelist(DestinationIP), makelist(SourceIP), numOfConnections = count() by Domain\n// Determine the number of URIs that have been visited for the domain\n| extend destinationURI = arraylength(list_RequestURL)\n| where destinationURI \u003c= uriThreshold\n| where tostring(list_RequestURL) has_any (\".php\",\".aspx\")\n;\nsuspiciousURLs\n| mvexpand list_RequestURL, list_DestinationIP\n| extend RequestURL = tostring(list_RequestURL), DestinationIP = tostring(list_DestinationIP), ClientIP = tostring(list_SourceIP)\n| extend timestamp = StartTimeUtc, IPCustomEntity = DestinationIP\n| project-away list_RequestURL, list_DestinationIP, list_SourceIP, destinationURI, Domain, StartTimeUtc, EndTimeUtc, numOfConnections \n",
                                             "version":  "1.0"
                                         },
                          "name":  "[concat(parameters('workspacename'), '/' , 'sentinel_CEF_query_9')]",
                          "apiVersion":  "2020-03-01-preview",
                          "type":  "Microsoft.OperationalInsights/workspaces/savedSearches",
                          "location":  "[parameters('location')]"
                      },
                      {
                          "properties":  {
                                             "category":  "Sentinel-CEF-Detection-Medium",
                                             "displayName":  "IP with multiple failed Azure AD logins successfully logs in to Palo Alto VPN",
                                             "query":  "//This query creates a list of IP addresses with a number failed login attempts to AAD \n//above a set threshold.  It then looks for any successful Palo Alto VPN logins from any\n//of these IPs within the same timeframe.\n//\nlet timeframe = 1d;\n//Set a threshold of failed AAD signins from an IP address within 1 day above which we want to deem those logins suspicious.\nlet signin_threshold = 5; \n//Make a list of IPs with AAD signin failures above our threshold.\nlet suspicious_signins = \n    SigninLogs\n    | where TimeGenerated \u003e= ago(timeframe)\n    //Looking for logon failure results\n    | where ResultType !in (\"0\", \"50125\", \"50140\")\n    //Exclude localhost addresses to reduce the chance of FPs\n    | where IPAddress != \"127.0.0.1\"\n    | summarize count() by IPAddress\n    | where count_ \u003e  signin_threshold\n    | summarize make_list(IPAddress);\n//See if any of those IPs have sucessfully logged into PA VPNs during the same timeperiod\nCommonSecurityLog\n    | where TimeGenerated \u003e ago(timeframe)\n    //Select only PA VPN sucessful logons\n    | where DeviceVendor == \"Palo Alto Networks\" and DeviceEventClassID == \"globalprotect\"\n    | where Message has \"GlobalProtect gateway user authentication succeeded\"\n    //Parse out the logon source IP from the Message field to match on\n    | extend SourceIP = extract(\"Login from: ([^,]+)\", 1, Message) \n    | where SourceIP in (suspicious_signins)\n    | extend Reason = \"Multiple failed AAD logins from SourceIP\"\n    //Parse out other useful information from Message field\n    | extend User = extract(\"User name: ([^,]+)\", 1, Message) \n    | extend ClientOS = extract(\"Client OS version: ([^,\\\"]+)\", 1, Message)\n    | extend Location = extract(\"Source region: ([^,]{2})\",1, Message)\n    | project TimeGenerated, Reason, SourceIP, User, ClientOS, Location, Message, DeviceName, ReceiptTime, DeviceVendor, DeviceEventClassID, Computer, FileName\n    | extend AccountCustomEntity = User, IPCustomEntity = SourceIP, timestamp = TimeGenerated, HostCustomEntity = DeviceName \n",
                                             "version":  "1.0"
                                         },
                          "name":  "[concat(parameters('workspacename'), '/' , 'sentinel_vm_query_10')]",
                          "apiVersion":  "2020-03-01-preview",
                          "type":  "Microsoft.OperationalInsights/workspaces/savedSearches",
                          "location":  "[parameters('location')]"
                      },
                      {
                          "properties":  {
                                             "category":  "Sentinel-CEF-Detection-Medium",
                                             "displayName":  "Network endpoint to host executable correlation",
                                             "query":  "//Correlates blocked URLs hosting [malicious] executables with host endpoint data\n//to identify potential instances of executables of the same name having been recently run.\n//\n\nlet timeframe = 1d;\nlet endpointData = \n(SecurityEvent\n  | where TimeGenerated \u003e= ago(timeframe) \n  | where EventID == 4688\n  | extend shortFileName = tostring(split(NewProcessName, '\\\\')[-1])\n  );\n// Correlate suspect executables seen in TrendMicro rule updates with similar activity on endpoints\nCommonSecurityLog\n| where TimeGenerated \u003e= ago(timeframe)\n| where DeviceVendor =~ \"Trend Micro\"\n| where Activity =~ \"Deny List updated\" \n| where RequestURL endswith \".exe\"\n| project TimeGenerated, Activity , RequestURL , SourceIP, DestinationIP\n| extend suspectExeName = tolower(tostring(split(RequestURL, '/')[-1]))\n| join (endpointData) on $left.suspectExeName == $right.shortFileName \n| extend timestamp = TimeGenerated, IPCustomEntity = DestinationIP, AccountCustomEntity = TargetUserName, HostCustomEntity = Computer, URLCustomEntity = RequestURL\n",
                                             "version":  "1.0"
                                         },
                          "name":  "[concat(parameters('workspacename'), '/' , 'sentinel_vm_query_11')]",
                          "apiVersion":  "2020-03-01-preview",
                          "type":  "Microsoft.OperationalInsights/workspaces/savedSearches",
                          "location":  "[parameters('location')]"
                      },
                      {
                          "properties":  {
                                             "category":  "Sentinel-CEF-Detection-Medium",
                                             "displayName":  "Cisco - firewall block but success logon to Azure AD",
                                             "query":  "//Correlate IPs blocked by a Cisco firewall appliance with successful Azure Active Directory signins. \n//Because the IP was blocked by the firewall, that same IP logging on successfully to AAD is potentially suspect\n//and could indicate credential compromise for the user account.\n//\n\nlet PrivateIPregex = @'^127\\.|^10\\.|^172\\.1[6-9]\\.|^172\\.2[0-9]\\.|^172\\.3[0-1]\\.|^192\\.168\\.';\nlet endtime = 1d;\nCommonSecurityLog\n| where TimeGenerated \u003e= ago(endtime) \n| where DeviceVendor =~ \"Cisco\"\n| where DeviceAction =~ \"denied\"\n| extend SourceIPType = iff(SourceIP matches regex PrivateIPregex,\"private\" ,\"public\" )\n| where SourceIPType == \"public\"\n| summarize count() by SourceIP\n| join (\n    // Successful signins from IPs blocked by the firewall solution are suspect\n    // Include fully successful sign-ins, but also ones that failed only at MFA stage\n    // as that supposes the password was sucessfully guessed.\n  SigninLogs\n  | where ResultType in (\"0\", \"50074\", \"50076\") \n) on $left.SourceIP == $right.IPAddress\n| extend timestamp = TimeGenerated, IPCustomEntity = SourceIP, AccountCustomEntity = UserPrincipalName\n",
                                             "version":  "1.0"
                                         },
                          "name":  "[concat(parameters('workspacename'), '/' , 'sentinel_vm_query_12')]",
                          "apiVersion":  "2020-03-01-preview",
                          "type":  "Microsoft.OperationalInsights/workspaces/savedSearches",
                          "location":  "[parameters('location')]"
                      },
                      {
                          "properties":  {
                                             "category":  "Sentinel-CEF-Hunting-Common",
                                             "displayName":  "Failed Login Attempt by Expired account",
                                             "query":  "//This query looks at Account Logon events found through Windows Event Ids as well as SigninLogs to discover \n//login attempts by accounts that have expired.\n//\n\nlet timeframe = 1d;\n(union isfuzzy=true\n(SecurityEvent\n| where TimeGenerated \u003e= ago(timeframe) \n| where EventID == 4625\n//4625: An account failed to log on\n| where AccountType == 'User' \n| where SubStatus == '0xc0000193' \n| extend Reason = \ncase\n( SubStatus == '0xc0000193', 'Windows EventID (4625) - Account has expired', \"Unknown\")\n| project Computer, Account,  Reason , TimeGenerated\n),\n(\nSecurityEvent\n| where TimeGenerated \u003e= ago(timeframe) \n| where EventID == 4769\n//4769: A Kerberos service ticket was requested ( Kerberos Auth)\n| parse EventData with * 'Status\"\u003e' Status \"\u003c\" *\n| parse EventData with * 'TargetUserName\"\u003e' TargetUserName \"\u003c\" *\n| where Status == '0x12'\n| where TargetUserName !has \"$\" and isnotempty(TargetUserName)\n| extend Reason = \ncase(\nStatus == '0x12', 'Windows EventID (4769) - Account disabled, expired, locked out',\n'Unknown'), Account = TargetUserName \n| project Computer, Account, Reason , TimeGenerated\n),\n(\nSecurityEvent\n| where TimeGenerated \u003e= ago(timeframe) \n| where EventID == 4776 \n// 4776: The domain controller attempted to validate the credentials for an account ( NTLM Auth)\n| where Status == \"0xc0000193\"\n| extend Reason = \ncase(\nErrorCode == '0xc0000193', 'Windows EventID (4776) - Account has expired',\n'Unknown'), Account = TargetAccount \n| parse EventData with * 'Workstation\"\u003e' Workstation \"\u003c\" *\n| extend Workstation = trim_start(@\"[\\\\]*\", Workstation)\n| extend Computer = iff(isnotempty(Workstation), Workstation, Computer ) \n| project Computer, Account, Reason , TimeGenerated\n) ,\n(\nSigninLogs\n| where TimeGenerated \u003e= ago(timeframe) \n| where ResultType == \"50057\" \n| extend Reason = \ncase(\nResultType == '50057', 'SigninLogs( Result Code- 50057) - User account is disabled. The account has been disabled by an administrator.',\n'Unknown'), Account = UserPrincipalName \n| project Computer, Account, Reason , TimeGenerated\n) )\n| summarize StartTimeUtc = min(TimeGenerated), EndTImeUtc = max(TimeGenerated), EventCount = count() by Computer, Account, Reason\n| extend timestamp = StartTimeUtc, AccountCustomEntity = Account, HostCustomEntity = Computer\n| order by EventCount desc \n",
                                             "version":  "1.0"
                                         },
                          "name":  "[concat(parameters('workspacename'), '/' , 'sentinel_CEF_query_13')]",
                          "apiVersion":  "2020-03-01-preview",
                          "type":  "Microsoft.OperationalInsights/workspaces/savedSearches",
                          "location":  "[parameters('location')]"
                      },
                      {
                          "properties":  {
                                             "category":  "Sentinel-CEF-Hunting-Common",
                                             "displayName":  "Retrospective hunt for STRONTIUM IP IOCs",
                                             "query":  "//Matches domain name IOCs related to Strontium group activity with CommonSecurityLog and SecurityAlert dataTypes.\n//The query is scoped in the time window that these IOCs were active.\n//References: https://blogs.microsoft.com/on-the-issues/2019/07/17/new-cyberthreats-require-new-ways-to-protect-democracy.\n//\n\nlet STRONTIUM_IPS = dynamic([\"82.118.242.171\" , \"167.114.153.55\" , \"94.237.37.28\", \"31.220.61.251\" , \"128.199.199.187\" ]);\n(union isfuzzy=true\n(CommonSecurityLog\n| where TimeGenerated between (startofday(datetime(2019-02-01)) .. endofday(datetime(2019-08-05)))\n| where SourceIP in (STRONTIUM_IPS) or DestinationIP in (STRONTIUM_IPS)\n| extend IPCustomEntity = SourceIP\n),\n(SecurityAlert\n| where TimeGenerated between (startofday(datetime(2019-02-01)) .. endofday(datetime(2019-08-05)))\n| extend RemoteAddress = iff(ExtendedProperties has \"RemoteAddress\", tostring(parse_json(ExtendedProperties)[\"RemoteAddress\"]), \"None\")\n| where RemoteAddress != \"None\"\n| where RemoteAddress in (STRONTIUM_IPS)\n| extend IPCustomEntity = RemoteAddress\n) \n)\n| extend timestamp = TimeGenerated\n",
                                             "version":  "1.0"
                                         },
                          "name":  "[concat(parameters('workspacename'), '/' , 'sentinel_CEF_query_14')]",
                          "apiVersion":  "2020-03-01-preview",
                          "type":  "Microsoft.OperationalInsights/workspaces/savedSearches",
                          "location":  "[parameters('location')]"
                      },
                      {
                          "name":  "[parameters('security - Cisco_id')]",
                          "properties":  {
                                             "displayName":  "security - CEF Cisco logs",
                                             "serializedData":  "{   \"version\": \"Notebook/1.0\",   \"items\": [     {       \"type\": 1,       \"content\": {         \"json\": \"## Cisco\"       },       \"name\": \"text - 2\"     },     {       \"type\": 9,       \"content\": {         \"version\": \"KqlParameterItem/1.0\",         \"query\": \"\",         \"crossComponentResources\": [],         \"parameters\": [           {             \"id\": \"94910267-b8f6-4b30-aa2f-e5780ad9738e\",             \"version\": \"KqlParameterItem/1.0\",             \"name\": \"TimeRange\",             \"type\": 4,             \"isRequired\": true,             \"value\": {               \"durationMs\": 7776000000             },             \"typeSettings\": {               \"selectableValues\": [                 {                   \"durationMs\": 300000                 },                 {                   \"durationMs\": 900000                 },                 {                   \"durationMs\": 1800000                 },                 {                   \"durationMs\": 3600000                 },                 {                   \"durationMs\": 14400000                 },                 {                   \"durationMs\": 43200000                 },                 {                   \"durationMs\": 86400000                 },                 {                   \"durationMs\": 172800000                 },                 {                   \"durationMs\": 259200000                 },                 {                   \"durationMs\": 604800000                 },                 {                   \"durationMs\": 1209600000                 },                 {                   \"durationMs\": 2419200000                 },                 {                   \"durationMs\": 2592000000                 },                 {                   \"durationMs\": 5184000000                 },                 {                   \"durationMs\": 7776000000                 }               ],               \"allowCustom\": true             }           },           {             \"id\": \"bb491a9f-3089-4a2e-a6de-e7efbc77e7f6\",             \"version\": \"KqlParameterItem/1.0\",             \"name\": \"DeviceAddress\",             \"label\": \"Device Address\",             \"type\": 2,             \"isRequired\": true,             \"multiSelect\": true,             \"quote\": \"'\",             \"delimiter\": \",\",             \"query\": \"CommonSecurityLog\\r\\n| where DeviceProduct =~ 'ASA'\\r\\n| where DeviceVendor =~ 'Cisco'\\r\\n| distinct DeviceAddress\",             \"value\": [               \"value::all\"             ],             \"typeSettings\": {               \"additionalResourceOptions\": [                 \"value::all\"               ],               \"selectAllValue\": \"All\"             },             \"timeContext\": {               \"durationMs\": 0             },             \"timeContextFromParameter\": \"TimeRange\",             \"queryType\": 0,             \"resourceType\": \"microsoft.operationalinsights/workspaces\"           }         ],         \"style\": \"pills\",         \"queryType\": 0,         \"resourceType\": \"microsoft.operationalinsights/workspaces\"       },       \"name\": \"parameters - 1\"     },     {       \"type\": 3,       \"content\": {         \"version\": \"KqlItem/1.0\",         \"query\": \"//Count by Action\\r\\nlet data = CommonSecurityLog\\r\\n| where DeviceProduct =~ 'ASA'\\r\\n| where DeviceVendor =~ 'Cisco'\\r\\n| where DeviceAction != ''\\r\\n| where \\\"{DeviceAddress:lable}\\\" == \\\"All\\\" or DeviceAddress in ({DeviceAddress});\\r\\ndata\\r\\n| summarize Count = count() by SimplifiedDeviceAction\\r\\n| join kind = inner (data\\r\\n | make-series Trend = count() default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step {TimeRange:grain} by SimplifiedDeviceAction)\\r\\n on SimplifiedDeviceAction\\r\\n| project-away SimplifiedDeviceAction1, TimeGenerated\\r\\n| extend SimplifiedDeviceActions = SimplifiedDeviceAction\\r\\n| union (\\r\\n data \\r\\n | summarize Count = count() \\r\\n | extend jkey = 1\\r\\n | join kind=inner (data\\r\\n | make-series Trend = count() default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step {TimeRange:grain}\\r\\n | extend jkey = 1) on jkey\\r\\n | extend SimplifiedDeviceAction = 'All', SimplifiedDeviceActions = '*' \\r\\n)\\r\\n| order by Count desc\\r\\n| take 10\",         \"size\": 3,         \"exportFieldName\": \"SimplifiedDeviceAction\",         \"exportParameterName\": \"SelectedDeviceAction\",         \"exportDefaultValue\": \"All\",         \"exportToExcelOptions\": \"visible\",         \"title\": \"Events, by action\",         \"timeContext\": {           \"durationMs\": 0         },         \"timeContextFromParameter\": \"TimeRange\",         \"queryType\": 0,         \"resourceType\": \"microsoft.operationalinsights/workspaces\",         \"visualization\": \"tiles\",         \"tileSettings\": {           \"titleContent\": {             \"columnMatch\": \"SimplifiedDeviceAction\",             \"formatter\": 1,             \"formatOptions\": {               \"showIcon\": true             }           },           \"leftContent\": {             \"columnMatch\": \"Count\",             \"formatter\": 12,             \"formatOptions\": {               \"palette\": \"auto\",               \"showIcon\": true             },             \"numberFormat\": {               \"unit\": 17,               \"options\": {                 \"maximumSignificantDigits\": 3,                 \"maximumFractionDigits\": 2               }             }           },           \"secondaryContent\": {             \"columnMatch\": \"Trend\",             \"formatter\": 9,             \"formatOptions\": {               \"showIcon\": true             }           },           \"showBorder\": false         }       },       \"customWidth\": \"33\",       \"name\": \"Events by action\"     },     {       \"type\": 3,       \"content\": {         \"version\": \"KqlItem/1.0\",         \"query\": \"//Count by Severity\\r\\nlet data = CommonSecurityLog\\r\\n| where DeviceProduct =~ 'ASA'\\r\\n| where DeviceVendor =~ 'Cisco'\\r\\n| where \\\"{DeviceAddress:lable}\\\" == \\\"All\\\" or DeviceAddress in ({DeviceAddress});\\r\\ndata\\r\\n| summarize Count = count() by LogSeverity\\r\\n| join kind = inner (data\\r\\n | make-series Trend = count() default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step {TimeRange:grain} by LogSeverity)\\r\\n on LogSeverity\\r\\n| project-away LogSeverity1, TimeGenerated\\r\\n| extend LogSeveritys = LogSeverity\\r\\n| union (\\r\\n data \\r\\n | summarize Count = count() \\r\\n | extend jkey = 1\\r\\n | join kind=inner (data\\r\\n | make-series Trend = count() default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step {TimeRange:grain}\\r\\n | extend jkey = 1) on jkey\\r\\n | extend LogSeverity = 'All', LogSeveritys = '*' \\r\\n)\\r\\n| order by Count desc, LogSeverity asc\\r\\n| take 10\",         \"size\": 3,         \"exportFieldName\": \"LogSeverity\",         \"exportParameterName\": \"SelectedLogSeverity\",         \"exportDefaultValue\": \"All\",         \"exportToExcelOptions\": \"visible\",         \"title\": \"Severity, by volume\",         \"timeContext\": {           \"durationMs\": 0         },         \"timeContextFromParameter\": \"TimeRange\",         \"queryType\": 0,         \"resourceType\": \"microsoft.operationalinsights/workspaces\",         \"visualization\": \"tiles\",         \"tileSettings\": {           \"titleContent\": {             \"columnMatch\": \"LogSeverity\",             \"formatter\": 1,             \"formatOptions\": {               \"showIcon\": true             }           },           \"leftContent\": {             \"columnMatch\": \"Count\",             \"formatter\": 12,             \"formatOptions\": {               \"palette\": \"auto\",               \"showIcon\": true             },             \"numberFormat\": {               \"unit\": 17,               \"options\": {                 \"maximumSignificantDigits\": 3,                 \"maximumFractionDigits\": 2               }             }           },           \"secondaryContent\": {             \"columnMatch\": \"Trend\",             \"formatter\": 9,             \"formatOptions\": {               \"showIcon\": true             }           },           \"showBorder\": false,           \"sortCriteriaField\": \"LogSeverity\",           \"sortOrderField\": 1         }       },       \"customWidth\": \"33\",       \"name\": \"Severity by volume\"     },     {       \"type\": 3,       \"content\": {         \"version\": \"KqlItem/1.0\",         \"query\": \"//volume by time\\r\\nCommonSecurityLog\\r\\n| where DeviceVendor =~ 'Cisco'\\r\\n| where DeviceProduct =~ 'ASA'\\r\\n| where \\\"{DeviceAddress:lable}\\\" == \\\"All\\\" or DeviceAddress in ({DeviceAddress})\\r\\n| where '{SelectedDeviceAction}' == \\\"All\\\" or '{SelectedDeviceAction}' == SimplifiedDeviceAction\\r\\n| where '{SelectedLogSeverity}' == \\\"All\\\" or '{SelectedLogSeverity}' == LogSeverity\\r\\n| summarize Volme=count() by bin(TimeGenerated,{TimeRange:grain})\",         \"size\": 0,         \"exportToExcelOptions\": \"visible\",         \"title\": \"Event trends, by time\",         \"timeContext\": {           \"durationMs\": 0         },         \"timeContextFromParameter\": \"TimeRange\",         \"queryType\": 0,         \"resourceType\": \"microsoft.operationalinsights/workspaces\",         \"visualization\": \"timechart\"       },       \"customWidth\": \"50\",       \"name\": \"Severity\"     },     {       \"type\": 3,       \"content\": {         \"version\": \"KqlItem/1.0\",         \"query\": \"//volume by time\\r\\nCommonSecurityLog\\r\\n| where DeviceVendor =~ 'Cisco'\\r\\n| where DeviceProduct =~ 'ASA'\\r\\n| where \\\"{DeviceAddress:lable}\\\" == \\\"All\\\" or DeviceAddress in ({DeviceAddress})\\r\\n| where '{SelectedDeviceAction}' == \\\"All\\\" or '{SelectedDeviceAction}' == SimplifiedDeviceAction\\r\\n| where '{SelectedLogSeverity}' == \\\"All\\\" or '{SelectedLogSeverity}' == LogSeverity\\r\\n| summarize Volume=count() by LogSeverity, bin(TimeGenerated, {TimeRange:grain})\",         \"size\": 0,         \"exportToExcelOptions\": \"visible\",         \"title\": \"Event severity, by time\",         \"timeContext\": {           \"durationMs\": 0         },         \"timeContextFromParameter\": \"TimeRange\",         \"queryType\": 0,         \"resourceType\": \"microsoft.operationalinsights/workspaces\",         \"visualization\": \"timechart\"       },       \"customWidth\": \"50\",       \"name\": \"Event severity by time\"     },     {       \"type\": 3,       \"content\": {         \"version\": \"KqlItem/1.0\",         \"query\": \"CommonSecurityLog\\r\\n| where DeviceProduct =~ 'ASA'\\r\\n| where DeviceVendor =~ 'Cisco'\\r\\n| where '{DeviceAddress:label}' == \\\"All\\\" or DeviceAddress in ({DeviceAddress})\\r\\n| where '{SelectedDeviceAction}' == \\\"All\\\" or '{SelectedDeviceAction}' == SimplifiedDeviceAction\\r\\n| where '{SelectedLogSeverity}' == \\\"All\\\" or '{SelectedLogSeverity}' == LogSeverity\\r\\n| project TimeGenerated, LogSeverity, DeviceAction, SimplifiedDeviceAction, DeviceAddress, DestinationPort, DestinationIP, Message, Protocol, SourcePort, SourceIP\\r\\n| sort by TimeGenerated desc\",         \"size\": 0,         \"exportToExcelOptions\": \"visible\",         \"title\": \"All events, by time\",         \"timeContext\": {           \"durationMs\": 0         },         \"timeContextFromParameter\": \"TimeRange\",         \"queryType\": 0,         \"resourceType\": \"microsoft.operationalinsights/workspaces\",         \"visualization\": \"table\",         \"gridSettings\": {           \"filter\": true,           \"labelSettings\": []         }       },       \"name\": \"All events, by time\"     },     {       \"type\": 1,       \"content\": {         \"json\": \"---\"       },       \"name\": \"text - 6\"     },     {       \"type\": 3,       \"content\": {         \"version\": \"KqlItem/1.0\",         \"query\": \"//no. of concurrent sessions\\r\\nCommonSecurityLog\\r\\n| where DeviceProduct =~ 'ASA'\\r\\n| where DeviceVendor =~ 'Cisco'\\r\\n| where '{DeviceAddress:label}' == \\\"All\\\" or DeviceAddress in ({DeviceAddress})\\r\\n| where DeviceEventClassID  == '302010'\\r\\n| extend ConcurrentSession= extract('%ASA-6-302010: ([0-9]*?) in use,',1,Message)\\r\\n| summarize AvgSession=avg(toint(ConcurrentSession)) by TimeGenerated\",         \"size\": 0,         \"exportToExcelOptions\": \"visible\",         \"title\": \"Average concurrent sessions, by time\",         \"timeContext\": {           \"durationMs\": 0         },         \"timeContextFromParameter\": \"TimeRange\",         \"queryType\": 0,         \"resourceType\": \"microsoft.operationalinsights/workspaces\",         \"visualization\": \"timechart\"       },       \"customWidth\": \"33\",       \"name\": \"concurrent\"     },     {       \"type\": 3,       \"content\": {         \"version\": \"KqlItem/1.0\",         \"query\": \"//Max Sessions\\r\\nCommonSecurityLog\\r\\n| where DeviceProduct =~ 'ASA'\\r\\n| where DeviceVendor =~ 'Cisco'\\r\\n| where '{DeviceAddress:label}' == \\\"All\\\" or DeviceAddress in ({DeviceAddress})\\r\\n| where DeviceEventClassID  == '302010'\\r\\n| extend MaxSessions= extract('%ASA-6-302010:.*, ([0-9].*?) most used',1,Message)\\r\\n| summarize AvgSession=avg(toint(MaxSessions)) by TimeGenerated\\r\\n\",         \"size\": 0,         \"exportToExcelOptions\": \"visible\",         \"title\": \"Average max concurrent sessions, by time\",         \"timeContext\": {           \"durationMs\": 0         },         \"timeContextFromParameter\": \"TimeRange\",         \"queryType\": 0,         \"resourceType\": \"microsoft.operationalinsights/workspaces\",         \"visualization\": \"timechart\"       },       \"customWidth\": \"33\",       \"name\": \"max concurrent\"     },     {       \"type\": 3,       \"content\": {         \"version\": \"KqlItem/1.0\",         \"query\": \"//top 5 reason for packet drop\\r\\nCommonSecurityLog\\r\\n| where DeviceProduct =~ 'ASA'\\r\\n| where DeviceVendor =~ 'Cisco'\\r\\n| where '{DeviceAddress:label}' == \\\"All\\\" or DeviceAddress in ({DeviceAddress})\\r\\n| where DeviceEventClassID == '733100'\\r\\n| extend TrafficType= extract('%ASA-4-733100: \\\\\\\\[(.*?)\\\\\\\\]',1,Message)\\r\\n| project TrafficType\\r\\n| summarize AttackCount=count() by TrafficType\\r\\n| top 5 by AttackCount desc\",         \"size\": 0,         \"exportToExcelOptions\": \"visible\",         \"title\": \"Top 5 reasons for packet drop\",         \"timeContext\": {           \"durationMs\": 0         },         \"timeContextFromParameter\": \"TimeRange\",         \"queryType\": 0,         \"resourceType\": \"microsoft.operationalinsights/workspaces\",         \"gridSettings\": {           \"formatters\": [             {               \"columnMatch\": \"TrafficType\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"AttackCount\",               \"formatter\": 4,               \"formatOptions\": {                 \"palette\": \"coldHot\",                 \"showIcon\": true               }             }           ],           \"labelSettings\": []         }       },       \"customWidth\": \"30\",       \"name\": \"Top 5 reasons for packet drop\"     },     {       \"type\": 1,       \"content\": {         \"json\": \"---\\r\\n## Firewall log trends and activities\"       },       \"name\": \"text - 14\"     },     {       \"type\": 3,       \"content\": {         \"version\": \"KqlItem/1.0\",         \"query\": \"//Communication direction count by time\\r\\nCommonSecurityLog\\r\\n| where DeviceProduct =~ 'ASA'\\r\\n| where DeviceVendor =~ 'Cisco'\\r\\n| where '{DeviceAddress:label}' == \\\"All\\\" or DeviceAddress in ({DeviceAddress})\\r\\n| where CommunicationDirection != ''\\r\\n| summarize DirectionVolume=count() by CommunicationDirection, bin(TimeGenerated, {TimeRange:grain})\",         \"size\": 0,         \"exportToExcelOptions\": \"visible\",         \"title\": \"Inbound Outbound Time Trend\",         \"timeContext\": {           \"durationMs\": 0         },         \"timeContextFromParameter\": \"TimeRange\",         \"queryType\": 0,         \"resourceType\": \"microsoft.operationalinsights/workspaces\",         \"visualization\": \"timechart\"       },       \"customWidth\": \"25\",       \"name\": \"Inbound Outbound Time Trend\"     },     {       \"type\": 3,       \"content\": {         \"version\": \"KqlItem/1.0\",         \"query\": \"//out bound\\r\\nCommonSecurityLog\\r\\n| where DeviceProduct =~ 'ASA'\\r\\n| where DeviceVendor =~ 'Cisco'\\r\\n| where '{DeviceAddress:label}' == \\\"All\\\" or DeviceAddress in ({DeviceAddress})\\r\\n| where CommunicationDirection contains   'outbound'\\r\\n| summarize TrafficVolume=count() by SimplifiedDeviceAction, TimeGenerated\\r\\n\",         \"size\": 0,         \"exportToExcelOptions\": \"visible\",         \"title\": \"Outbound traffic connection, by time\",         \"timeContext\": {           \"durationMs\": 0         },         \"timeContextFromParameter\": \"TimeRange\",         \"queryType\": 0,         \"resourceType\": \"microsoft.operationalinsights/workspaces\",         \"visualization\": \"timechart\"       },       \"customWidth\": \"25\",       \"name\": \"Outbound traffic connection by time\"     },     {       \"type\": 3,       \"content\": {         \"version\": \"KqlItem/1.0\",         \"query\": \"//allowd vs denied for in bound\\r\\nCommonSecurityLog\\r\\n| where DeviceProduct =~ 'ASA'\\r\\n| where DeviceVendor =~ 'Cisco'\\r\\n| where '{DeviceAddress:label}' == \\\"All\\\" or DeviceAddress in ({DeviceAddress})\\r\\n| where CommunicationDirection contains   'inbound'\\r\\n| where SimplifiedDeviceAction in ('Deny', 'Allow')\\r\\n| summarize TrafficVolume=count() by SimplifiedDeviceAction, TimeGenerated\",         \"size\": 0,         \"exportToExcelOptions\": \"visible\",         \"title\": \"Inbound traffic events, by time\",         \"timeContext\": {           \"durationMs\": 0         },         \"timeContextFromParameter\": \"TimeRange\",         \"queryType\": 0,         \"resourceType\": \"microsoft.operationalinsights/workspaces\",         \"visualization\": \"timechart\"       },       \"customWidth\": \"25\",       \"name\": \"Inbound traffic events by time\"     },     {       \"type\": 3,       \"content\": {         \"version\": \"KqlItem/1.0\",         \"query\": \"//Communication direction count\\r\\nCommonSecurityLog\\r\\n| where DeviceProduct =~ 'ASA'\\r\\n| where DeviceVendor =~ 'Cisco'\\r\\n| where '{DeviceAddress:label}' == \\\"All\\\" or DeviceAddress in ({DeviceAddress})\\r\\n| where CommunicationDirection != ''\\r\\n| summarize DirectionVolume=count() by CommunicationDirection\\r\\n\",         \"size\": 0,         \"exportToExcelOptions\": \"visible\",         \"title\": \"Summary of inbound and outbound traffic\",         \"timeContext\": {           \"durationMs\": 0         },         \"timeContextFromParameter\": \"TimeRange\",         \"queryType\": 0,         \"resourceType\": \"microsoft.operationalinsights/workspaces\",         \"visualization\": \"timechart\"       },       \"customWidth\": \"25\",       \"name\": \"Summary of inbound and outbound traffic\"     },     {       \"type\": 1,       \"content\": {         \"json\": \"---\\r\\n## Top 5 allowed and blocked ports\"       },       \"name\": \"text - 15\"     },     {       \"type\": 3,       \"content\": {         \"version\": \"KqlItem/1.0\",         \"query\": \"//top 5 port inbound Allow \\r\\nCommonSecurityLog \\r\\n| where DeviceProduct =~ 'ASA' \\r\\n| where DeviceVendor =~ 'Cisco' \\r\\n| where '{DeviceAddress:label}' == \\\"All\\\" or DeviceAddress in ({DeviceAddress})\\r\\n| where DeviceEventClassID == '106100'  \\r\\n | where SimplifiedDeviceAction == 'Allow' \\r\\n//| where Message contains ' -\u003e inside'  \\r\\n| extend DestinationPortS=tostring(DestinationPort)   \\r\\n| summarize PortCount=count() by DestinationPortS \\r\\n| top 5 by PortCount desc\",         \"size\": 0,         \"exportToExcelOptions\": \"visible\",         \"title\": \"Top 5 allowed inbound ports\",         \"timeContext\": {           \"durationMs\": 0         },         \"timeContextFromParameter\": \"TimeRange\",         \"queryType\": 0,         \"resourceType\": \"microsoft.operationalinsights/workspaces\",         \"gridSettings\": {           \"formatters\": [             {               \"columnMatch\": \"DestinationPortS\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"PortCount\",               \"formatter\": 4,               \"formatOptions\": {                 \"showIcon\": true               }             }           ],           \"labelSettings\": []         }       },       \"customWidth\": \"25\",       \"name\": \"Top 5 allowed inbound ports\"     },     {       \"type\": 3,       \"content\": {         \"version\": \"KqlItem/1.0\",         \"query\": \"//top 5 port inbound deny\\r\\nCommonSecurityLog\\r\\n| where DeviceProduct =~ 'ASA'\\r\\n| where DeviceVendor =~ 'Cisco'\\r\\n| where '{DeviceAddress:label}' == \\\"All\\\" or DeviceAddress in ({DeviceAddress})\\r\\n| where CommunicationDirection contains   'inbound'\\r\\n  | where SimplifiedDeviceAction == 'Deny'\\r\\n| extend DestinationPortS=tostring(DestinationPort)\\r\\n| summarize PortCount=count() by DestinationPortS\\r\\n| top 5 by PortCount desc\",         \"size\": 0,         \"exportToExcelOptions\": \"visible\",         \"title\": \"Top 5 blocked inbound ports\",         \"timeContext\": {           \"durationMs\": 0         },         \"timeContextFromParameter\": \"TimeRange\",         \"queryType\": 0,         \"resourceType\": \"microsoft.operationalinsights/workspaces\",         \"gridSettings\": {           \"formatters\": [             {               \"columnMatch\": \"DestinationPortS\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"PortCount\",               \"formatter\": 4,               \"formatOptions\": {                 \"showIcon\": true               }             }           ],           \"labelSettings\": []         }       },       \"customWidth\": \"25\",       \"name\": \"Top 5 blocked inbound ports\"     },     {       \"type\": 3,       \"content\": {         \"version\": \"KqlItem/1.0\",         \"query\": \"//top 5 port outbound Allow\\r\\nCommonSecurityLog\\r\\n| where DeviceProduct =~ 'ASA'\\r\\n| where DeviceVendor =~ 'Cisco'\\r\\n| where '{DeviceAddress:label}' == \\\"All\\\" or DeviceAddress in ({DeviceAddress})\\r\\n| where DeviceEventClassID == '106100'\\r\\n | where SimplifiedDeviceAction == 'Allow'\\r\\n//| where Message contains ' -\u003e management'\\r\\n| extend DestinationPortS=tostring(DestinationPort)\\r\\n| summarize PortCount=count() by DestinationPortS\\r\\n| top 5 by PortCount desc\\r\\n\",         \"size\": 0,         \"exportToExcelOptions\": \"visible\",         \"title\": \"Top 5 allowed outbound ports\",         \"timeContext\": {           \"durationMs\": 0         },         \"timeContextFromParameter\": \"TimeRange\",         \"queryType\": 0,         \"resourceType\": \"microsoft.operationalinsights/workspaces\",         \"gridSettings\": {           \"formatters\": [             {               \"columnMatch\": \"DestinationPortS\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"PortCount\",               \"formatter\": 4,               \"formatOptions\": {                 \"showIcon\": true               }             }           ],           \"labelSettings\": []         }       },       \"customWidth\": \"25\",       \"name\": \"Top 5 allowed outbound ports\"     },     {       \"type\": 3,       \"content\": {         \"version\": \"KqlItem/1.0\",         \"query\": \"//Top 5 Outbound Ports Denied\\r\\nCommonSecurityLog\\r\\n| where DeviceProduct =~ 'ASA'\\r\\n| where DeviceVendor =~ 'Cisco'\\r\\n| where '{DeviceAddress:label}' == \\\"All\\\" or DeviceAddress in ({DeviceAddress})\\r\\n| where CommunicationDirection contains'outbound'\\r\\n| where SimplifiedDeviceAction =='Deny'\\r\\n| extend DestinationPortS=tostring(DestinationPort)\\r\\n| summarize PortCount=count() by DestinationPortS\\r\\n| top 5 by PortCount desc \",         \"size\": 0,         \"exportToExcelOptions\": \"visible\",         \"title\": \"Top 5 denied outbound ports\",         \"timeContext\": {           \"durationMs\": 0         },         \"timeContextFromParameter\": \"TimeRange\",         \"queryType\": 0,         \"resourceType\": \"microsoft.operationalinsights/workspaces\",         \"gridSettings\": {           \"formatters\": [             {               \"columnMatch\": \"DestinationPortS\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"PortCount\",               \"formatter\": 4,               \"formatOptions\": {                 \"showIcon\": true               }             }           ],           \"labelSettings\": []         }       },       \"customWidth\": \"25\",       \"name\": \"Top 5 denied outbound ports\"     },     {       \"type\": 1,       \"content\": {         \"json\": \"---\\r\\n## Top 5 allowed and blocked IP addresses\"       },       \"name\": \"text - 20\"     },     {       \"type\": 3,       \"content\": {         \"version\": \"KqlItem/1.0\",         \"query\": \"//top 5 protocol Deny\\r\\nCommonSecurityLog\\r\\n| where DeviceProduct =~ 'ASA'\\r\\n| where DeviceVendor =~ 'Cisco'\\r\\n| where '{DeviceAddress:label}' == \\\"All\\\" or DeviceAddress in ({DeviceAddress})\\r\\n| where Protocol != ''\\r\\n| where SimplifiedDeviceAction == 'Deny'\\r\\n| summarize ProtocolCount= count() by Protocol\\r\\n| top 5 by ProtocolCount\\r\\n\",         \"size\": 0,         \"exportToExcelOptions\": \"visible\",         \"title\": \"Top 5 denied protocols\",         \"timeContext\": {           \"durationMs\": 0         },         \"timeContextFromParameter\": \"TimeRange\",         \"queryType\": 0,         \"resourceType\": \"microsoft.operationalinsights/workspaces\",         \"visualization\": \"piechart\"       },       \"customWidth\": \"25\",       \"name\": \"Top 5 denied protocols\"     },     {       \"type\": 3,       \"content\": {         \"version\": \"KqlItem/1.0\",         \"query\": \"//top 5 protocol Allow\\r\\nCommonSecurityLog\\r\\n| where DeviceProduct =~ 'ASA'\\r\\n| where DeviceVendor =~ 'Cisco'\\r\\n| where '{DeviceAddress:label}' == \\\"All\\\" or DeviceAddress in ({DeviceAddress})\\r\\n| where Protocol != ''\\r\\n| where SimplifiedDeviceAction == 'Allow'\\r\\n| summarize ProtocolCount= count() by Protocol\\r\\n| top 5 by ProtocolCount\",         \"size\": 0,         \"exportToExcelOptions\": \"visible\",         \"title\": \"Top 5 allowed protocols\",         \"timeContext\": {           \"durationMs\": 0         },         \"timeContextFromParameter\": \"TimeRange\",         \"queryType\": 0,         \"resourceType\": \"microsoft.operationalinsights/workspaces\",         \"visualization\": \"piechart\"       },       \"customWidth\": \"25\",       \"name\": \"Top 5 allowed protocols\"     },     {       \"type\": 3,       \"content\": {         \"version\": \"KqlItem/1.0\",         \"query\": \"//Top 5 Inbound Destination IP Addresses Blocked \\r\\nCommonSecurityLog \\r\\n| where DeviceProduct =~ 'ASA' \\r\\n| where DeviceVendor =~ 'Cisco' \\r\\n| where '{DeviceAddress:label}' == \\\"All\\\" or DeviceAddress in ({DeviceAddress})\\r\\n| where CommunicationDirection contains   'inbound' \\r\\n| where SimplifiedDeviceAction == 'Deny' \\r\\n| summarize IpCount= count()  by DestinationIP \\r\\n| top 5 by IpCount desc nulls last \",         \"size\": 0,         \"exportToExcelOptions\": \"visible\",         \"title\": \"Top 5 blocked inbound destination IP addresses\",         \"timeContext\": {           \"durationMs\": 0         },         \"timeContextFromParameter\": \"TimeRange\",         \"queryType\": 0,         \"resourceType\": \"microsoft.operationalinsights/workspaces\",         \"visualization\": \"table\",         \"gridSettings\": {           \"formatters\": [             {               \"columnMatch\": \"DestinationIP\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"IpCount\",               \"formatter\": 4,               \"formatOptions\": {                 \"showIcon\": true               }             }           ],           \"labelSettings\": []         }       },       \"customWidth\": \"25\",       \"name\": \"Top 5 blocked inbound destination IP addresses\"     },     {       \"type\": 3,       \"content\": {         \"version\": \"KqlItem/1.0\",         \"query\": \"//Top 5 Inbound Destination IP Addresses Allowed \\r\\nCommonSecurityLog \\r\\n| where DeviceProduct =~ 'ASA' \\r\\n| where DeviceVendor =~ 'Cisco' \\r\\n| where '{DeviceAddress:label}' == \\\"All\\\" or DeviceAddress in ({DeviceAddress})\\r\\n| where CommunicationDirection contains   'inbound' \\r\\n| where DestinationIP != '' \\r\\n| where SimplifiedDeviceAction == 'Allow' or SimplifiedDeviceAction == 'Built' \\r\\n| summarize IpCount= count()  by DestinationIP \\r\\n| top 5 by IpCount desc nulls last\",         \"size\": 0,         \"exportToExcelOptions\": \"visible\",         \"title\": \"Top 5 allowed inbound destination IP addresses\",         \"timeContext\": {           \"durationMs\": 0         },         \"timeContextFromParameter\": \"TimeRange\",         \"queryType\": 0,         \"resourceType\": \"microsoft.operationalinsights/workspaces\",         \"gridSettings\": {           \"formatters\": [             {               \"columnMatch\": \"DestinationIP\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"IpCount\",               \"formatter\": 4,               \"formatOptions\": {                 \"showIcon\": true               }             }           ],           \"labelSettings\": []         }       },       \"customWidth\": \"25\",       \"name\": \"Top 5 allowed inbound destination IP addresses\"     },     {       \"type\": 3,       \"content\": {         \"version\": \"KqlItem/1.0\",         \"query\": \"//top 5 outbound deny dst ip\\r\\nCommonSecurityLog\\r\\n| where DeviceProduct =~ 'ASA'\\r\\n| where DeviceVendor =~ 'Cisco'\\r\\n| where '{DeviceAddress:label}' == \\\"All\\\" or DeviceAddress in ({DeviceAddress})\\r\\n| where DeviceEventClassID == '106100'\\r\\n | where SimplifiedDeviceAction == 'Deny'\\r\\n//| where Message contains ' -\u003e management'\\r\\n| summarize IpCount= count()  by DestinationIP\\r\\n| top 5 by IpCount desc nulls last\\r\\n\",         \"size\": 0,         \"exportToExcelOptions\": \"visible\",         \"title\": \"Top 5 denied outbound destination IP addresses\",         \"timeContext\": {           \"durationMs\": 0         },         \"timeContextFromParameter\": \"TimeRange\",         \"queryType\": 0,         \"resourceType\": \"microsoft.operationalinsights/workspaces\",         \"gridSettings\": {           \"formatters\": [             {               \"columnMatch\": \"DestinationIP\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"IpCount\",               \"formatter\": 4,               \"formatOptions\": {                 \"showIcon\": true               }             }           ],           \"labelSettings\": []         }       },       \"customWidth\": \"25\",       \"name\": \"Top 5 denied outbound destination IP addresses\"     },     {       \"type\": 3,       \"content\": {         \"version\": \"KqlItem/1.0\",         \"query\": \"//top 5 outbound Allow dst ip\\r\\nCommonSecurityLog\\r\\n| where DeviceProduct =~ 'ASA'\\r\\n| where DeviceVendor =~ 'Cisco'\\r\\n| where '{DeviceAddress:label}' == \\\"All\\\" or DeviceAddress in ({DeviceAddress})\\r\\n| where DeviceEventClassID == '106100'\\r\\n | where SimplifiedDeviceAction == 'Allow'\\r\\n | where Message contains ' -\u003e management'\\r\\n| summarize IpCount= count()  by DestinationIP\\r\\n| top 5 by IpCount desc nulls last\\r\\n\",         \"size\": 0,         \"exportToExcelOptions\": \"visible\",         \"title\": \"Top 5 allowed outbound destination IP addresses\",         \"timeContext\": {           \"durationMs\": 0         },         \"timeContextFromParameter\": \"TimeRange\",         \"queryType\": 0,         \"resourceType\": \"microsoft.operationalinsights/workspaces\",         \"gridSettings\": {           \"formatters\": [             {               \"columnMatch\": \"DestinationIP\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"IpCount\",               \"formatter\": 4,               \"formatOptions\": {                 \"showIcon\": true               }             }           ],           \"labelSettings\": []         }       },       \"customWidth\": \"25\",       \"name\": \"Top 5 allowed outbound destination IP addresses\"     },     {       \"type\": 3,       \"content\": {         \"version\": \"KqlItem/1.0\",         \"query\": \"//Top 5 Inbound Source IP Addresses Denied \\r\\nCommonSecurityLog \\r\\n| where DeviceProduct =~ 'ASA' \\r\\n| where DeviceVendor =~ 'Cisco' \\r\\n| where '{DeviceAddress:label}' == \\\"All\\\" or DeviceAddress in ({DeviceAddress})\\r\\n| where CommunicationDirection contains   'inbound' \\r\\n| where SimplifiedDeviceAction == 'Deny' \\r\\n| summarize IpCount= count()  by SourceIP \\r\\n| top 5 by IpCount desc nulls last\",         \"size\": 0,         \"exportToExcelOptions\": \"visible\",         \"title\": \"Top 5 denied inbound source IP addresses\",         \"timeContext\": {           \"durationMs\": 0         },         \"timeContextFromParameter\": \"TimeRange\",         \"queryType\": 0,         \"resourceType\": \"microsoft.operationalinsights/workspaces\",         \"gridSettings\": {           \"formatters\": [             {               \"columnMatch\": \"SourceIP\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"IpCount\",               \"formatter\": 4,               \"formatOptions\": {                 \"showIcon\": true               }             }           ],           \"labelSettings\": []         }       },       \"customWidth\": \"25\",       \"name\": \"Top 5 denied inbound source IP addresses\"     },     {       \"type\": 3,       \"content\": {         \"version\": \"KqlItem/1.0\",         \"query\": \"//Top 5 Outbound Source IP Addresses Allowed \\r\\nCommonSecurityLog \\r\\n| where DeviceProduct =~ 'ASA' \\r\\n| where DeviceVendor =~ 'Cisco' \\r\\n| where '{DeviceAddress:label}' == \\\"All\\\" or DeviceAddress in ({DeviceAddress})\\r\\n| where CommunicationDirection contains   'outbound' \\r\\n| where SimplifiedDeviceAction == 'Built' \\r\\n| summarize IpCount= count()  by SourceIP \\r\\n| top 5 by IpCount desc nulls last\",         \"size\": 0,         \"exportToExcelOptions\": \"visible\",         \"title\": \"Top 5 allowed outbound source IP addresses\",         \"timeContext\": {           \"durationMs\": 0         },         \"timeContextFromParameter\": \"TimeRange\",         \"queryType\": 0,         \"resourceType\": \"microsoft.operationalinsights/workspaces\",         \"gridSettings\": {           \"formatters\": [             {               \"columnMatch\": \"SourceIP\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"IpCount\",               \"formatter\": 4,               \"formatOptions\": {                 \"showIcon\": true               }             }           ],           \"labelSettings\": []         }       },       \"customWidth\": \"25\",       \"name\": \"Top 5 allowed outbound source IP addresses\"     },     {       \"type\": 1,       \"content\": {         \"json\": \"---\\r\\n## Firewall management\"       },       \"name\": \"text - 29\"     },     {       \"type\": 3,       \"content\": {         \"version\": \"KqlItem/1.0\",         \"query\": \"//Top 5 Source IP Addresses By Failed Authentication \\r\\nCommonSecurityLog \\r\\n| where DeviceProduct =~ 'ASA' \\r\\n| where DeviceVendor =~ 'Cisco' \\r\\n| where '{DeviceAddress:label}' == \\\"All\\\" or DeviceAddress in ({DeviceAddress})\\r\\n| where DeviceEventClassID == '611102' \\r\\n| extend IPAddress= extract('%ASA-6-611102:.*: IP address: (.*?), Uname.*',1,Message) \\r\\n| summarize IPAddressCount=count() by IPAddress \\r\\n| top 5 by IPAddressCount desc\",         \"size\": 0,         \"exportToExcelOptions\": \"visible\",         \"title\": \"Top 5 source IP addresses, by failed authentication\",         \"timeContext\": {           \"durationMs\": 0         },         \"timeContextFromParameter\": \"TimeRange\",         \"queryType\": 0,         \"resourceType\": \"microsoft.operationalinsights/workspaces\",         \"visualization\": \"piechart\",         \"gridSettings\": {           \"formatters\": [             {               \"columnMatch\": \"ipaddress\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"IPCount\",               \"formatter\": 4,               \"formatOptions\": {                 \"showIcon\": true               }             }           ],           \"labelSettings\": []         }       },       \"customWidth\": \"25\",       \"name\": \"Top 5 source IP addresses, by failed authentication\"     },     {       \"type\": 3,       \"content\": {         \"version\": \"KqlItem/1.0\",         \"query\": \"\\r\\n//Login Attempts For Nonexistent User Account \\r\\nCommonSecurityLog \\r\\n| where DeviceProduct =~ 'ASA' \\r\\n| where DeviceVendor =~ 'Cisco' \\r\\n| where '{DeviceAddress:label}' == \\\"All\\\" or DeviceAddress in ({DeviceAddress})\\r\\n| where DeviceEventClassID == '113015' \\r\\n| extend ipaddress=extract('%ASA-6-113015:.*: user IP = (.*)$',1,Message) \\r\\n| summarize IPCount=count() by ipaddress \\r\\n| top 5 by  IPCount desc\",         \"size\": 0,         \"exportToExcelOptions\": \"visible\",         \"title\": \"Logon attempts to nonexistent user account, by source IP address\",         \"timeContext\": {           \"durationMs\": 0         },         \"timeContextFromParameter\": \"TimeRange\",         \"queryType\": 0,         \"resourceType\": \"microsoft.operationalinsights/workspaces\",         \"visualization\": \"piechart\",         \"gridSettings\": {           \"formatters\": [             {               \"columnMatch\": \"ipaddress\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"IPCount\",               \"formatter\": 4,               \"formatOptions\": {                 \"showIcon\": true               }             }           ],           \"labelSettings\": []         }       },       \"customWidth\": \"25\",       \"name\": \"Logon attempts to nonexistent user account by source IP address\"     },     {       \"type\": 3,       \"content\": {         \"version\": \"KqlItem/1.0\",         \"query\": \"//Top 5 SSH Failed Attempt By Source IP \\r\\nCommonSecurityLog \\r\\n| where DeviceProduct =~ 'ASA' \\r\\n| where DeviceVendor =~ 'Cisco' \\r\\n| where '{DeviceAddress:label}' == \\\"All\\\" or DeviceAddress in ({DeviceAddress})\\r\\n| where DeviceEventClassID == '315011' \\r\\n| extend IP= extract('%ASA-6-315011: SSH session from (.*) on',1,Message) \\r\\n| summarize  ReasonCount=count() by IP \\r\\n| top 5 by ReasonCount  desc\",         \"size\": 0,         \"exportToExcelOptions\": \"visible\",         \"title\": \"Top 5 SSH failed attempts, by source IP address\",         \"timeContext\": {           \"durationMs\": 0         },         \"timeContextFromParameter\": \"TimeRange\",         \"queryType\": 0,         \"resourceType\": \"microsoft.operationalinsights/workspaces\",         \"visualization\": \"piechart\",         \"gridSettings\": {           \"formatters\": [             {               \"columnMatch\": \"IP\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"ReasonCount\",               \"formatter\": 4,               \"formatOptions\": {                 \"showIcon\": true               }             }           ],           \"labelSettings\": []         }       },       \"customWidth\": \"25\",       \"name\": \"Top 5 SSH failed attempts by source IP address\"     },     {       \"type\": 3,       \"content\": {         \"version\": \"KqlItem/1.0\",         \"query\": \"//Authentocation Success\\r\\nCommonSecurityLog\\r\\n| where DeviceProduct =~ 'ASA'\\r\\n| where DeviceVendor =~ 'Cisco'\\r\\n| where '{DeviceAddress:label}' == \\\"All\\\" or DeviceAddress in ({DeviceAddress})\\r\\n| where DeviceEventClassID == '113012'\\r\\n| extend UserName= extract('%ASA-6-113012:.*: user = (.*)$',1,Message)\\r\\n| summarize UserCount=count() by UserName\\r\\n| top 5 by UserCount desc\\r\\n\",         \"size\": 0,         \"exportToExcelOptions\": \"visible\",         \"title\": \"Top 5 successfully authenticated users\",         \"timeContext\": {           \"durationMs\": 0         },         \"timeContextFromParameter\": \"TimeRange\",         \"queryType\": 0,         \"resourceType\": \"microsoft.operationalinsights/workspaces\",         \"visualization\": \"piechart\",         \"gridSettings\": {           \"formatters\": [             {               \"columnMatch\": \"UserName\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"UserCount\",               \"formatter\": 4,               \"formatOptions\": {                 \"showIcon\": true               }             }           ],           \"labelSettings\": []         }       },       \"customWidth\": \"25\",       \"name\": \"Top 5 successfully authenticated users\"     },     {       \"type\": 3,       \"content\": {         \"version\": \"KqlItem/1.0\",         \"query\": \"//top 10 commands\\r\\nCommonSecurityLog\\r\\n| where DeviceProduct == \\\"ASA\\\"\\r\\n| where DeviceVendor == \\\"Cisco\\\"\\r\\n| where '{DeviceAddress:label}' == \\\"All\\\" or DeviceAddress in ({DeviceAddress})\\r\\n| where DeviceEventClassID == \\\"111008\\\"\\r\\n| extend CommandExecuted= extract(\\\"%ASA-5-111008: User '.*?' executed the '(.*?)' command.\\\",1,Message) \\r\\n| summarize Count= count() by CommandExecuted  \\r\\n| top 10 by Count desc \",         \"size\": 0,         \"exportToExcelOptions\": \"visible\",         \"title\": \"Top 5 Commands Executed on Firewall\",         \"timeContext\": {           \"durationMs\": 0         },         \"timeContextFromParameter\": \"TimeRange\",         \"queryType\": 0,         \"resourceType\": \"microsoft.operationalinsights/workspaces\",         \"visualization\": \"piechart\",         \"gridSettings\": {           \"formatters\": [             {               \"columnMatch\": \"CommandExecuted\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"Count\",               \"formatter\": 4,               \"formatOptions\": {                 \"showIcon\": true               }             }           ],           \"labelSettings\": []         }       },       \"customWidth\": \"25\",       \"name\": \"Top 5 Commands Executed on Firewall\"     }   ],   \"styleSettings\": {},   \"fromTemplateId\": \"sentinel-Cisco\",   \"$schema\": \"https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json\" }",
                                             "category":  "workbook",
                                             "version":  "1.0",
                                             "sourceId":  "[resourceid('Microsoft.OperationalInsights/workspaces',parameters('workspacename'))]"
                                         },
                          "type":  "microsoft.insights/workbooks",
                          "kind":  "shared",
                          "apiVersion":  "2018-06-17-preview",
                          "location":  "[parameters('location')]"
                      },
                      {
                          "name":  "[parameters('security - OneIdentity_id')]",
                          "properties":  {
                                             "displayName":  "security - CEF One Identity",
                                             "serializedData":  "{   \"version\": \"Notebook/1.0\",   \"items\": [     {       \"type\": 1,       \"content\": {         \"json\": \"## One Identity Safeguard for Privileged Sessions\\n---\\n\\nThis simple workbook gives an overview of sessions going through your Safeguard for Privileged Sessions device.\\n\\n### Number of sessions generating events per hour\"       },       \"name\": \"text - 2\"     },     {       \"type\": 3,       \"content\": {         \"version\": \"KqlItem/1.0\",         \"query\": \"CommonSecurityLog\\n| where DeviceVendor == \\\"OneIdentity\\\" and DeviceProduct == \\\"SPS\\\"\\n| where DeviceCustomString1Label == \\\"Session ID\\\"\\n| summarize count(TimeGenerated) by DeviceCustomString1, bin(TimeGenerated, 1d)\\n| summarize count() by bin(TimeGenerated, 1d)\\n\",         \"size\": 1,         \"exportToExcelOptions\": \"visible\",         \"timeContext\": {           \"durationMs\": 604800000         },         \"queryType\": 0,         \"resourceType\": \"microsoft.operationalinsights/workspaces\",         \"visualization\": \"barchart\",         \"gridSettings\": {           \"formatters\": [             {               \"columnMatch\": \"Count\",               \"formatter\": 1,               \"formatOptions\": {                 \"showIcon\": true               }             }           ],           \"sortBy\": [             {               \"itemKey\": \"Count\",               \"sortOrder\": 1             }           ],           \"labelSettings\": [             {               \"columnId\": \"Count\",               \"label\": \"Session Count of the last 24 hours\"             }           ]         },         \"tileSettings\": {           \"titleContent\": {             \"formatter\": 1,             \"formatOptions\": {               \"showIcon\": true             }           },           \"subtitleContent\": {             \"columnMatch\": \"Count\",             \"formatter\": 1,             \"formatOptions\": {               \"showIcon\": true             }           },           \"showBorder\": false         }       },       \"name\": \"query - 2\"     },     {       \"type\": 1,       \"content\": {         \"json\": \"### Number of sessions per severity per hour\\n\"       },       \"name\": \"text - 4\"     },     {       \"type\": 3,       \"content\": {         \"version\": \"KqlItem/1.0\",         \"query\": \"CommonSecurityLog\\n| where DeviceVendor == \\\"OneIdentity\\\" and DeviceProduct == \\\"SPS\\\"\\n| where Activity == \\\"ServerConnect\\\" or Activity == \\\"SessionClosed\\\"\\n| where DeviceCustomString1Label == \\\"Session ID\\\"\\n| where TimeGenerated \u003e ago(7d)\\n| summarize max(LogSeverity) by DeviceCustomString1, bin(TimeGenerated, 1h)\\n| summarize count() by max_LogSeverity, bin(TimeGenerated, 1h)\\n\\n\\n\\n\",         \"size\": 0,         \"aggregation\": 3,         \"exportToExcelOptions\": \"visible\",         \"queryType\": 0,         \"resourceType\": \"microsoft.operationalinsights/workspaces\",         \"visualization\": \"barchart\"       },       \"name\": \"query - 3\"     },     {       \"type\": 1,       \"content\": {         \"json\": \"### Latest logs\"       },       \"name\": \"text - 5\"     },     {       \"type\": 3,       \"content\": {         \"version\": \"KqlItem/1.0\",         \"query\": \"CommonSecurityLog\\n| where TimeGenerated \u003e ago(1d)\\n| where DeviceVendor == \\\"OneIdentity\\\" and DeviceProduct == \\\"SPS\\\"\\n| sort by TimeGenerated desc\\n\",         \"size\": 0,         \"exportToExcelOptions\": \"visible\",         \"queryType\": 0,         \"resourceType\": \"microsoft.operationalinsights/workspaces\",         \"visualization\": \"table\",         \"gridSettings\": {           \"formatters\": [             {               \"columnMatch\": \"TimeGenerated\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"ReceiptTime\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"DeviceVendor\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"DeviceProduct\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"DeviceEventClassID\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"LogSeverity\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"OriginalLogSeverity\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"DeviceAction\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"SimplifiedDeviceAction\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"Computer\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"CommunicationDirection\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"DeviceFacility\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"DestinationPort\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"DestinationIP\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"DeviceAddress\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"DeviceName\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"Message\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"Protocol\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"SourcePort\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"SourceIP\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"RemoteIP\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"RemotePort\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"MaliciousIP\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"ThreatSeverity\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"IndicatorThreatType\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"ThreatDescription\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"ThreatConfidence\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"ReportReferenceLink\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"MaliciousIPLongitude\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"MaliciousIPLatitude\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"MaliciousIPCountry\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"DeviceVersion\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"Activity\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"ApplicationProtocol\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"EventCount\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"DestinationDnsDomain\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"DestinationServiceName\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"DestinationTranslatedAddress\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"DestinationTranslatedPort\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"DeviceDnsDomain\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"DeviceExternalID\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"DeviceInboundInterface\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"DeviceNtDomain\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"DeviceOutboundInterface\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"DevicePayloadId\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"ProcessName\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"DeviceTranslatedAddress\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"DestinationHostName\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"DestinationMACAddress\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"DestinationNTDomain\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"DestinationProcessId\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"DestinationUserPrivileges\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"DestinationProcessName\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"DeviceTimeZone\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"DestinationUserID\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"DestinationUserName\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"DeviceMacAddress\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"ProcessID\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"ExternalID\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"FileCreateTime\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"FileHash\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"FileID\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"FileModificationTime\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"FilePath\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"FilePermission\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"FileType\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"FileName\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"FileSize\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"ReceivedBytes\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"OldFileCreateTime\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"OldFileHash\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"OldFileID\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"OldFileModificationTime\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"OldFileName\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"OldFilePath\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"OldFilePermission\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"OldFileSize\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"OldFileType\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"SentBytes\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"RequestURL\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"RequestClientApplication\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"RequestContext\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"RequestCookies\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"RequestMethod\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"SourceHostName\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"SourceMACAddress\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"SourceNTDomain\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"SourceDnsDomain\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"SourceServiceName\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"SourceTranslatedAddress\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"SourceTranslatedPort\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"SourceProcessId\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"SourceUserPrivileges\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"SourceProcessName\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"SourceUserID\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"SourceUserName\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"EventType\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"DeviceCustomIPv6Address1\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             }           ]         }       },       \"name\": \"query - 5\"     }   ],   \"styleSettings\": {},   \"fromTemplateId\": \"sentinel-OneIdentity\",   \"$schema\": \"https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json\" }",
                                             "category":  "workbook",
                                             "version":  "1.0",
                                             "sourceId":  "[resourceid('Microsoft.OperationalInsights/workspaces',parameters('workspacename'))]"
                                         },
                          "type":  "microsoft.insights/workbooks",
                          "kind":  "shared",
                          "apiVersion":  "2018-06-17-preview",
                          "location":  "[parameters('location')]"
                      },
                      {
                          "name":  "[parameters('security - InsecureProtocols_id')]",
                          "properties":  {
                                             "displayName":  "security - Insecure Protocols",
                                             "serializedData":  "{   \"version\": \"Notebook/1.0\",   \"items\": [     {       \"type\": 1,       \"content\": {         \"json\": \"## Insecure Protocols\\n\"       },       \"name\": \"text - 2\"     },     {       \"type\": 9,       \"content\": {         \"version\": \"KqlParameterItem/1.0\",         \"parameters\": [           {             \"id\": \"6b543dcb-ffbe-4fca-80d7-68d15257c377\",             \"version\": \"KqlParameterItem/1.0\",             \"name\": \"DefaultSubscription_Internal\",             \"type\": 1,             \"isRequired\": true,             \"query\": \"where type =~ 'microsoft.operationalinsights/workspaces'\\r\\n| take 1\\r\\n| project subscriptionId\",             \"crossComponentResources\": [               \"value::selected\"             ],             \"isHiddenWhenLocked\": true,             \"timeContext\": {               \"durationMs\": 0             },             \"timeContextFromParameter\": \"TimeRange\",             \"queryType\": 1,             \"resourceType\": \"microsoft.resourcegraph/resources\",             \"value\": \"\"           },           {             \"id\": \"959662e2-5c74-4876-b5c7-0aaeb2de2ca5\",             \"version\": \"KqlParameterItem/1.0\",             \"name\": \"Subscription\",             \"type\": 6,             \"query\": \"resources\\r\\n| summarize by subscriptionId\\r\\n| project value = strcat(\\\"/subscriptions/\\\", subscriptionId), label = subscriptionId, selected = iff(subscriptionId =~ '{DefaultSubscription_Internal}', true, false)\",             \"crossComponentResources\": [               \"value::selected\"             ],             \"typeSettings\": {               \"additionalResourceOptions\": []             },             \"timeContext\": {               \"durationMs\": 0             },             \"timeContextFromParameter\": \"TimeRange\",             \"queryType\": 1,             \"resourceType\": \"microsoft.resourcegraph/resources\",             \"value\": null           },           {             \"id\": \"d0ab5058-af8c-4ea2-b4a4-8d836769d278\",             \"version\": \"KqlParameterItem/1.0\",             \"name\": \"Workspace\",             \"type\": 5,             \"query\": \"resources\\r\\n| where type =~ 'microsoft.operationalinsights/workspaces'\\r\\n| project id\",             \"crossComponentResources\": [               \"{Subscription}\"             ],             \"value\": null,             \"typeSettings\": {               \"additionalResourceOptions\": []             },             \"queryType\": 1,             \"resourceType\": \"microsoft.resourcegraph/resources\"           },           {             \"id\": \"020de58b-73ca-47fe-838e-bc3ac7afaef6\",             \"version\": \"KqlParameterItem/1.0\",             \"name\": \"TimeRange\",             \"type\": 4,             \"isRequired\": true,             \"value\": {               \"durationMs\": 604800000             },             \"typeSettings\": {               \"selectableValues\": [                 {                   \"durationMs\": 300000                 },                 {                   \"durationMs\": 900000                 },                 {                   \"durationMs\": 1800000                 },                 {                   \"durationMs\": 3600000                 },                 {                   \"durationMs\": 14400000                 },                 {                   \"durationMs\": 43200000                 },                 {                   \"durationMs\": 86400000                 },                 {                   \"durationMs\": 172800000                 },                 {                   \"durationMs\": 259200000                 },                 {                   \"durationMs\": 604800000                 },                 {                   \"durationMs\": 1209600000                 },                 {                   \"durationMs\": 2419200000                 },                 {                   \"durationMs\": 2592000000                 },                 {                   \"durationMs\": 5184000000                 },                 {                   \"durationMs\": 7776000000                 }               ],               \"allowCustom\": true             }           },           {             \"id\": \"39b2b987-3569-4bc8-96b4-85c43f1c275b\",             \"version\": \"KqlParameterItem/1.0\",             \"name\": \"Help\",             \"label\": \"Show Help\",             \"type\": 10,             \"description\": \"Toggle to show Help for each tab.\",             \"isRequired\": true,             \"typeSettings\": {               \"additionalResourceOptions\": [],               \"showDefault\": false             },             \"jsonData\": \"[\\r\\n { \\\"value\\\": \\\"Yes\\\", \\\"label\\\": \\\"Yes\\\"},\\r\\n {\\\"value\\\": \\\"No\\\", \\\"label\\\": \\\"No\\\", \\\"selected\\\":true },\\r\\n { \\\"value\\\": \\\"Change Log\\\", \\\"label\\\": \\\"Change Log\\\"}\\r\\n]\\r\\n\"           }         ],         \"style\": \"above\",         \"queryType\": 0,         \"resourceType\": \"microsoft.operationalinsights/workspaces\"       },       \"name\": \"parameters - 7\"     },     {       \"type\": 11,       \"content\": {         \"version\": \"LinkItem/1.0\",         \"style\": \"tabs\",         \"links\": [           {             \"cellValue\": \"selectedTab\",             \"linkTarget\": \"parameter\",             \"linkLabel\": \"Summary\",             \"subTarget\": \"Summary\",             \"style\": \"link\"           },           {             \"cellValue\": \"selectedTab\",             \"linkTarget\": \"parameter\",             \"linkLabel\": \"LDAP\",             \"subTarget\": \"LDAP\",             \"preText\": \"LDAP\",             \"style\": \"link\"           },           {             \"cellValue\": \"selectedTab\",             \"linkTarget\": \"parameter\",             \"linkLabel\": \"NTLM\",             \"subTarget\": \"NTLM\",             \"style\": \"link\"           },           {             \"cellValue\": \"selectedTab\",             \"linkTarget\": \"parameter\",             \"linkLabel\": \"SMB\",             \"subTarget\": \"SMB\",             \"style\": \"link\"           },           {             \"cellValue\": \"selectedTab\",             \"linkTarget\": \"parameter\",             \"linkLabel\": \"Kerberos\",             \"subTarget\": \"Kerberos\",             \"style\": \"link\"           },           {             \"cellValue\": \"selectedTab\",             \"linkTarget\": \"parameter\",             \"linkLabel\": \"WDigest\",             \"subTarget\": \"WDigest\",             \"style\": \"link\"           },           {             \"cellValue\": \"selectedTab\",             \"linkTarget\": \"parameter\",             \"linkLabel\": \"AAD Legacy Auth \",             \"subTarget\": \"AADLegacy\",             \"style\": \"link\"           },           {             \"cellValue\": \"selectedTab\",             \"linkTarget\": \"parameter\",             \"linkLabel\": \"Vulnerable Secure Channel\",             \"subTarget\": \"NetlogonSC\",             \"style\": \"link\"           }         ]       },       \"name\": \"links - 34\"     },     {       \"type\": 1,       \"content\": {         \"json\": \"### Change Log\\r\\nBrian Delaney, Clive Watson, Jon Shectman - Microsoft \u003cbr\u003e\\r\\n\\t\\r\\n\\tVersion v1.8\\r\\n\\tAdded Vulnerable Netlogon Secure Channel\\r\\n\\tAdded Legacy Authentication to Summary\\r\\n\\tFixed reporting of Weak Kerberos Cipher in summary\\r\\n\\t\\r\\n\\t\\r\\n\\tVersion v1.7\\r\\n\\tAdded Tabs\\r\\n\\tFixed a bug\\r\\n\\tAdded Timebrushing and Groupings\\r\\n\\tAdded Help sections\",         \"style\": \"info\"       },       \"conditionalVisibility\": {         \"parameterName\": \"Help\",         \"comparison\": \"isEqualTo\",         \"value\": \"Change Log\"       },       \"customWidth\": \"30\",       \"name\": \"text - 24\"     },     {       \"type\": 12,       \"content\": {         \"version\": \"NotebookGroup/1.0\",         \"groupType\": \"editable\",         \"title\": \"Group: Summary\",         \"items\": [           {             \"type\": 1,             \"content\": {               \"json\": \"### Welcome to Insecure Protocols Workbook\\r\\nThis workbook will help you audit and remove Insecure Protocols from your Active Directory and Azure Active Directory estates.\u003cbr\u003e\\r\\nFor more information about this workbook (and for help with audit settings), navigate to [here](https://aka.ms/sentinelipsetup).\u003cbr\u003e\\r\\nFor help as you navigate this workbook, toggle Show Help at the page top.\",               \"style\": \"info\"             },             \"customWidth\": \"70\",             \"conditionalVisibility\": {               \"parameterName\": \"Help\",               \"comparison\": \"isEqualTo\",               \"value\": \"Yes\"             },             \"name\": \"text - 24 - Copy\"           },           {             \"type\": 3,             \"content\": {               \"version\": \"KqlItem/1.0\",               \"query\": \"let scEvents = dynamic([5827, 5828, 5829, 5830, 5831]);\\r\\nlet legacyAuth = SigninLogs\\r\\n| where ClientAppUsed !contains \\\"Browser\\\" and ClientAppUsed !contains \\\"Mobile Apps and Desktop clients\\\" and ClientAppUsed !contains \\\"Exchange ActiveSync\\\"\\r\\n| summarize Count=count() by Protocol=\\\"AAD Legacy Auth\\\";\\r\\nSecurityEvent\\r\\n| parse EventData with * '\\\"TicketEncryptionType\\\"\u003e' TicketEncryptionType '\u003c' *\\r\\n| union Event\\r\\n| where (EventID == 2889) or (EventID == 3000 and EventLog == 'Microsoft-Windows-SMBServer/Audit') or (EventID == 4624 and AuthenticationPackageName == 'NTLM' and LmPackageName == 'NTLM V1' and Account !contains 'ANONYMOUS LOGON') or ((EventID == 4624 or EventID == 4776) and Level == 8 and PackageName contains 'WDigest') or (EventID == 4768 or EventID == 4769) and Level == 8 and (TicketEncryptionType != \\\"0x12\\\" and TicketEncryptionType != \\\"0x11\\\") or ((EventLog =~ \\\"System\\\" and Source =~ \\\"NETLOGON\\\") and EventID in (scEvents))\\r\\n| summarize Count=count() by bin(TimeGenerated, {TimeRange:grain}), tostring(EventID)\\r\\n//| extend Protocol=replace(tostring(4776), 'WDigest', replace(tostring(4768), 'Kerberos weak cipher', replace(tostring(4769), 'Kerberos weak cipher', replace(tostring(2889), 'Insecure LDAP', replace(tostring(4624), 'NTLM v1', replace(tostring(3000), 'SMB v1', tostring(EventID)))))))\\r\\n| extend Protocol = case(EventID == 4776, \\\"WDigest\\\", EventID == 4768 or EventID == 4769, \\\"Weak Kerberos Cipher\\\", EventID == 2889, \\\"Insecure LDAP\\\", EventID == 4624, \\\"NTLM v1\\\", EventID == 3000, \\\"SMBv1\\\", EventID in (scEvents), \\\"Vulnerable Secure Channel\\\", \\\"Unknown\\\")\\r\\n| project Protocol, Count\\r\\n| union legacyAuth\\r\\n| sort by Count desc\\r\\n\",               \"size\": 0,               \"title\": \"Summary of Insecure Protocols: {TimeRange:label}\",               \"timeContext\": {                 \"durationMs\": 604800000               },               \"timeContextFromParameter\": \"TimeRange\",               \"exportFieldName\": \"series\",               \"exportParameterName\": \"SelectedProtocol\",               \"exportDefaultValue\": \"All\",               \"queryType\": 0,               \"resourceType\": \"microsoft.operationalinsights/workspaces\",               \"crossComponentResources\": [                 \"{Workspace}\"               ],               \"visualization\": \"piechart\",               \"gridSettings\": {                 \"sortBy\": [                   {                     \"itemKey\": \"Count\",                     \"sortOrder\": 2                   }                 ]               },               \"sortBy\": [                 {                   \"itemKey\": \"Count\",                   \"sortOrder\": 2                 }               ]             },             \"customWidth\": \"40\",             \"conditionalVisibility\": {               \"parameterName\": \"selectedTab\",               \"comparison\": \"isEqualTo\",               \"value\": \"Summary\"             },             \"name\": \"IPbyTypePie\"           },           {             \"type\": 3,             \"content\": {               \"version\": \"KqlItem/1.0\",               \"query\": \"let scEvents = dynamic([5827, 5828, 5829, 5830, 5831]);\\r\\nlet legacyAuth = SigninLogs\\r\\n| where ClientAppUsed !contains \\\"Browser\\\" and ClientAppUsed !contains \\\"Mobile Apps and Desktop clients\\\" and ClientAppUsed !contains \\\"Exchange ActiveSync\\\"\\r\\n| summarize Count=count() by bin(TimeGenerated, {TimeRange:grain}), Protocol=\\\"AAD Legacy Auth\\\";\\r\\nSecurityEvent\\r\\n| parse EventData with * '\\\"TicketEncryptionType\\\"\u003e' TicketEncryptionType '\u003c' *\\r\\n| union Event\\r\\n| where (EventID == 2889) or (EventID == 3000 and EventLog == 'Microsoft-Windows-SMBServer/Audit') or (EventID == 4624 and AuthenticationPackageName == 'NTLM' and LmPackageName == 'NTLM V1' and Account !contains 'ANONYMOUS LOGON') or ((EventID == 4624 or EventID == 4776) and Level == 8 and PackageName contains 'WDigest') or (EventID == 4768 or EventID == 4769) and Level == 8 and (TicketEncryptionType != \\\"0x12\\\" and TicketEncryptionType != \\\"0x11\\\") or ((EventLog =~ \\\"System\\\" and Source =~ \\\"NETLOGON\\\") and EventID in (scEvents))\\r\\n| summarize Count=count() by bin(TimeGenerated, {TimeRange:grain}), tostring(EventID)\\r\\n//| extend Protocol=replace(tostring(4776), 'WDigest', replace(tostring(4768), 'Kerberos weak cipher', replace(tostring(4769), 'Kerberos weak cipher', replace(tostring(2889), 'Insecure LDAP', replace(tostring(4624), 'NTLM v1', replace(tostring(3000), 'SMB v1', tostring(EventID)))))))\\r\\n| extend Protocol = case(EventID == 4776, \\\"WDigest\\\", EventID == 4768 or EventID == 4769, \\\"Weak Kerberos Cipher\\\", EventID == 2889, \\\"Insecure LDAP\\\", EventID == 4624, \\\"NTLM v1\\\", EventID == 3000, \\\"SMBv1\\\", EventID in (scEvents), \\\"Vulnerable Secure Channel\\\", \\\"Unknown\\\")\\r\\n| project Protocol, Count, TimeGenerated\\r\\n| union legacyAuth\\r\\n| where Protocol =~ \\\"{SelectedProtocol}\\\" or \\\"{SelectedProtocol}\\\" =~ \\\"All\\\"\\r\\n| sort by Count desc\\r\\n\",               \"size\": 0,               \"title\": \"Summary of Insecure Protocols: {TimeRange:label}\",               \"timeContext\": {                 \"durationMs\": 604800000               },               \"timeContextFromParameter\": \"TimeRange\",               \"queryType\": 0,               \"resourceType\": \"microsoft.operationalinsights/workspaces\",               \"crossComponentResources\": [                 \"{Workspace}\"               ],               \"visualization\": \"barchart\",               \"gridSettings\": {                 \"sortBy\": [                   {                     \"itemKey\": \"Count\",                     \"sortOrder\": 2                   }                 ]               },               \"sortBy\": [                 {                   \"itemKey\": \"Count\",                   \"sortOrder\": 2                 }               ]             },             \"customWidth\": \"60\",             \"conditionalVisibility\": {               \"parameterName\": \"selectedTab\",               \"comparison\": \"isEqualTo\",               \"value\": \"Summary\"             },             \"name\": \"IPbyTypeandTimeBar\"           },           {             \"type\": 3,             \"content\": {               \"version\": \"KqlItem/1.0\",               \"query\": \"let scEvents = dynamic([5827, 5828, 5829, 5830, 5831]);\\r\\nlet legacyAuth = SigninLogs\\r\\n| where ClientAppUsed !contains \\\"Browser\\\" and ClientAppUsed !contains \\\"Mobile Apps and Desktop clients\\\" and ClientAppUsed !contains \\\"Exchange ActiveSync\\\"\\r\\n| summarize FirstOccurance=min(TimeGenerated), LastOccurance=max(TimeGenerated), Count=count() by Protocol=\\\"AAD Legacy Auth\\\";\\r\\nSecurityEvent\\r\\n| parse EventData with * '\\\"TicketEncryptionType\\\"\u003e' TicketEncryptionType '\u003c' *\\r\\n| union Event\\r\\n| where (EventID == 2889) or (EventID == 3000 and EventLog == 'Microsoft-Windows-SMBServer/Audit') or (EventID == 4624 and AuthenticationPackageName == 'NTLM' and LmPackageName == 'NTLM V1' and Account !contains 'ANONYMOUS LOGON') or ((EventID == 4624 or EventID == 4776) and Level == 8 and PackageName contains 'WDigest') or (EventID == 4768 or EventID == 4769) and Level == 8 and (TicketEncryptionType != \\\"0x12\\\" and TicketEncryptionType != \\\"0x11\\\") or ((EventLog =~ \\\"System\\\" and Source =~ \\\"NETLOGON\\\") and EventID in (scEvents))\\r\\n| summarize FirstOccurance=min(TimeGenerated), LastOccurance=max(TimeGenerated), Count=count() by tostring(EventID)\\r\\n//| extend Protocol=replace(tostring(4776), 'WDigest', replace(tostring(4768), 'Kerberos weak cipher', replace(tostring(4769), 'Kerberos weak cipher', replace(tostring(2889), 'Insecure LDAP', replace(tostring(4624), 'NTLM v1', replace(tostring(3000), 'SMB v1', tostring(EventID)))))))\\r\\n| extend Protocol = case(EventID == 4776, \\\"WDigest\\\", EventID == 4768 or EventID == 4769, \\\"Weak Kerberos Cipher\\\", EventID == 2889, \\\"Insecure LDAP\\\", EventID == 4624, \\\"NTLM v1\\\", EventID == 3000, \\\"SMBv1\\\", EventID in (scEvents), \\\"Vulnerable Secure Channel\\\", \\\"Unknown\\\")\\r\\n| summarize FirstOccurance=min(FirstOccurance), LastOccurance=max(LastOccurance), Count=sum(Count) by Protocol\\r\\n| union legacyAuth\\r\\n| sort by Count desc\\r\\n\",               \"size\": 1,               \"title\": \"Summary of Insecure Protobols found in: {TimeRange:label}\",               \"timeContext\": {                 \"durationMs\": 604800000               },               \"timeContextFromParameter\": \"TimeRange\",               \"queryType\": 0,               \"resourceType\": \"microsoft.operationalinsights/workspaces\",               \"crossComponentResources\": [                 \"{Workspace}\"               ],               \"visualization\": \"table\",               \"sortBy\": [],               \"tileSettings\": {                 \"showBorder\": false               },               \"graphSettings\": {                 \"type\": 0,                 \"topContent\": {                   \"columnMatch\": \"TableName\",                   \"formatter\": 1,                   \"formatOptions\": {                     \"showIcon\": true                   }                 },                 \"centerContent\": {                   \"columnMatch\": \"Normal EventID\",                   \"formatter\": 1,                   \"formatOptions\": {                     \"showIcon\": true                   },                   \"numberFormat\": {                     \"unit\": 17,                     \"options\": {                       \"maximumSignificantDigits\": 3,                       \"maximumFractionDigits\": 2                     }                   }                 },                 \"nodeIdField\": \"excellent_ok\",                 \"sourceIdField\": \"TableName\",                 \"targetIdField\": \"excellent_ok\",                 \"edgeLabel\": \"excellent_ok\",                 \"nodeSize\": null,                 \"staticNodeSize\": 100,                 \"colorSettings\": null,                 \"groupByField\": \"TableName\",                 \"hivesMargin\": 5               },               \"chartSettings\": {                 \"group\": \"Crucial EventID\",                 \"createOtherGroup\": null               }             },             \"conditionalVisibility\": {               \"parameterName\": \"selectedTab\",               \"comparison\": \"isEqualTo\",               \"value\": \"Summary\"             },             \"name\": \"SummaryByIP\"           }         ]       },       \"conditionalVisibility\": {         \"parameterName\": \"selectedTab\",         \"comparison\": \"isEqualTo\",         \"value\": \"Summary\"       },       \"name\": \"group - Summary\"     },     {       \"type\": 12,       \"content\": {         \"version\": \"NotebookGroup/1.0\",         \"groupType\": \"editable\",         \"title\": \"Group: Insecure LDAP\",         \"items\": [           {             \"type\": 1,             \"content\": {               \"json\": \"### LDAP Help File\\r\\n\\r\\n**Protocol Risk**\\r\\n\\t* Clients are returning unsigned traffic, which is susceptible to replay or attacker-in-the-middle attacks.\\r\\n\\t* This may result in nefarious activity, such as modified packets, in which a server or even a person makes decisions based on forged data.\\r\\n\\t* The organization is exposing its highly-privileged authentication principals' credentials ??such as the ones for those that belong to the Domain Admins group. With a simple network capture, an attacker can steal these credentials and achieve an escalation path or even a domain dominance type scenario. In the case of simple binds, the organization is exposing plaintext authentication credentials.\\r\\n\\r\\n**Auditing Settings**\\r\\n\\t* Set auditing for 2889 on every DC - In the registry key ??KLM\\\\SYSTEM\\\\CurrentControlSet\\\\Services\\\\NTDS\\\\Diagnostics??set a DWORD with name \\\"16 LDAP Interface Events??to a value of ??\\\"\\r\\n\\t* In Log Analytics/Sentinel, set log collection from the Directory Service log.\\r\\n\\r\\n**Mitigation Planning**\\r\\n\\t* Work with application owners, vendors, and users to use LDAP over TLS (LDAPS://) ??ports 636 and 3269.\\r\\n\\t* Once there is no more 2889 insecure LDAP traffic, set the DCs to no longer accept it. GPO: Computer Configuration\\\\Windows Settings\\\\Security Settings\\\\Local Policies\\\\Security Options\\r\\n\\t* If this is not possible, you can secure the entire exchange with IPSec. However, you will not be able to disallow insecure LDAP at the DCs; so using LDAPS is recommended.\\r\\n\\r\\n**Data Filters**\\r\\n\\t* Account\\r\\n\\t* Account timebrush\\r\\n\\t* IP\\r\\n\\t* IP timebrush\",               \"style\": \"info\"             },             \"customWidth\": \"100\",             \"conditionalVisibility\": {               \"parameterName\": \"Help\",               \"comparison\": \"isEqualTo\",               \"value\": \"Yes\"             },             \"name\": \"text - 11\"           },           {             \"type\": 3,             \"content\": {               \"version\": \"KqlItem/1.0\",               \"query\": \"Event \\r\\n | where EventID == 2889 \\r\\n | parse ParameterXml with * '\u003e\u003cParam\u003e' Account '\u003c/' *\\r\\n | parse ParameterXml with * '\u003cParam\u003e' IPAddress ':' * \\r\\n | parse kind = regex ParameterXml with * '\u003c/Param\u003e\u003cParam\u003e' * '\u003c/Param\u003e\u003cParam\u003e' BindingType '\u003c/Param\u003e'\\r\\n | extend Title = \\\"Number of events\\\"\\r\\n | summarize QueryCount = count(EventID) by Title//, NumberOfIPs = dcount(IPAddress), NumberOfAccounts = dcount(Account)\",               \"size\": 4,               \"timeContext\": {                 \"durationMs\": 604800000               },               \"timeContextFromParameter\": \"TimeRange\",               \"queryType\": 0,               \"resourceType\": \"microsoft.operationalinsights/workspaces\",               \"crossComponentResources\": [                 \"{Workspace}\"               ],               \"visualization\": \"tiles\",               \"tileSettings\": {                 \"titleContent\": {                   \"columnMatch\": \"Title\",                   \"formatter\": 1,                   \"formatOptions\": {                     \"showIcon\": true                   }                 },                 \"leftContent\": {                   \"columnMatch\": \"QueryCount\",                   \"formatter\": 12,                   \"formatOptions\": {                     \"palette\": \"auto\",                     \"showIcon\": true                   },                   \"numberFormat\": {                     \"unit\": 17,                     \"options\": {                       \"maximumSignificantDigits\": 3,                       \"maximumFractionDigits\": 2                     }                   }                 },                 \"showBorder\": false               }             },             \"customWidth\": \"20\",             \"conditionalVisibility\": {               \"parameterName\": \"selectedTab\",               \"comparison\": \"isEqualTo\",               \"value\": \"LDAP\"             },             \"name\": \"query - 9\"           },           {             \"type\": 3,             \"content\": {               \"version\": \"KqlItem/1.0\",               \"query\": \"Event \\r\\n | where EventID == 2889 \\r\\n | parse ParameterXml with * '\u003e\u003cParam\u003e' Account '\u003c/' *\\r\\n | parse ParameterXml with * '\u003cParam\u003e' IPAddress ':' * \\r\\n | parse kind = regex ParameterXml with * '\u003c/Param\u003e\u003cParam\u003e' * '\u003c/Param\u003e\u003cParam\u003e' BindingType '\u003c/Param\u003e'\\r\\n | extend Title = \\\"Number of Accounts\\\"\\r\\n | summarize QueryCount = dcount(Account) by Title//, NumberOfIPs = dcount(IPAddress), NumberOfAccounts = dcount(Account)\",               \"size\": 4,               \"timeContext\": {                 \"durationMs\": 604800000               },               \"timeContextFromParameter\": \"TimeRange\",               \"queryType\": 0,               \"resourceType\": \"microsoft.operationalinsights/workspaces\",               \"crossComponentResources\": [                 \"{Workspace}\"               ],               \"visualization\": \"tiles\",               \"tileSettings\": {                 \"titleContent\": {                   \"columnMatch\": \"Title\",                   \"formatter\": 1,                   \"formatOptions\": {                     \"showIcon\": true                   }                 },                 \"leftContent\": {                   \"columnMatch\": \"QueryCount\",                   \"formatter\": 12,                   \"formatOptions\": {                     \"min\": 0,                     \"palette\": \"purple\",                     \"showIcon\": true                   },                   \"numberFormat\": {                     \"unit\": 17,                     \"options\": {                       \"style\": \"decimal\",                       \"maximumFractionDigits\": 2,                       \"maximumSignificantDigits\": 3                     }                   }                 },                 \"showBorder\": false               }             },             \"customWidth\": \"20\",             \"conditionalVisibility\": {               \"parameterName\": \"selectedTab\",               \"comparison\": \"isEqualTo\",               \"value\": \"LDAP\"             },             \"name\": \"query - 10\"           },           {             \"type\": 3,             \"content\": {               \"version\": \"KqlItem/1.0\",               \"query\": \"Event \\r\\n | where EventID == 2889 \\r\\n | parse ParameterXml with * '\u003e\u003cParam\u003e' Account '\u003c/' *\\r\\n | parse ParameterXml with * '\u003cParam\u003e' IPAddress ':' * \\r\\n | parse kind = regex ParameterXml with * '\u003c/Param\u003e\u003cParam\u003e' * '\u003c/Param\u003e\u003cParam\u003e' BindingType '\u003c/Param\u003e'\\r\\n | extend Title = \\\"Number of IP Addresses\\\"\\r\\n | summarize QueryCount =  dcount(IPAddress) by Title//, NumberOfIPs = dcount(IPAddress), NumberOfAccounts = dcount(Account)\",               \"size\": 4,               \"timeContext\": {                 \"durationMs\": 604800000               },               \"timeContextFromParameter\": \"TimeRange\",               \"queryType\": 0,               \"resourceType\": \"microsoft.operationalinsights/workspaces\",               \"crossComponentResources\": [                 \"{Workspace}\"               ],               \"visualization\": \"tiles\",               \"tileSettings\": {                 \"titleContent\": {                   \"columnMatch\": \"Title\",                   \"formatter\": 1,                   \"formatOptions\": {                     \"showIcon\": true                   }                 },                 \"leftContent\": {                   \"columnMatch\": \"QueryCount\",                   \"formatter\": 12,                   \"formatOptions\": {                     \"palette\": \"auto\",                     \"showIcon\": true                   },                   \"numberFormat\": {                     \"unit\": 17,                     \"options\": {                       \"maximumSignificantDigits\": 3,                       \"maximumFractionDigits\": 2                     }                   }                 },                 \"showBorder\": false               }             },             \"customWidth\": \"20\",             \"conditionalVisibility\": {               \"parameterName\": \"selectedTab\",               \"comparison\": \"isEqualTo\",               \"value\": \"LDAP\"             },             \"name\": \"query - 9 - Copy\"           },           {             \"type\": 3,             \"content\": {               \"version\": \"KqlItem/1.0\",               \"query\": \"Event \\r\\n | where EventID == 2889 \\r\\n | parse ParameterXml with * '\u003e\u003cParam\u003e' Account '\u003c/' *\\r\\n | parse ParameterXml with * '\u003cParam\u003e' IPAddress ':' * \\r\\n | parse kind = regex ParameterXml with * '\u003c/Param\u003e\u003cParam\u003e' * '\u003c/Param\u003e\u003cParam\u003e' BindingType '\u003c/Param\u003e'\\r\\n | summarize QueryCount = count(EventID) by Account, IPAddress\\r\\n | order by QueryCount\\r\\n\",               \"size\": 0,               \"title\": \"By Account - click to filter\",               \"timeContext\": {                 \"durationMs\": 604800000               },               \"timeContextFromParameter\": \"TimeRange\",               \"exportFieldName\": \"Account\",               \"exportParameterName\": \"Account\",               \"exportDefaultValue\": \"All\",               \"queryType\": 0,               \"resourceType\": \"microsoft.operationalinsights/workspaces\",               \"crossComponentResources\": [                 \"{Workspace}\"               ],               \"visualization\": \"table\",               \"gridSettings\": {                 \"formatters\": [                   {                     \"columnMatch\": \"QueryCount\",                     \"formatter\": 4,                     \"formatOptions\": {                       \"min\": 1,                       \"palette\": \"orange\",                       \"showIcon\": true                     }                   },                   {                     \"columnMatch\": \"TimeGenerated\",                     \"formatter\": 4,                     \"formatOptions\": {                       \"showIcon\": true                     }                   }                 ],                 \"sortBy\": [                   {                     \"itemKey\": \"$gen_bar_QueryCount_2\",                     \"sortOrder\": 2                   }                 ],                 \"labelSettings\": [                   {                     \"columnId\": \"Account\"                   },                   {                     \"columnId\": \"IPAddress\",                     \"label\": \"Source IP\"                   },                   {                     \"columnId\": \"QueryCount\",                     \"label\": \"Number of Insecure Binds\"                   }                 ]               },               \"sortBy\": [                 {                   \"itemKey\": \"$gen_bar_QueryCount_2\",                   \"sortOrder\": 2                 }               ]             },             \"conditionalVisibility\": {               \"parameterName\": \"selectedTab\",               \"comparison\": \"isEqualTo\",               \"value\": \"LDAP\"             },             \"name\": \"LDAP by Account\"           },           {             \"type\": 3,             \"content\": {               \"version\": \"KqlItem/1.0\",               \"query\": \"Event \\r\\n | where EventID == 2889 \\r\\n | parse ParameterXml with * '\u003e\u003cParam\u003e' Account '\u003c/' *\\r\\n | parse ParameterXml with * '\u003cParam\u003e' IPAddress ':' * \\r\\n | parse kind = regex ParameterXml with * '\u003c/Param\u003e\u003cParam\u003e' * '\u003c/Param\u003e\u003cParam\u003e' BindingType '\u003c/Param\u003e'\\r\\n | extend TimeFromNow = now() - TimeGenerated\\r\\n | extend TimeAgo = strcat(case(TimeFromNow \u003c 2m, strcat(toint(TimeFromNow / 1m), ' seconds'), TimeFromNow \u003c 2h, strcat(toint(TimeFromNow / 1m), ' minutes'), TimeFromNow \u003c 2d, strcat(toint(TimeFromNow / 1h), ' hours'), strcat(toint(TimeFromNow / 1d), ' days')), ' ago')\\r\\n | where Account == '{Account:escape}' or  '{Account:escape}' == \\\"All\\\"\\r\\n | project Account, IPAddress, Computer, RenderedDescription, UserName, EventID, Time_of_Bind=TimeAgo\",               \"size\": 0,               \"title\": \"Account Details\",               \"timeContext\": {                 \"durationMs\": 604800000               },               \"timeContextFromParameter\": \"TimeRange\",               \"showExportToExcel\": true,               \"queryType\": 0,               \"resourceType\": \"microsoft.operationalinsights/workspaces\",               \"crossComponentResources\": [                 \"{Workspace}\"               ],               \"gridSettings\": {                 \"formatters\": [                   {                     \"columnMatch\": \"Account\",                     \"formatter\": 7,                     \"formatOptions\": {                       \"linkTarget\": \"GenericDetails\",                       \"linkIsContextBlade\": true,                       \"showIcon\": true                     }                   },                   {                     \"columnMatch\": \"RenderedDescription\",                     \"formatter\": 5,                     \"formatOptions\": {                       \"showIcon\": true                     }                   },                   {                     \"columnMatch\": \"UserName\",                     \"formatter\": 5,                     \"formatOptions\": {                       \"showIcon\": true                     }                   },                   {                     \"columnMatch\": \"EventID\",                     \"formatter\": 5,                     \"formatOptions\": {                       \"showIcon\": true                     }                   }                 ],                 \"filter\": true,                 \"labelSettings\": [                   {                     \"columnId\": \"Account\"                   },                   {                     \"columnId\": \"IPAddress\",                     \"label\": \"Source IP\"                   },                   {                     \"columnId\": \"Computer\",                     \"label\": \"Domain Controller\"                   },                   {                     \"columnId\": \"Time_of_Bind\",                     \"label\": \"Binding Time\"                   }                 ]               }             },             \"conditionalVisibilities\": [               {                 \"parameterName\": \"selectedTab\",                 \"comparison\": \"isEqualTo\",                 \"value\": \"LDAP\"               },               {                 \"parameterName\": \"False\",                 \"comparison\": \"isEqualTo\",                 \"value\": \"Yes\"               }             ],             \"name\": \"query - 7\"           },           {             \"type\": 3,             \"content\": {               \"version\": \"KqlItem/1.0\",               \"query\": \"Event \\r\\n | where EventID == 2889 \\r\\n | parse ParameterXml with * '\u003e\u003cParam\u003e' Account '\u003c/' *\\r\\n | parse ParameterXml with * '\u003cParam\u003e' IPAddress ':' * \\r\\n | parse kind = regex ParameterXml with * '\u003c/Param\u003e\u003cParam\u003e' * '\u003c/Param\u003e\u003cParam\u003e' BindingType '\u003c/Param\u003e'\\r\\n | extend TimeFromNow = now() - TimeGenerated\\r\\n | extend TimeAgo = strcat(case(TimeFromNow \u003c 2m, strcat(toint(TimeFromNow / 1m), ' seconds'), TimeFromNow \u003c 2h, strcat(toint(TimeFromNow / 1m), ' minutes'), TimeFromNow \u003c 2d, strcat(toint(TimeFromNow / 1h), ' hours'), strcat(toint(TimeFromNow / 1d), ' days')), ' ago')\\r\\n | where Account == '{Account:escape}' or  '{Account:escape}' == \\\"All\\\"\\r\\n | summarize count() by Account, bin(TimeGenerated, {TimeRange:grain})\",               \"size\": 0,               \"title\": \"Account events over time - select timebrush\",               \"timeContext\": {                 \"durationMs\": 604800000               },               \"timeContextFromParameter\": \"TimeRange\",               \"timeBrushParameterName\": \"LDAPTimebrushAccount\",               \"queryType\": 0,               \"resourceType\": \"microsoft.operationalinsights/workspaces\",               \"crossComponentResources\": [                 \"{Workspace}\"               ],               \"visualization\": \"linechart\"             },             \"customWidth\": \"50\",             \"conditionalVisibility\": {               \"parameterName\": \"selectedTab\",               \"comparison\": \"isEqualTo\",               \"value\": \"LDAP\"             },             \"name\": \"query - 11\"           },           {             \"type\": 3,             \"content\": {               \"version\": \"KqlItem/1.0\",               \"query\": \"Event \\r\\n | where EventID == 2889 \\r\\n | parse ParameterXml with * '\u003e\u003cParam\u003e' Account '\u003c/' *\\r\\n | parse ParameterXml with * '\u003cParam\u003e' IPAddress ':' * \\r\\n | parse kind = regex ParameterXml with * '\u003c/Param\u003e\u003cParam\u003e' * '\u003c/Param\u003e\u003cParam\u003e' BindingType '\u003c/Param\u003e'\\r\\n | extend TimeFromNow = now() - TimeGenerated\\r\\n | extend TimeAgo = strcat(case(TimeFromNow \u003c 2m, strcat(toint(TimeFromNow / 1m), ' seconds'), TimeFromNow \u003c 2h, strcat(toint(TimeFromNow / 1m), ' minutes'), TimeFromNow \u003c 2d, strcat(toint(TimeFromNow / 1h), ' hours'), strcat(toint(TimeFromNow / 1d), ' days')), ' ago')\\r\\n | where Account == '{Account:escape}' or  '{Account:escape}' == \\\"All\\\"\\r\\n | extend BindingType = case(BindingType==0,\\\"Unsigned\\\",BindingType==1,\\\"Simple\\\",\\\"Unknown\\\")\\r\\n | summarize Count=count() by Account, bin(TimeGenerated, {TimeRange:grain}), BindingType\\r\\n| order by Count\",               \"size\": 0,               \"title\": \"Account events over time ({LDAPTimebrushAccount:label})\",               \"timeContext\": {                 \"durationMs\": 0               },               \"timeContextFromParameter\": \"LDAPTimebrushAccount\",               \"timeBrushParameterName\": \"LDAPTimebrushAccount\",               \"queryType\": 0,               \"resourceType\": \"microsoft.operationalinsights/workspaces\",               \"crossComponentResources\": [                 \"{Workspace}\"               ],               \"visualization\": \"table\",               \"gridSettings\": {                 \"formatters\": [                   {                     \"columnMatch\": \"TimeGenerated\",                     \"formatter\": 4,                     \"formatOptions\": {                       \"palette\": \"blue\"                     }                   }                 ]               }             },             \"customWidth\": \"50\",             \"conditionalVisibility\": {               \"parameterName\": \"selectedTab\",               \"comparison\": \"isEqualTo\",               \"value\": \"LDAP\"             },             \"name\": \"query - 11 - Copy\"           },           {             \"type\": 3,             \"content\": {               \"version\": \"KqlItem/1.0\",               \"query\": \"Event \\r\\n | where EventID == 2889 \\r\\n | parse ParameterXml with * '\u003e\u003cParam\u003e' Account '\u003c/' *\\r\\n | parse ParameterXml with * '\u003cParam\u003e' IPAddress ':' * \\r\\n | parse kind = regex ParameterXml with * '\u003c/Param\u003e\u003cParam\u003e' * '\u003c/Param\u003e\u003cParam\u003e' BindingType '\u003c/Param\u003e'\\r\\n | summarize QueryCount = count(EventID) by IPAddress, Account\\r\\n\",               \"size\": 0,               \"title\": \"By Source IP - click to filter\",               \"timeContext\": {                 \"durationMs\": 604800000               },               \"timeContextFromParameter\": \"TimeRange\",               \"exportFieldName\": \"IPAddress\",               \"exportParameterName\": \"IPAddress\",               \"exportDefaultValue\": \"All\",               \"queryType\": 0,               \"resourceType\": \"microsoft.operationalinsights/workspaces\",               \"crossComponentResources\": [                 \"{Workspace}\"               ],               \"visualization\": \"table\",               \"gridSettings\": {                 \"formatters\": [                   {                     \"columnMatch\": \"Account\",                     \"formatter\": 0,                     \"formatOptions\": {                       \"showIcon\": true,                       \"aggregation\": \"Unique\"                     }                   },                   {                     \"columnMatch\": \"QueryCount\",                     \"formatter\": 4,                     \"formatOptions\": {                       \"min\": 1,                       \"palette\": \"blueDark\",                       \"showIcon\": true,                       \"aggregation\": \"Sum\"                     }                   },                   {                     \"columnMatch\": \"Account Count\",                     \"formatter\": 4,                     \"formatOptions\": {                       \"min\": 0,                       \"palette\": \"blue\",                       \"showIcon\": true,                       \"aggregation\": \"Unique\"                     }                   },                   {                     \"columnMatch\": \"Trend\",                     \"formatter\": 9,                     \"formatOptions\": {                       \"min\": 0,                       \"palette\": \"magenta\",                       \"showIcon\": true                     }                   },                   {                     \"columnMatch\": \"ParentId\",                     \"formatter\": 5,                     \"formatOptions\": {                       \"showIcon\": true                     }                   },                   {                     \"columnMatch\": \"Computer\",                     \"formatter\": 0,                     \"formatOptions\": {                       \"showIcon\": true,                       \"aggregation\": \"Unique\"                     }                   },                   {                     \"columnMatch\": \"LDAPClient\",                     \"formatter\": 0,                     \"formatOptions\": {                       \"showIcon\": true,                       \"aggregation\": \"Unique\"                     }                   }                 ],                 \"sortBy\": [                   {                     \"itemKey\": \"$gen_bar_QueryCount_2\",                     \"sortOrder\": 2                   }                 ],                 \"labelSettings\": [                   {                     \"columnId\": \"IPAddress\",                     \"label\": \"Source IP\"                   },                   {                     \"columnId\": \"Account\"                   },                   {                     \"columnId\": \"QueryCount\",                     \"label\": \"Number of Insedcure Binds\"                   }                 ]               },               \"sortBy\": [                 {                   \"itemKey\": \"$gen_bar_QueryCount_2\",                   \"sortOrder\": 2                 }               ]             },             \"conditionalVisibility\": {               \"parameterName\": \"selectedTab\",               \"comparison\": \"isEqualTo\",               \"value\": \"LDAP\"             },             \"name\": \"query - 3\"           },           {             \"type\": 3,             \"content\": {               \"version\": \"KqlItem/1.0\",               \"query\": \"Event \\r\\n | where EventID == 2889 \\r\\n | parse ParameterXml with * '\u003e\u003cParam\u003e' Accounts '\u003c/' *\\r\\n | parse ParameterXml with * '\u003cParam\u003e' IPAddress ':' * \\r\\n | parse kind = regex ParameterXml with * '\u003c/Param\u003e\u003cParam\u003e' * '\u003c/Param\u003e\u003cParam\u003e' BindingType '\u003c/Param\u003e'\\r\\n | extend TimeFromNow = now() - TimeGenerated\\r\\n | extend TimeAgo = strcat(case(TimeFromNow \u003c 2m, strcat(toint(TimeFromNow / 1m), ' seconds'), TimeFromNow \u003c 2h, strcat(toint(TimeFromNow / 1m), ' minutes'), TimeFromNow \u003c 2d, strcat(toint(TimeFromNow / 1h), ' hours'), strcat(toint(TimeFromNow / 1d), ' days')), ' ago')\\r\\n | where IPAddress == '{IPAddress:escape}' or '{IPAddress:escape}' == \\\"All\\\"\\r\\n | project IPAddress, Accounts, Computer, RenderedDescription, UserName, EventID, Time_of_Bind=TimeAgo\",               \"size\": 0,               \"title\": \"Source IP Details\",               \"timeContext\": {                 \"durationMs\": 604800000               },               \"timeContextFromParameter\": \"TimeRange\",               \"showExportToExcel\": true,               \"queryType\": 0,               \"resourceType\": \"microsoft.operationalinsights/workspaces\",               \"crossComponentResources\": [                 \"{Workspace}\"               ],               \"gridSettings\": {                 \"formatters\": [                   {                     \"columnMatch\": \"IPAddress\",                     \"formatter\": 7,                     \"formatOptions\": {                       \"linkTarget\": \"GenericDetails\",                       \"linkIsContextBlade\": true,                       \"showIcon\": true                     }                   },                   {                     \"columnMatch\": \"RenderedDescription\",                     \"formatter\": 5,                     \"formatOptions\": {                       \"showIcon\": true                     }                   },                   {                     \"columnMatch\": \"UserName\",                     \"formatter\": 5,                     \"formatOptions\": {                       \"showIcon\": true                     }                   },                   {                     \"columnMatch\": \"EventID\",                     \"formatter\": 5,                     \"formatOptions\": {                       \"showIcon\": true                     }                   }                 ],                 \"filter\": true               }             },             \"customWidth\": \"50\",             \"conditionalVisibilities\": [               {                 \"parameterName\": \"selectedTab\",                 \"comparison\": \"isEqualTo\",                 \"value\": \"LDAP\"               },               {                 \"parameterName\": \"False\",                 \"comparison\": \"isEqualTo\",                 \"value\": \"Yes\"               }             ],             \"name\": \"query - 8\"           },           {             \"type\": 3,             \"content\": {               \"version\": \"KqlItem/1.0\",               \"query\": \"Event \\r\\n | where EventID == 2889 \\r\\n | parse ParameterXml with * '\u003e\u003cParam\u003e' Accounts '\u003c/' *\\r\\n | parse ParameterXml with * '\u003cParam\u003e' IPAddress ':' * \\r\\n | parse kind = regex ParameterXml with * '\u003c/Param\u003e\u003cParam\u003e' * '\u003c/Param\u003e\u003cParam\u003e' BindingType '\u003c/Param\u003e'\\r\\n | extend TimeFromNow = now() - TimeGenerated\\r\\n | extend TimeAgo = strcat(case(TimeFromNow \u003c 2m, strcat(toint(TimeFromNow / 1m), ' seconds'), TimeFromNow \u003c 2h, strcat(toint(TimeFromNow / 1m), ' minutes'), TimeFromNow \u003c 2d, strcat(toint(TimeFromNow / 1h), ' hours'), strcat(toint(TimeFromNow / 1d), ' days')), ' ago')\\r\\n | where IPAddress == '{IPAddress:escape}' or '{IPAddress:escape}' == \\\"All\\\"\\r\\n | summarize count() by IPAddress, bin(TimeGenerated, {TimeRange:grain})\",               \"size\": 0,               \"title\": \"IP addresses events over time - select timebrush\",               \"timeContext\": {                 \"durationMs\": 604800000               },               \"timeContextFromParameter\": \"TimeRange\",               \"timeBrushParameterName\": \"LDAPTimebrushIP\",               \"queryType\": 0,               \"resourceType\": \"microsoft.operationalinsights/workspaces\",               \"crossComponentResources\": [                 \"{Workspace}\"               ],               \"visualization\": \"linechart\"             },             \"customWidth\": \"50\",             \"conditionalVisibility\": {               \"parameterName\": \"selectedTab\",               \"comparison\": \"isEqualTo\",               \"value\": \"LDAP\"             },             \"name\": \"query - 12\"           },           {             \"type\": 3,             \"content\": {               \"version\": \"KqlItem/1.0\",               \"query\": \"Event \\r\\n | where EventID == 2889 \\r\\n | parse ParameterXml with * '\u003e\u003cParam\u003e' Accounts '\u003c/' *\\r\\n | parse ParameterXml with * '\u003cParam\u003e' IPAddress ':' * \\r\\n | parse kind = regex ParameterXml with * '\u003c/Param\u003e\u003cParam\u003e' * '\u003c/Param\u003e\u003cParam\u003e' BindingType '\u003c/Param\u003e'\\r\\n | extend TimeFromNow = now() - TimeGenerated\\r\\n | extend TimeAgo = strcat(case(TimeFromNow \u003c 2m, strcat(toint(TimeFromNow / 1m), ' seconds'), TimeFromNow \u003c 2h, strcat(toint(TimeFromNow / 1m), ' minutes'), TimeFromNow \u003c 2d, strcat(toint(TimeFromNow / 1h), ' hours'), strcat(toint(TimeFromNow / 1d), ' days')), ' ago')\\r\\n | where IPAddress == '{IPAddress:escape}' or '{IPAddress:escape}' == \\\"All\\\"\\r\\n| extend BindingType = case(BindingType==0,\\\"Unsigned\\\",BindingType==1,\\\"Simple\\\",\\\"Unknown\\\")\\r\\n | summarize Count = count() by IPAddress, bin(TimeGenerated, {TimeRange:grain}), BindingType\\r\\n | order by Count\",               \"size\": 0,               \"title\": \"IP addresses events over time ({LDAPTimebrushIP:label})\",               \"timeContext\": {                 \"durationMs\": 0               },               \"timeContextFromParameter\": \"LDAPTimebrushIP\",               \"queryType\": 0,               \"resourceType\": \"microsoft.operationalinsights/workspaces\",               \"crossComponentResources\": [                 \"{Workspace}\"               ],               \"visualization\": \"table\",               \"gridSettings\": {                 \"formatters\": [                   {                     \"columnMatch\": \"QueryCount\",                     \"formatter\": 4,                     \"formatOptions\": {                       \"palette\": \"blue\"                     }                   },                   {                     \"columnMatch\": \"count_\",                     \"formatter\": 0,                     \"formatOptions\": {                       \"aggregation\": \"Sum\"                     }                   }                 ]               }             },             \"customWidth\": \"50\",             \"conditionalVisibility\": {               \"parameterName\": \"selectedTab\",               \"comparison\": \"isEqualTo\",               \"value\": \"LDAP\"             },             \"name\": \"query - 12 - Copy\"           }         ]       },       \"conditionalVisibility\": {         \"parameterName\": \"selectedTab\",         \"comparison\": \"isEqualTo\",         \"value\": \"LDAP\"       },       \"name\": \"group - LDAP\"     },     {       \"type\": 12,       \"content\": {         \"version\": \"NotebookGroup/1.0\",         \"groupType\": \"editable\",         \"title\": \"Group: NTLMv1\",         \"items\": [           {             \"type\": 1,             \"content\": {               \"json\": \"### NTLM Help File\\r\\n\\r\\n**Protocol Risk**\\r\\n\\t* It is far less complex for an attacker to anticipate the challenge length in NTLMv1, as it is always a 16-byte random number. NTLMv2, on the other hand, uses a challenge of variable length.\\r\\n\\t* Recall also that NTLMv1 uses DES encryption, whereas NTLMv2 uses the stronger HMAC-MD5. As of now, it?? less likely that an attacker can successfully brute-force HMAC-MD5.\\r\\n\\t* Also, because NTLMv1 is so much less secure, the only protocols that Windows Defender Credential Guard supports are Kerberos and NTLMv2. You??l have to address the sources of NTLMv1 before using Credential Guard.\\r\\n\\r\\n**Auditing Settings**\\r\\n\\t* Set auditing for 4624 and 4625, and also for 4776 via Group Policy.\\r\\n\\t\\t* Windows Settings/Security Settings/Advanced Audit Configuration/Account Logon/Logon/Logoff/Audit Credential Validation with value of ??uccess, Failure.??r\\n\\t\\t* Windows Settings/Security Settings/Advanced Audit Configuration/(Logon/Logoff)/Audit Logoff with value of \\\"Success, Failure.\\\"\\r\\n\\t\\t* Windows Settings/Security Settings/Advanced Audit Configuration/(Logon/Logoff)/Audit Logon with value of \\\"Success, Failure.\\\"\\r\\n\\r\\n**Mitigation Planning**\\r\\n\\t* Work with application owners and vendors to use a more secure protocol like Kerberos or NTLMv2.\\r\\n\\t* Where unsupported operating systems, old applications or outdated appliances cannot use Kerberos or NTLMv2, work with decision makers to understand the risks to the organization.\\r\\n\\t* Create a plan to remove the problem devices, applications and appliances from the network.\\r\\n\\r\\n**Data Filters**\\r\\n\\t* Source and server\\r\\n\\t* Timebrush\\r\\n\\t* NTLM v1 event details by time\",               \"style\": \"info\"             },             \"conditionalVisibility\": {               \"parameterName\": \"Help\",               \"comparison\": \"isEqualTo\",               \"value\": \"Yes\"             },             \"name\": \"text - 3\"           },           {             \"type\": 3,             \"content\": {               \"version\": \"KqlItem/1.0\",               \"query\": \"SecurityEvent \\r\\n| where EventID == 4624 \\r\\n| where AuthenticationPackageName == 'NTLM' \\r\\n| where LmPackageName == 'NTLM V1'  \\r\\n| where Account !contains 'ANONYMOUS LOGON' \\r\\n| summarize Count = count() by WorkstationName, Computer \\r\\n| project WorkstationName, Computer, Count\\r\\n| order by Count desc\\r\\n\",               \"size\": 0,               \"title\": \"NTLM v1 events, by Source and server - click to filter\",               \"exportFieldName\": \"\",               \"exportParameterName\": \"WorkstationName\",               \"exportDefaultValue\": \"{\\\"WorkstationName\\\":\\\"All\\\"}\",               \"queryType\": 0,               \"resourceType\": \"microsoft.operationalinsights/workspaces\",               \"crossComponentResources\": [                 \"{Workspace}\"               ],               \"visualization\": \"table\",               \"gridSettings\": {                 \"formatters\": [                   {                     \"columnMatch\": \"WorkstationName\",                     \"formatter\": 5,                     \"formatOptions\": {                       \"showIcon\": true                     }                   },                   {                     \"columnMatch\": \"Computer\",                     \"formatter\": 0,                     \"formatOptions\": {                       \"showIcon\": true,                       \"aggregation\": \"Unique\"                     }                   },                   {                     \"columnMatch\": \"Count\",                     \"formatter\": 4,                     \"formatOptions\": {                       \"min\": 0,                       \"palette\": \"blue\",                       \"showIcon\": true,                       \"aggregation\": \"Sum\"                     }                   }                 ],                 \"hierarchySettings\": {                   \"treeType\": 1,                   \"groupBy\": [                     \"WorkstationName\"                   ]                 },                 \"sortBy\": [                   {                     \"itemKey\": \"Computer\",                     \"sortOrder\": 2                   }                 ]               },               \"sortBy\": [                 {                   \"itemKey\": \"Computer\",                   \"sortOrder\": 2                 }               ],               \"tileSettings\": {                 \"showBorder\": false,                 \"titleContent\": {                   \"columnMatch\": \"WorkstationName\",                   \"formatter\": 1                 },                 \"leftContent\": {                   \"columnMatch\": \"Count\",                   \"formatter\": 12,                   \"formatOptions\": {                     \"palette\": \"auto\"                   },                   \"numberFormat\": {                     \"unit\": 17,                     \"options\": {                       \"maximumSignificantDigits\": 3,                       \"maximumFractionDigits\": 2                     }                   }                 }               }             },             \"customWidth\": \"50\",             \"conditionalVisibility\": {               \"parameterName\": \"selectedTab\",               \"comparison\": \"isEqualTo\",               \"value\": \"NTLM\"             },             \"name\": \"query - 6\"           },           {             \"type\": 3,             \"content\": {               \"version\": \"KqlItem/1.0\",               \"query\": \"SecurityEvent \\r\\n| where EventID == 4624 \\r\\n| where AuthenticationPackageName == 'NTLM' \\r\\n| where LmPackageName == 'NTLM V1'  \\r\\n| where Account !contains 'ANONYMOUS LOGON' \\r\\n| where '{WorkstationName:escape}' contains \\\"All\\\" or '{WorkstationName:escape}' contains WorkstationName\\r\\n| summarize Count=count() by WorkstationName, Day=bin(TimeGenerated, {TimeRange:grain}) \",               \"size\": 0,               \"title\": \"NTLM v1 events, by time - select to timebrush\",               \"timeContext\": {                 \"durationMs\": 604800000               },               \"timeContextFromParameter\": \"TimeRange\",               \"timeBrushParameterName\": \"NTLMTimebrush\",               \"queryType\": 0,               \"resourceType\": \"microsoft.operationalinsights/workspaces\",               \"crossComponentResources\": [                 \"{Workspace}\"               ],               \"visualization\": \"areachart\"             },             \"customWidth\": \"50\",             \"conditionalVisibility\": {               \"parameterName\": \"selectedTab\",               \"comparison\": \"isEqualTo\",               \"value\": \"NTLM\"             },             \"name\": \"query - 15\"           },           {             \"type\": 3,             \"content\": {               \"version\": \"KqlItem/1.0\",               \"query\": \"SecurityEvent \\r\\n| where EventID == 4624 \\r\\n| where AuthenticationPackageName == 'NTLM' \\r\\n| where LmPackageName == 'NTLM V1'  \\r\\n| where Account !contains 'ANONYMOUS LOGON' \\r\\n| where '{WorkstationName:escape}' contains \\\"All\\\" or ('{WorkstationName:escape}' contains WorkstationName and '{WorkstationName:escape}' contains Computer)\\r\\n| summarize Count = count() by Account, WorkstationName, DC=Computer, LogonProcessName, TargetDomainName, TargetAccount, IpAddress\\r\\n| sort by Count desc  \",               \"size\": 0,               \"title\": \"NTLM v1 events details ({NTLMTimebrush:label})\",               \"timeContext\": {                 \"durationMs\": 0               },               \"timeContextFromParameter\": \"NTLMTimebrush\",               \"showExportToExcel\": true,               \"queryType\": 0,               \"resourceType\": \"microsoft.operationalinsights/workspaces\",               \"crossComponentResources\": [                 \"{Workspace}\"               ],               \"gridSettings\": {                 \"formatters\": [                   {                     \"columnMatch\": \"Count\",                     \"formatter\": 8,                     \"formatOptions\": {                       \"palette\": \"greenRed\",                       \"showIcon\": true                     }                   }                 ],                 \"filter\": true               }             },             \"conditionalVisibility\": {               \"parameterName\": \"selectedTab\",               \"comparison\": \"isEqualTo\",               \"value\": \"NTLM\"             },             \"name\": \"query - 16\"           }         ]       },       \"conditionalVisibility\": {         \"parameterName\": \"selectedTab\",         \"comparison\": \"isEqualTo\",         \"value\": \"NTLM\"       },       \"name\": \"Group - NTLM\"     },     {       \"type\": 12,       \"content\": {         \"version\": \"NotebookGroup/1.0\",         \"groupType\": \"editable\",         \"title\": \"Group: SMBv1\",         \"items\": [           {             \"type\": 1,             \"content\": {               \"json\": \"### SMB Help File\\r\\n\\r\\n**Protocol Risk**\\r\\n\\t* The security built into SMBv2 and SMBv3 is primarily around protecting against security downgrade attacks (Pre-authentication Integrity, Secure Dialect Negotiation) and attacker-in-the-middle attacks (Encryption, Insecure guest auth blocking). SMB1 simply doesn?? know about or contain any of these protections.\\r\\n\\t* If you have SMBv1 enabled on your file servers or domain controllers, then an attacker-in-the-middle can simply block SMB2/3 and force a downgrade attack. The net effect here will be that your computer(s) will gracefully flip over to SMBv1, thereby exposing the exchange?? data.\\r\\n\\t* SMBv1 continues to be a primary component in destructive ransomware attacks.\\r\\n\\r\\n**Auditing Settings**\\r\\n\\t* On the servers that you will audit, run the following Powershell command to enable auditing: Set-SmbServerConfiguration ??uditSmb1Access $true\\r\\n\\t* Note that this auditing is only supported on Sever 2016/Windows 10 and Server 2012 R2/Windcows 8.1 via an update.\\r\\n\\t* Finally, in the Log Analytics configuration, you will need to set ??ollect events from the following event logs??to Microsoft-Windows-SMBServer/Audit and set the log type to INFORMATION.\\\"\\r\\n\\r\\n**Mitigation Planning**\\r\\n\\t* Work with application owners and vendors to use a more secure SMB version, such as SMBv2 or SMBv3.\\r\\n\\t* Once there is no more SMBv1, set the DCs to no longer accept it. Registry key: HKEY_LOCAL_MACHINE\\\\SYSTEM\\\\CurrentControlSet\\\\Services\\\\LanmanServer\\\\Parameters\\r\\n\\tSet this to a value SMB1 REG_DWORD: 0 = Disabled.\\r\\n\\r\\n**Data Filters**\\r\\n\\t* Events by client \\r\\n\\t* Server timebrush\\r\\n\\t* Events by server\",               \"style\": \"info\"             },             \"conditionalVisibility\": {               \"parameterName\": \"Help\",               \"comparison\": \"isEqualTo\",               \"value\": \"Yes\"             },             \"name\": \"text - 4\"           },           {             \"type\": 3,             \"content\": {               \"version\": \"KqlItem/1.0\",               \"query\": \"let data = Event\\r\\n| where EventID == 3000 and EventLog == 'Microsoft-Windows-SMBServer/Audit' \\r\\n| parse ParameterXml with * '\u003cParam\u003e' ClientAddress '\u003c/' * \\r\\n| extend Client = replace(@'\u003e', @'', replace(@'\\\\]', @'', replace(@'\\\\[', @'', replace(@'\u003c!\\\\[CDATA', @'', ClientAddress))));\\r\\ndata\\r\\n| summarize Count = count() by Client\\r\\n| join kind = fullouter (datatable(Client:string)['Medium', 'high', 'low']) on Client\\r\\n| project Client = iff(Client == '', Client1, Client), Count = iff(Client == '', 0, Count)\\r\\n| join kind = inner (data\\r\\n | make-series Trend = count() default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step {TimeRange:grain} by Client)\\r\\n on Client\\r\\n| project-away Client1, TimeGenerated\\r\\n| extend Clients = Client\\r\\n| union (\\r\\n data \\r\\n | summarize Count = count() \\r\\n | extend jkey = 1\\r\\n | join kind=inner (data\\r\\n | make-series Trend = count() default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step {TimeRange:grain}\\r\\n | extend jkey = 1) on jkey\\r\\n | extend Client = 'All', Clients = '*' \\r\\n)\\r\\n| order by Count desc\\r\\n| take 10\\r\\n\",               \"size\": 4,               \"title\": \"SMB v1 events, by client - click to filter\",               \"timeContext\": {                 \"durationMs\": 604800000               },               \"timeContextFromParameter\": \"TimeRange\",               \"exportFieldName\": \"Client\",               \"exportParameterName\": \"ClientFilter\",               \"exportDefaultValue\": \"All\",               \"queryType\": 0,               \"resourceType\": \"microsoft.operationalinsights/workspaces\",               \"crossComponentResources\": [                 \"{Workspace}\"               ],               \"visualization\": \"tiles\",               \"tileSettings\": {                 \"titleContent\": {                   \"columnMatch\": \"Client\",                   \"formatter\": 1,                   \"formatOptions\": {                     \"showIcon\": true                   }                 },                 \"leftContent\": {                   \"columnMatch\": \"Count\",                   \"formatter\": 12,                   \"formatOptions\": {                     \"palette\": \"auto\",                     \"showIcon\": true                   },                   \"numberFormat\": {                     \"unit\": 17,                     \"options\": {                       \"maximumSignificantDigits\": 3,                       \"maximumFractionDigits\": 2                     }                   }                 },                 \"secondaryContent\": {                   \"columnMatch\": \"Trend\",                   \"formatter\": 9,                   \"formatOptions\": {                     \"min\": 0,                     \"palette\": \"purple\",                     \"showIcon\": true                   }                 },                 \"showBorder\": false               }             },             \"customWidth\": \"50\",             \"conditionalVisibility\": {               \"parameterName\": \"selectedTab\",               \"comparison\": \"isEqualTo\",               \"value\": \"SMB\"             },             \"name\": \"query - 18\"           },           {             \"type\": 3,             \"content\": {               \"version\": \"KqlItem/1.0\",               \"query\": \"Event\\r\\n| where EventID == 3000 and EventLog == 'Microsoft-Windows-SMBServer/Audit'\\r\\n| parse ParameterXml with * '\u003cParam\u003e' ClientAddress '\u003c/' *\\r\\n| extend Client = replace(@'\u003e', @'', replace(@'\\\\]', @'', replace(@'\\\\[', @'', replace(@'\u003c!\\\\[CDATA', @'', ClientAddress))))\\r\\n| where Client == '{ClientFilter}' or '{ClientFilter}' == \\\"All\\\"\\r\\n| summarize Count=count() by Client, SMBServer=Computer, ParameterXml, RenderedDescription, EventData\\r\\n| sort by Count desc\",               \"size\": 1,               \"title\": \"SMB v1 event details, by client\",               \"timeContext\": {                 \"durationMs\": 604800000               },               \"timeContextFromParameter\": \"TimeRange\",               \"queryType\": 0,               \"resourceType\": \"microsoft.operationalinsights/workspaces\",               \"crossComponentResources\": [                 \"{Workspace}\"               ],               \"visualization\": \"barchart\",               \"gridSettings\": {                 \"formatters\": [                   {                     \"columnMatch\": \"Client\",                     \"formatter\": 7,                     \"formatOptions\": {                       \"linkTarget\": \"GenericDetails\",                       \"linkIsContextBlade\": true,                       \"showIcon\": true                     }                   },                   {                     \"columnMatch\": \"SMBServer\",                     \"formatter\": 0,                     \"formatOptions\": {                       \"showIcon\": true,                       \"aggregation\": \"Unique\"                     }                   },                   {                     \"columnMatch\": \"ParameterXml\",                     \"formatter\": 5,                     \"formatOptions\": {                       \"showIcon\": true                     }                   },                   {                     \"columnMatch\": \"RenderedDescription\",                     \"formatter\": 5,                     \"formatOptions\": {                       \"showIcon\": true                     }                   },                   {                     \"columnMatch\": \"EventData\",                     \"formatter\": 5,                     \"formatOptions\": {                       \"showIcon\": true                     }                   },                   {                     \"columnMatch\": \"Count\",                     \"formatter\": 8,                     \"formatOptions\": {                       \"min\": 0,                       \"palette\": \"greenBlue\",                       \"showIcon\": true,                       \"aggregation\": \"Sum\"                     }                   },                   {                     \"columnMatch\": \"$gen_group\",                     \"formatter\": 7,                     \"formatOptions\": {                       \"linkTarget\": \"GenericDetails\",                       \"linkIsContextBlade\": true,                       \"showIcon\": true                     }                   }                 ],                 \"filter\": true,                 \"hierarchySettings\": {                   \"treeType\": 1,                   \"groupBy\": [                     \"Client\"                   ]                 }               }             },             \"customWidth\": \"50\",             \"conditionalVisibility\": {               \"parameterName\": \"selectedTab\",               \"comparison\": \"isEqualTo\",               \"value\": \"SMB\"             },             \"name\": \"query - 20\"           },           {             \"type\": 3,             \"content\": {               \"version\": \"KqlItem/1.0\",               \"query\": \"Event \\r\\n| where EventID == 3000 and EventLog == 'Microsoft-Windows-SMBServer/Audit' \\r\\n| parse ParameterXml with * '\u003cParam\u003e' ClientAddress '\u003c/' * \\r\\n| extend Client = replace(@'\u003e', @'', replace(@'\\\\]', @'', replace(@'\\\\[', @'', replace(@'\u003c!\\\\[CDATA', @'', ClientAddress)))) \\r\\n| where Client == '{ClientFilter}' or '{ClientFilter}' == \\\"All\\\"\\r\\n| summarize Count=count() by bin(TimeGenerated, 1h) , SMBServer=Computer \\r\\n\\r\\n\",               \"size\": 0,               \"title\": \"SMB v1 events, by server - select to timebrush\",               \"timeContext\": {                 \"durationMs\": 604800000               },               \"timeContextFromParameter\": \"TimeRange\",               \"timeBrushParameterName\": \"SMBtimebrush\",               \"queryType\": 0,               \"resourceType\": \"microsoft.operationalinsights/workspaces\",               \"crossComponentResources\": [                 \"{Workspace}\"               ],               \"visualization\": \"linechart\"             },             \"customWidth\": \"50\",             \"conditionalVisibility\": {               \"parameterName\": \"selectedTab\",               \"comparison\": \"isEqualTo\",               \"value\": \"SMB\"             },             \"name\": \"query - 19\"           },           {             \"type\": 3,             \"content\": {               \"version\": \"KqlItem/1.0\",               \"query\": \"Event\\r\\n| where EventID == 3000 and EventLog == 'Microsoft-Windows-SMBServer/Audit'\\r\\n| parse ParameterXml with * '\u003cParam\u003e' ClientAddress '\u003c/' *\\r\\n| extend Client = replace(@'\u003e', @'', replace(@'\\\\]', @'', replace(@'\\\\[', @'', replace(@'\u003c!\\\\[CDATA', @'', ClientAddress))))\\r\\n| where Client == '{ClientFilter}' or '{ClientFilter}' == \\\"All\\\"\\r\\n| summarize Count=count() by Client, SMBServer=Computer, ParameterXml, RenderedDescription, EventData\\r\\n| sort by Count desc\",               \"size\": 0,               \"title\": \"SMBv1 events, by server: {SMBtimebrush:label}\",               \"timeContext\": {                 \"durationMs\": 0               },               \"timeContextFromParameter\": \"SMBtimebrush\",               \"showExportToExcel\": true,               \"queryType\": 0,               \"resourceType\": \"microsoft.operationalinsights/workspaces\",               \"crossComponentResources\": [                 \"{Workspace}\"               ],               \"gridSettings\": {                 \"formatters\": [                   {                     \"columnMatch\": \"Client\",                     \"formatter\": 7,                     \"formatOptions\": {                       \"linkTarget\": \"GenericDetails\",                       \"linkIsContextBlade\": true,                       \"showIcon\": true                     }                   },                   {                     \"columnMatch\": \"SMBServer\",                     \"formatter\": 0,                     \"formatOptions\": {                       \"showIcon\": true,                       \"aggregation\": \"Unique\"                     }                   },                   {                     \"columnMatch\": \"ParameterXml\",                     \"formatter\": 5,                     \"formatOptions\": {                       \"showIcon\": true                     }                   },                   {                     \"columnMatch\": \"RenderedDescription\",                     \"formatter\": 5,                     \"formatOptions\": {                       \"showIcon\": true                     }                   },                   {                     \"columnMatch\": \"EventData\",                     \"formatter\": 5,                     \"formatOptions\": {                       \"showIcon\": true                     }                   },                   {                     \"columnMatch\": \"Count\",                     \"formatter\": 8,                     \"formatOptions\": {                       \"min\": 0,                       \"palette\": \"greenBlue\",                       \"showIcon\": true,                       \"aggregation\": \"Sum\"                     }                   },                   {                     \"columnMatch\": \"$gen_group\",                     \"formatter\": 7,                     \"formatOptions\": {                       \"linkTarget\": \"GenericDetails\",                       \"linkIsContextBlade\": true,                       \"showIcon\": true                     }                   }                 ],                 \"filter\": true,                 \"hierarchySettings\": {                   \"treeType\": 1,                   \"groupBy\": [                     \"Client\"                   ]                 }               }             },             \"customWidth\": \"50\",             \"conditionalVisibility\": {               \"parameterName\": \"selectedTab\",               \"comparison\": \"isEqualTo\",               \"value\": \"SMB\"             },             \"name\": \"query - 20 - Copy\"           }         ]       },       \"conditionalVisibility\": {         \"parameterName\": \"selectedTab\",         \"comparison\": \"isEqualTo\",         \"value\": \"SMB\"       },       \"name\": \"group - SMBv1\"     },     {       \"type\": 12,       \"content\": {         \"version\": \"NotebookGroup/1.0\",         \"groupType\": \"editable\",         \"title\": \"Group: Kerberos Ciphers\",         \"items\": [           {             \"type\": 1,             \"content\": {               \"json\": \"### Kerberos Help File\\r\\n\\r\\n**Protocol Risk**\\r\\n\\t\\r\\n\\tWhen weak cipher suites are permitted for the Kerberos protocol, attackers can leverage encryption downgrades to their advantage and make the protocol easier to compromise.\\r\\n\\tPossible encryption types:\\r\\n\\t* DES_CBC_CRC | Weak\\r\\n\\t* DES_CBC_MD5 | Weak\\r\\n\\t* RC4_HMAC_MD5 | Moderate\\r\\n\\t* AES128_HMAC_SHA1 | Strong\\r\\n\\t* AES256_HMAC_SHA1 | Strong\\r\\n\\t\\r\\n\\tStarting in Windows Server 2008 / Windows Vista, AES encryption has been available for the Kerberos protocol. At present, all supported versions of Windows have DES encryption for Kerberos disabled by default. While DES can be enabled for backward compatibility, doing so will open up an attack vector.\\r\\n\\r\\n**Auditing Settings**\\r\\n\\t\\r\\n\\tUnder Account Logon, set the following audit settings to Success, Failure\\r\\n\\t\\t* Audit Kerberos Authentication Service\\r\\n\\t\\t* Audit Kerberos Service Ticket Operations\\r\\n\\tUnder Logon/Logoff set the following settings to Success, Failure\\r\\n\\t\\t* Audit Logon\\r\\n\\r\\n**Mitigation Planning**\\r\\n\\t* Weak Kerberos Ciphers can be caused by downlevel Operating Systems (Client or Server), Account Configuration issues, Trust Configuration Issues or 3rd party OS/Software configuration.\\r\\n\\t* Look for patterns in the data that will help identify the cause of the weak cipher, such as accessing a common service, or a common set of workstations.\\r\\n\\t* Once identified, work with the OS/Account/Trust owners to remediate the requirement for the weak cipher.\\r\\n\\t* When the weak ciphers have been eliminated from the environment, disable them across your Windows Computers in the policy Computer Configuration\\\\Windows Settings\\\\Security Setting\\\\Local Policies\\\\Security Options\\\\Network security: Configure encryption types allowed for Kerberos.\\r\\n\\r\\n**Data Filters**\\r\\n\\t* Timebrush\\r\\n\\t* Weak ciphers event details\\r\\n\\t* Weak ciphers event details by account\\r\\n\\r\\n** References **\\r\\n- [Network security: Configure encryption types allowed for Kerberos](https://docs.microsoft.com/windows/security/threat-protection/security-policy-settings/network-security-configure-encryption-types-allowed-for-kerberos)\\r\\n- [Advanced Security Audit Policy Settings](https://docs.microsoft.com/previous-versions/windows/it-pro/windows-server-2012-R2-and-2012/dn319056%28v=ws.11%29)\\r\\n\",               \"style\": \"info\"             },             \"conditionalVisibility\": {               \"parameterName\": \"Help\",               \"comparison\": \"isEqualTo\",               \"value\": \"Yes\"             },             \"name\": \"text - 4\",             \"styleSettings\": {               \"margin\": \"5\"             }           },           {             \"type\": 3,             \"content\": {               \"version\": \"KqlItem/1.0\",               \"query\": \"SecurityEvent\\r\\n| where EventID == 4768 or EventID == 4769\\r\\n| where Level == 8\\r\\n| parse EventData with * '\\\"TicketEncryptionType\\\"\u003e' TicketEncryptionType '\u003c' *\\r\\n| where TicketEncryptionType != \\\"0x12\\\" and TicketEncryptionType != \\\"0x11\\\" //AES128/256, this filter needs to be activated\\r\\n| parse EventData with * '\\\"IpAddress\\\"\u003e' IpAddress '\u003c' *\\r\\n| parse EventData with * '\\\"TargetUserName\\\"\u003e' TargetUserName '\u003c' *\\r\\n| parse EventData with * '\\\"ServiceName\\\"\u003e' ServiceName '\u003c' *\\r\\n| extend Cipher=replace('0x18$', 'RC4-HMAC-EXP', replace('0x12$', 'AES256-CTS-HMAC-SHA1', replace('0x11$', 'AES128-CTS-HMAC-SHA1', replace('0x1$', 'DES_CBC_CRC', replace('0x2$', 'DES_CBC_MD4', replace('0x7$', 'DES3_CBC_SHA1', replace('0x5$', 'DES3_CBC_MD5', replace('0x3$', 'DES_CBC_MD5', replace('0x17$', 'RC4_HMAC', TicketEncryptionType)))))))))\\r\\n| summarize Count=count() by Cipher\\r\\n\",               \"size\": 0,               \"title\": \"Kerberos weak ciphers - click to filter\",               \"timeContext\": {                 \"durationMs\": 604800000               },               \"timeContextFromParameter\": \"TimeRange\",               \"exportFieldName\": \"Cipher\",               \"exportParameterName\": \"CipherParameter\",               \"exportDefaultValue\": \"All\",               \"queryType\": 0,               \"resourceType\": \"microsoft.operationalinsights/workspaces\",               \"crossComponentResources\": [                 \"{Workspace}\"               ],               \"visualization\": \"table\",               \"gridSettings\": {                 \"formatters\": [                   {                     \"columnMatch\": \"Count\",                     \"formatter\": 4,                     \"formatOptions\": {                       \"min\": 1,                       \"palette\": \"blue\"                     }                   }                 ]               },               \"graphSettings\": {                 \"type\": 0,                 \"topContent\": {                   \"columnMatch\": \"Cipher\",                   \"formatter\": 1                 },                 \"centerContent\": {                   \"columnMatch\": \"Count\",                   \"formatter\": 1,                   \"numberFormat\": {                     \"unit\": 17,                     \"options\": {                       \"maximumSignificantDigits\": 3,                       \"maximumFractionDigits\": 2                     }                   }                 }               }             },             \"customWidth\": \"50\",             \"conditionalVisibility\": {               \"parameterName\": \"selectedTab\",               \"comparison\": \"isEqualTo\",               \"value\": \"Kerberos\"             },             \"name\": \"query - 22 - Copy\"           },           {             \"type\": 3,             \"content\": {               \"version\": \"KqlItem/1.0\",               \"query\": \"SecurityEvent\\r\\n| where EventID == 4768 or EventID == 4769\\r\\n| where Level == 8\\r\\n| parse EventData with * '\\\"TicketEncryptionType\\\"\u003e' TicketEncryptionType '\u003c' *\\r\\n| where TicketEncryptionType != \\\"0x12\\\" and TicketEncryptionType != \\\"0x11\\\" //AES128/256, this filter needs to be activated\\r\\n| parse EventData with * '\\\"IpAddress\\\"\u003e' IpAddress '\u003c' *\\r\\n| parse EventData with * '\\\"TargetUserName\\\"\u003e' TargetUserName '\u003c' *\\r\\n| parse EventData with * '\\\"ServiceName\\\"\u003e' ServiceName '\u003c' *\\r\\n| extend Cipher=replace('0x18$', 'RC4-HMAC-EXP', replace('0x12$', 'AES256-CTS-HMAC-SHA1', replace('0x11$', 'AES128-CTS-HMAC-SHA1', replace('0x1$', 'DES_CBC_CRC', replace('0x2$', 'DES_CBC_MD4', replace('0x7$', 'DES3_CBC_SHA1', replace('0x5$', 'DES3_CBC_MD5', replace('0x3$', 'DES_CBC_MD5', replace('0x17$', 'RC4_HMAC', TicketEncryptionType)))))))))\\r\\n| where Cipher == '{CipherParameter}' or '{CipherParameter}' == \\\"All\\\"\\r\\n| summarize Count=count() by Cipher, IpAddress, TargetUserName , ServiceName, Computer, Activity\\r\\n| sort by Count desc\\r\\n\",               \"size\": 0,               \"title\": \"Kerberos weak ciphers event details - filtered by cipher\",               \"timeContext\": {                 \"durationMs\": 604800000               },               \"timeContextFromParameter\": \"TimeRange\",               \"exportFieldName\": \"TargetUserName\",               \"exportParameterName\": \"targetUserNameKerberosParameter\",               \"showExportToExcel\": true,               \"queryType\": 0,               \"resourceType\": \"microsoft.operationalinsights/workspaces\",               \"crossComponentResources\": [                 \"{Workspace}\"               ],               \"gridSettings\": {                 \"formatters\": [                   {                     \"columnMatch\": \"Cipher\",                     \"formatter\": 5,                     \"formatOptions\": {                       \"linkTarget\": \"GenericDetails\",                       \"linkIsContextBlade\": true                     }                   },                   {                     \"columnMatch\": \"IpAddress\",                     \"formatter\": 5                   },                   {                     \"columnMatch\": \"ServiceName\",                     \"formatter\": 5                   },                   {                     \"columnMatch\": \"Computer\",                     \"formatter\": 5                   },                   {                     \"columnMatch\": \"Count\",                     \"formatter\": 8,                     \"formatOptions\": {                       \"min\": 0,                       \"palette\": \"greenRed\"                     }                   }                 ],                 \"filter\": true               }             },             \"customWidth\": \"50\",             \"conditionalVisibility\": {               \"parameterName\": \"selectedTab\",               \"comparison\": \"isEqualTo\",               \"value\": \"Kerberos\"             },             \"name\": \"query - 23 - Copy\"           },           {             \"type\": 3,             \"content\": {               \"version\": \"KqlItem/1.0\",               \"query\": \"SecurityEvent\\r\\n| where EventID == 4768 or EventID == 4769\\r\\n| where Level == 8\\r\\n| parse EventData with * '\\\"TicketEncryptionType\\\"\u003e' TicketEncryptionType '\u003c' *\\r\\n| where TicketEncryptionType != \\\"0x12\\\" and TicketEncryptionType != \\\"0x11\\\" //AES128/256, this filter needs to be activated\\r\\n| parse EventData with * '\\\"IpAddress\\\"\u003e' IpAddress '\u003c' *\\r\\n| parse EventData with * '\\\"TargetUserName\\\"\u003e' TargetUserName '\u003c' *\\r\\n| parse EventData with * '\\\"ServiceName\\\"\u003e' ServiceName '\u003c' *\\r\\n| extend Cipher=replace('0x18$', 'RC4-HMAC-EXP', replace('0x12$', 'AES256-CTS-HMAC-SHA1', replace('0x11$', 'AES128-CTS-HMAC-SHA1', replace('0x1$', 'DES_CBC_CRC', replace('0x2$', 'DES_CBC_MD4', replace('0x7$', 'DES3_CBC_SHA1', replace('0x5$', 'DES3_CBC_MD5', replace('0x3$', 'DES_CBC_MD5', replace('0x17$', 'RC4_HMAC', TicketEncryptionType)))))))))\\r\\n| summarize Count=count() by Cipher, bin(TimeGenerated, 1h)\\r\\n\",               \"size\": 0,               \"title\": \"Kerberos weak ciphers - select to timebrush\",               \"timeContext\": {                 \"durationMs\": 604800000               },               \"timeContextFromParameter\": \"TimeRange\",               \"timeBrushParameterName\": \"KeberosTimeBrush\",               \"queryType\": 0,               \"resourceType\": \"microsoft.operationalinsights/workspaces\",               \"crossComponentResources\": [                 \"{Workspace}\"               ],               \"visualization\": \"areachart\"             },             \"conditionalVisibility\": {               \"parameterName\": \"selectedTab\",               \"comparison\": \"isEqualTo\",               \"value\": \"Kerberos\"             },             \"name\": \"query - 22\"           },           {             \"type\": 3,             \"content\": {               \"version\": \"KqlItem/1.0\",               \"query\": \"SecurityEvent\\r\\n| where EventID == 4768 or EventID == 4769\\r\\n| where Level == 8\\r\\n| parse EventData with * '\\\"TicketEncryptionType\\\"\u003e' TicketEncryptionType '\u003c' *\\r\\n| where TicketEncryptionType != \\\"0x12\\\" and TicketEncryptionType != \\\"0x11\\\" //AES128/256, this filter needs to be activated\\r\\n| parse EventData with * '\\\"IpAddress\\\"\u003e' IpAddress '\u003c' *\\r\\n| parse EventData with * '\\\"TargetUserName\\\"\u003e' TargetUserName '\u003c' *\\r\\n| parse EventData with * '\\\"ServiceName\\\"\u003e' ServiceName '\u003c' *\\r\\n| extend Cipher=replace('0x18$', 'RC4-HMAC-EXP', replace('0x12$', 'AES256-CTS-HMAC-SHA1', replace('0x11$', 'AES128-CTS-HMAC-SHA1', replace('0x1$', 'DES_CBC_CRC', replace('0x2$', 'DES_CBC_MD4', replace('0x7$', 'DES3_CBC_SHA1', replace('0x5$', 'DES3_CBC_MD5', replace('0x3$', 'DES_CBC_MD5', replace('0x17$', 'RC4_HMAC', TicketEncryptionType)))))))))\\r\\n| summarize Count=count() by Cipher, IpAddress, TargetUserName , ServiceName, Computer, Activity\\r\\n| sort by Count desc\\r\\n\",               \"size\": 0,               \"title\": \"Kerberos weak ciphers event details: {KeberosTimeBrush:label} - select TargetUserName for details\",               \"timeContext\": {                 \"durationMs\": 0               },               \"timeContextFromParameter\": \"KeberosTimeBrush\",               \"exportFieldName\": \"TargetUserName\",               \"exportParameterName\": \"targetUserNameKerberosParameter\",               \"exportDefaultValue\": \"All\",               \"showExportToExcel\": true,               \"queryType\": 0,               \"resourceType\": \"microsoft.operationalinsights/workspaces\",               \"crossComponentResources\": [                 \"{Workspace}\"               ],               \"gridSettings\": {                 \"formatters\": [                   {                     \"columnMatch\": \"Cipher\",                     \"formatter\": 5,                     \"formatOptions\": {                       \"linkTarget\": \"GenericDetails\",                       \"linkIsContextBlade\": true                     }                   },                   {                     \"columnMatch\": \"IpAddress\",                     \"formatter\": 5                   },                   {                     \"columnMatch\": \"ServiceName\",                     \"formatter\": 5                   },                   {                     \"columnMatch\": \"Computer\",                     \"formatter\": 5                   },                   {                     \"columnMatch\": \"Count\",                     \"formatter\": 8,                     \"formatOptions\": {                       \"min\": 0,                       \"palette\": \"greenRed\"                     }                   }                 ],                 \"filter\": true               }             },             \"customWidth\": \"50\",             \"conditionalVisibility\": {               \"parameterName\": \"selectedTab\",               \"comparison\": \"isEqualTo\",               \"value\": \"Kerberos\"             },             \"name\": \"query - 23\"           },           {             \"type\": 3,             \"content\": {               \"version\": \"KqlItem/1.0\",               \"query\": \"SecurityEvent\\r\\n| where EventID == 4768 or EventID == 4769\\r\\n| where Level == 8\\r\\n| parse EventData with * '\\\"TicketEncryptionType\\\"\u003e' TicketEncryptionType '\u003c' *\\r\\n| where TicketEncryptionType != \\\"0x12\\\" and TicketEncryptionType != \\\"0x11\\\" //AES128/256, this filter needs to be activated\\r\\n| parse EventData with * '\\\"IpAddress\\\"\u003e' IpAddress '\u003c' *\\r\\n| extend IpAddress = tostring(split(IpAddress,\\\"f:\\\").[1])\\r\\n| parse EventData with * '\\\"TargetUserName\\\"\u003e' TargetUserName '\u003c' *\\r\\n| parse EventData with * '\\\"ServiceName\\\"\u003e' ServiceName '\u003c' *\\r\\n| extend Cipher=replace('0x18$', 'RC4-HMAC-EXP', replace('0x12$', 'AES256-CTS-HMAC-SHA1', replace('0x11$', 'AES128-CTS-HMAC-SHA1', replace('0x1$', 'DES_CBC_CRC', replace('0x2$', 'DES_CBC_MD4', replace('0x7$', 'DES3_CBC_SHA1', replace('0x5$', 'DES3_CBC_MD5', replace('0x3$', 'DES_CBC_MD5', replace('0x17$', 'RC4_HMAC', TicketEncryptionType)))))))))\\r\\n//| where TargetUserName in ('{targetUserNameKerberosParameter}')\\r\\n| where TargetUserName == '{targetUserNameKerberosParameter:escape}' or  '{targetUserNameKerberosParameter:escape}' == \\\"All\\\"\\r\\n| summarize OldestRecord = min(TimeGenerated), NewestRecord = max(TimeGenerated), Count=count() by TargetUserName, Cipher, IpAddress , ServiceName, Computer, Activity\\r\\n| sort by Count desc\\r\\n\",               \"size\": 0,               \"title\": \"Kerberos weak ciphers event details: {targetUserNameKerberosParameter}, {KeberosTimeBrush:label}\",               \"timeContext\": {                 \"durationMs\": 0               },               \"timeContextFromParameter\": \"KeberosTimeBrush\",               \"showExportToExcel\": true,               \"queryType\": 0,               \"resourceType\": \"microsoft.operationalinsights/workspaces\",               \"crossComponentResources\": [                 \"{Workspace}\"               ],               \"gridSettings\": {                 \"formatters\": [                   {                     \"columnMatch\": \"Cipher\",                     \"formatter\": 7,                     \"formatOptions\": {                       \"linkTarget\": \"GenericDetails\",                       \"linkIsContextBlade\": true                     }                   },                   {                     \"columnMatch\": \"EventData\",                     \"formatter\": 7,                     \"formatOptions\": {                       \"linkTarget\": \"GenericDetails\",                       \"linkIsContextBlade\": true                     }                   },                   {                     \"columnMatch\": \"Count\",                     \"formatter\": 8,                     \"formatOptions\": {                       \"min\": 0,                       \"palette\": \"greenRed\"                     }                   }                 ],                 \"filter\": true,                 \"labelSettings\": [                   {                     \"columnId\": \"TargetUserName\"                   },                   {                     \"columnId\": \"Cipher\"                   },                   {                     \"columnId\": \"IpAddress\"                   },                   {                     \"columnId\": \"ServiceName\"                   },                   {                     \"columnId\": \"Computer\"                   }                 ]               },               \"sortBy\": []             },             \"customWidth\": \"50\",             \"conditionalVisibility\": {               \"parameterName\": \"selectedTab\",               \"comparison\": \"isEqualTo\",               \"value\": \"Kerberos\"             },             \"name\": \"query - 23 - Copy\"           },           {             \"type\": 3,             \"content\": {               \"version\": \"KqlItem/1.0\",               \"query\": \"SecurityEvent\\r\\n| where EventID == 4768 or EventID == 4769\\r\\n| where Level == 8\\r\\n| parse EventData with * '\\\"TicketEncryptionType\\\"\u003e' TicketEncryptionType '\u003c' *\\r\\n| where TicketEncryptionType != \\\"0x12\\\" and TicketEncryptionType != \\\"0x11\\\" //AES128/256, this filter needs to be activated\\r\\n| parse EventData with * '\\\"IpAddress\\\"\u003e' IpAddress '\u003c' *\\r\\n| extend IpAddress = tostring(split(IpAddress,\\\"f:\\\").[1])\\r\\n| parse EventData with * '\\\"TargetUserName\\\"\u003e' TargetUserName '\u003c' *\\r\\n| parse EventData with * '\\\"ServiceName\\\"\u003e' ServiceName '\u003c' *\\r\\n| extend Cipher=replace('0x18$', 'RC4-HMAC-EXP', replace('0x12$', 'AES256-CTS-HMAC-SHA1', replace('0x11$', 'AES128-CTS-HMAC-SHA1', replace('0x1$', 'DES_CBC_CRC', replace('0x2$', 'DES_CBC_MD4', replace('0x7$', 'DES3_CBC_SHA1', replace('0x5$', 'DES3_CBC_MD5', replace('0x3$', 'DES_CBC_MD5', replace('0x17$', 'RC4_HMAC', TicketEncryptionType)))))))))\\r\\n| summarize OldestRecord = min(TimeGenerated), NewestRecord = max(TimeGenerated), Count=count() by TargetUserName, Cipher, IpAddress , ServiceName, Computer, Activity\\r\\n| sort by Count desc\\r\\n\",               \"size\": 0,               \"title\": \"Kerberos weak ciphers event details unfiltered\",               \"timeContext\": {                 \"durationMs\": 604800000               },               \"timeContextFromParameter\": \"TimeRange\",               \"showExportToExcel\": true,               \"queryType\": 0,               \"resourceType\": \"microsoft.operationalinsights/workspaces\",               \"crossComponentResources\": [                 \"{Workspace}\"               ],               \"gridSettings\": {                 \"formatters\": [                   {                     \"columnMatch\": \"Cipher\",                     \"formatter\": 7,                     \"formatOptions\": {                       \"linkTarget\": \"GenericDetails\",                       \"linkIsContextBlade\": true                     }                   },                   {                     \"columnMatch\": \"EventData\",                     \"formatter\": 7,                     \"formatOptions\": {                       \"linkTarget\": \"GenericDetails\",                       \"linkIsContextBlade\": true                     }                   },                   {                     \"columnMatch\": \"Count\",                     \"formatter\": 8,                     \"formatOptions\": {                       \"min\": 0,                       \"palette\": \"greenRed\"                     }                   }                 ],                 \"filter\": true,                 \"labelSettings\": [                   {                     \"columnId\": \"TargetUserName\"                   },                   {                     \"columnId\": \"Cipher\"                   },                   {                     \"columnId\": \"IpAddress\"                   },                   {                     \"columnId\": \"ServiceName\"                   },                   {                     \"columnId\": \"Computer\"                   }                 ]               },               \"sortBy\": []             },             \"conditionalVisibilities\": [               {                 \"parameterName\": \"selectedTab\",                 \"comparison\": \"isEqualTo\",                 \"value\": \"Kerberos\"               },               {                 \"parameterName\": \"targetUserNameKerberosParameter\",                 \"comparison\": \"isNotEqualTo\"               }             ],             \"name\": \"query - 23 - Copy - Copy\"           }         ]       },       \"conditionalVisibility\": {         \"parameterName\": \"selectedTab\",         \"comparison\": \"isEqualTo\",         \"value\": \"Kerberos\"       },       \"name\": \"Group - Kerberos\"     },     {       \"type\": 12,       \"content\": {         \"version\": \"NotebookGroup/1.0\",         \"groupType\": \"editable\",         \"title\": \"Group: WDigest\",         \"items\": [           {             \"type\": 1,             \"content\": {               \"json\": \"### WDigest Help File\\r\\n\\r\\n**Protocol Risk**\\r\\n\\t* WDigest is a deprecated protocol. It injects plain-text passwords into memory.\\r\\n\\t* Attackers can simply read the plaintext passwords using commodity tools.\\r\\n\\t* Also, because WDigest is so much less secure, it is not supported in Windows Defender Credential Guard. You??l have to address the sources of WDigest before using Credential Guard.\\r\\n\\r\\n**Auditing Settings**\\r\\n\\t* Set auditing for 4776 (non-Kerberos logon) ??Windows Settings/Security Settings/Advanced Audit Configuration/Account Logon/ Logon/Logoff/Audit Credential Validation with value of ??uccess, Failure.??r\\n\\r\\n**Mitigation Planning**\\r\\n\\t* Work with application owners and vendors to use a more secure protocol like NTLMv2 or Kerberos.\\r\\n\\t* Once there is no more Digest, set the DCs to no longer accept it. Registry (may be done via GP Preferences): HKEY_LOCAL_MACHINE\\\\SYSTEM\\\\CurrentControlSet\\\\Control\\\\SecurityProviders\\\\WDigest\\\\ ??seLogonCredential\\r\\n\\t* Set this to a value of 0. A restart is required.\\r\\n\\r\\n**Data Filters**\\r\\n\\t* Account workstation\\r\\n\\t* Workstation over time\\r\\n\\t* Account timebrush\\r\\n\",               \"style\": \"info\"             },             \"conditionalVisibility\": {               \"parameterName\": \"Help\",               \"comparison\": \"isEqualTo\",               \"value\": \"Yes\"             },             \"name\": \"text - 3\"           },           {             \"type\": 3,             \"content\": {               \"version\": \"KqlItem/1.0\",               \"query\": \"let data = SecurityEvent \\r\\n| where EventID == 4624 or EventID == 4776 \\r\\n| where Level == 8 \\r\\n| where PackageName contains 'WDigest';\\r\\nlet appData = data\\r\\n| summarize TotalCount = count() by TargetAccount\\r\\n| join kind=inner (data\\r\\n    | make-series Trend = count() default = 0 on TimeGenerated in range({TimeRange:start}, {TimeRange:end}, {TimeRange:grain}) by TargetAccount\\r\\n    | project-away TimeGenerated) on TargetAccount\\r\\n| order by TotalCount desc, TargetAccount asc\\r\\n| project TargetAccount, TotalCount, Trend\\r\\n| serialize Id = row_number();\\r\\ndata\\r\\n| summarize TotalCount = count() by Workstation , TargetAccount\\r\\n| join kind=inner (data\\r\\n    | make-series Trend = count() default = 0 on TimeGenerated in range({TimeRange:start}, {TimeRange:end}, {TimeRange:grain}) by TargetAccount, Workstation\\r\\n    | project-away TimeGenerated) on TargetAccount, Workstation\\r\\n| order by TotalCount desc, TargetAccount asc\\r\\n| project TargetAccount, Workstation, TotalCount, Trend\\r\\n| serialize Id = row_number(1000000)\\r\\n| join kind=inner (appData) on TargetAccount\\r\\n| project Id, Name = Workstation, Type = 'Workstation', ['TargetAccounts Count'] = TotalCount, Trend,  ParentId = Id1\\r\\n| union (appData \\r\\n    | project Id, Name = TargetAccount, Type = 'TargetAccount', ['TargetAccounts Count'] = TotalCount,  Trend)\\r\\n| order by ['TargetAccounts Count'] desc, Name asc\\r\\n\",               \"size\": 0,               \"title\": \"WDigest, by account workstation - click to filter\",               \"timeContext\": {                 \"durationMs\": 604800000               },               \"timeContextFromParameter\": \"TimeRange\",               \"exportParameterName\": \"WDigest\",               \"exportDefaultValue\": \"{ \\\"Name\\\":\\\"\\\", \\\"Type\\\":\\\"*\\\"}\",               \"queryType\": 0,               \"resourceType\": \"microsoft.operationalinsights/workspaces\",               \"crossComponentResources\": [                 \"{Workspace}\"               ],               \"visualization\": \"table\",               \"gridSettings\": {                 \"formatters\": [                   {                     \"columnMatch\": \"Id\",                     \"formatter\": 5,                     \"formatOptions\": {                       \"showIcon\": true                     }                   },                   {                     \"columnMatch\": \"TargetAccounts Count\",                     \"formatter\": 8,                     \"formatOptions\": {                       \"min\": 0,                       \"palette\": \"blue\",                       \"showIcon\": true                     }                   },                   {                     \"columnMatch\": \"Trend\",                     \"formatter\": 10,                     \"formatOptions\": {                       \"min\": 0,                       \"palette\": \"orange\",                       \"showIcon\": true                     }                   },                   {                     \"columnMatch\": \"ParentId\",                     \"formatter\": 5,                     \"formatOptions\": {                       \"showIcon\": true                     }                   }                 ],                 \"hierarchySettings\": {                   \"idColumn\": \"Id\",                   \"parentColumn\": \"ParentId\",                   \"treeType\": 0,                   \"expanderColumn\": \"Name\"                 }               },               \"graphSettings\": {                 \"type\": 0,                 \"topContent\": {                   \"columnMatch\": \"Name\",                   \"formatter\": 1                 },                 \"centerContent\": {                   \"columnMatch\": \"Id\",                   \"formatter\": 1,                   \"numberFormat\": {                     \"unit\": 17,                     \"options\": {                       \"maximumSignificantDigits\": 3,                       \"maximumFractionDigits\": 2                     }                   }                 }               }             },             \"customWidth\": \"50\",             \"conditionalVisibility\": {               \"parameterName\": \"selectedTab\",               \"comparison\": \"isEqualTo\",               \"value\": \"WDigest\"             },             \"name\": \"query - 25\"           },           {             \"type\": 3,             \"content\": {               \"version\": \"KqlItem/1.0\",               \"query\": \"let details = dynamic({WDigest});\\r\\nSecurityEvent \\r\\n| where EventID == 4624 or EventID == 4776 \\r\\n| where Level == 8 \\r\\n| where PackageName contains 'WDigest' \\r\\n| where (details.Type == 'Workstation' and details.Name == Workstation) or (details.Type == 'TargetAccount' and details.Name == TargetAccount) or (details.Type == '*')\\r\\n| summarize Count=count() by Workstation,  bin(TimeGenerated, 1h)\",               \"size\": 0,               \"title\": \"WDigest Workstation over Time\",               \"timeContext\": {                 \"durationMs\": 604800000               },               \"timeContextFromParameter\": \"TimeRange\",               \"timeBrushParameterName\": \"wDigestTimeBrushAccount\",               \"queryType\": 0,               \"resourceType\": \"microsoft.operationalinsights/workspaces\",               \"crossComponentResources\": [                 \"{Workspace}\"               ],               \"visualization\": \"areachart\"             },             \"customWidth\": \"50\",             \"conditionalVisibility\": {               \"parameterName\": \"selectedTab\",               \"comparison\": \"isEqualTo\",               \"value\": \"WDigest\"             },             \"name\": \"query - 26\"           },           {             \"type\": 3,             \"content\": {               \"version\": \"KqlItem/1.0\",               \"query\": \"let details = dynamic({WDigest});\\r\\nSecurityEvent\\r\\n| where EventID == 4624 or EventID == 4776\\r\\n| where Level == 8\\r\\n| where PackageName contains 'WDigest'\\r\\n| where (details.Type == 'Workstation' and details.Name == Workstation) or (details.Type == 'TargetAccount' and details.Name == TargetAccount) or (details.Type == '*')\\r\\n| summarize Count=count() by TargetAccount, Workstation, WDigestServer=Computer , Activity\\r\\n| sort by Count desc\",               \"size\": 0,               \"title\": \"WDigest Account over time {{wDigestTimeBrushAccount:label})\",               \"timeContext\": {                 \"durationMs\": 0               },               \"timeContextFromParameter\": \"wDigestTimeBrushAccount\",               \"showExportToExcel\": true,               \"queryType\": 0,               \"resourceType\": \"microsoft.operationalinsights/workspaces\",               \"crossComponentResources\": [                 \"{Workspace}\"               ],               \"gridSettings\": {                 \"formatters\": [                   {                     \"columnMatch\": \"Count\",                     \"formatter\": 4,                     \"formatOptions\": {                       \"min\": 0,                       \"palette\": \"coldHot\",                       \"showIcon\": true                     }                   }                 ],                 \"filter\": true               }             },             \"conditionalVisibility\": {               \"parameterName\": \"selectedTab\",               \"comparison\": \"isEqualTo\",               \"value\": \"WDigest\"             },             \"name\": \"query - 27\"           }         ]       },       \"conditionalVisibility\": {         \"parameterName\": \"selectedTab\",         \"comparison\": \"isEqualTo\",         \"value\": \"WDigest\"       },       \"name\": \"WDigest\"     },     {       \"type\": 12,       \"content\": {         \"version\": \"NotebookGroup/1.0\",         \"groupType\": \"editable\",         \"title\": \"Group: AAD Legacy Auth\",         \"items\": [           {             \"type\": 1,             \"content\": {               \"json\": \"### AAD Legacy Auth Help File\\r\\n\\r\\n**Protocol Risk**\\r\\n\\t* Legacy authentication protocols like POP, SMTP, IMAP, and MAPI can't enforce MFA, making them preferred entry points for adversaries attacking your organization.\\r\\n\\t* The numbers on legacy authentication from an analysis of Azure Active Directory (Azure AD) traffic are stark:\\r\\n\\t\\t* More than 99 percent of password spray attacks use legacy authentication protocols\\r\\n\\t\\t* More than 97 percent of credential stuffing attacks use legacy authentication\\r\\n\\t\\t* Azure AD accounts in organizations that have disabled legacy authentication experience 67 percent fewer compromises than those where legacy authentication is enabled\\r\\n\\r\\n**Legacy Authentication Protocols**\\r\\nThe following options are considered legacy authentication protocols\\r\\n\\t* Authenticated SMTP - Used by POP and IMAP client's to send email messages.\\r\\n\\t* Autodiscover - Used by Outlook and EAS clients to find and connect to mailboxes in Exchange Online.\\r\\n\\t* Exchange ActiveSync (EAS) - Used to connect to mailboxes in Exchange Online.\\r\\n\\t* Exchange Online PowerShell - Used to connect to Exchange Online with remote PowerShell. If you block Basic authentication for Exchange Online PowerShell, you need to use the Exchange Online PowerShell Module to connect. For instructions, see Connect to Exchange Online PowerShell using multi-factor authentication.\\r\\n\\t* Exchange Web Services (EWS) - A programming interface that's used by Outlook, Outlook for Mac, and third-party apps.\\r\\n\\t* IMAP4 - Used by IMAP email clients.\\r\\n\\t* MAPI over HTTP (MAPI/HTTP) - Used by Outlook 2010 and later.\\r\\n\\t* Offline Address Book (OAB) - A copy of address list collections that are downloaded and used by Outlook.\\r\\n\\t* Outlook Anywhere (RPC over HTTP) - Used by Outlook 2016 and earlier.\\r\\n\\t* Outlook Service - Used by the Mail and Calendar app for Windows 10.\\r\\n\\t* POP3 - Used by POP email clients.\\r\\n\\t* Reporting Web Services - Used to retrieve report data in Exchange Online.\\r\\n\\t* Other clients - Other protocols identified as utilizing legacy authentication.\\r\\n\\r\\n**Mitigation Planning**\\r\\n\\t* Before you can block legacy authentication in your directory, you need to first understand if your users have apps that use legacy authentication and how it affects your overall directory.\\r\\n\\t* Azure AD supports several of the most widely used authentication and authorization protocols including legacy authentication. Legacy authentication refers to protocols that use basic authentication. Typically, these protocols can't enforce any type of second factor authentication. * Examples for apps that are based on legacy authentication are:\\r\\n\\t\\t* Older Microsoft Office apps\\r\\n\\t\\t* Apps using mail protocols like POP, IMAP, and SMTP\\r\\n\\t\\t* Single factor authentication (for example, username and password) is not enough these days.\\r\\n\\t\\t* Passwords are bad as they are easy to guess and we (humans) are bad at choosing good passwords. Passwords are also vulnerable to a variety of attacks like phishing and password spray. One of the easiest things you can do to protect against password threats is to implement MFA. With MFA, even if an attacker gets in possession of a user's password, the password alone is not sufficient to successfully authenticate and access the data.\\r\\n\\r\\n\\tHow can you prevent apps using legacy authentication from accessing your tenant's resources? The recommendation is to just block them with a Conditional Access policy. If necessary, you allow only certain users and specific network locations to use apps that are based on legacy authentication.\\r\\n\\r\\n**Data Filters**\\r\\n\\t* Account\\r\\n\\t* IP address\\r\\n\\t* Account timebrush\\r\\n\\t* IP timebrush\\r\\n\\t* Auth type\\r\\n\\t* Country/region\\r\\n\\t* Full details\\r\\n\\r\\n** References   **\\r\\n- [How to: Block legacy authentication to Azure AD with Conditional Access](https://docs.microsoft.com/azure/active-directory/conditional-access/block-legacy-authentication#:~:text=To%20give%20your%20users%20easy%20access%20to%20your,environments%20a%20common%20requirement%20to%20address%20identity%20theft)\",               \"style\": \"info\"             },             \"conditionalVisibility\": {               \"parameterName\": \"Help\",               \"comparison\": \"isEqualTo\",               \"value\": \"Yes\"             },             \"name\": \"text - 9\"           },           {             \"type\": 3,             \"content\": {               \"version\": \"KqlItem/1.0\",               \"query\": \"SigninLogs\\r\\n| where ClientAppUsed !contains \\\"Browser\\\" and ClientAppUsed !contains \\\"Mobile Apps and Desktop clients\\\" and ClientAppUsed !contains \\\"Exchange ActiveSync\\\"\\r\\n| summarize Count=count() by UserPrincipalName, ClientAppUsed //doughnut\\r\\n| order by Count desc\",               \"size\": 0,               \"title\": \"Legacy authentications, by account\",               \"timeContext\": {                 \"durationMs\": 0               },               \"timeContextFromParameter\": \"TimeRange\",               \"exportFieldName\": \"UserPrincipalName\",               \"exportParameterName\": \"UserPrincipalName\",               \"exportDefaultValue\": \"All\",               \"showExportToExcel\": true,               \"queryType\": 0,               \"resourceType\": \"microsoft.operationalinsights/workspaces\",               \"crossComponentResources\": [                 \"{Workspace}\"               ],               \"visualization\": \"table\",               \"gridSettings\": {                 \"formatters\": [                   {                     \"columnMatch\": \"count_\",                     \"formatter\": 4,                     \"formatOptions\": {                       \"min\": 1,                       \"palette\": \"blue\"                     }                   }                 ],                 \"filter\": true               },               \"sortBy\": []             },             \"customWidth\": \"50\",             \"conditionalVisibility\": {               \"parameterName\": \"selectedTab\",               \"comparison\": \"isEqualTo\",               \"value\": \"AADLegacy\"             },             \"name\": \"query - 29\"           },           {             \"type\": 3,             \"content\": {               \"version\": \"KqlItem/1.0\",               \"query\": \"SigninLogs\\r\\n| where ClientAppUsed !contains \\\"Browser\\\" and ClientAppUsed !contains \\\"Mobile Apps and Desktop clients\\\" and ClientAppUsed !contains \\\"Exchange ActiveSync\\\"\\r\\n| summarize Count=count() by IPAddress,ClientAppUsed //doughnut\\r\\n| order by Count desc\",               \"size\": 0,               \"title\": \"Legacy authentications, by IP address\",               \"timeContext\": {                 \"durationMs\": 604800000               },               \"timeContextFromParameter\": \"TimeRange\",               \"showExportToExcel\": true,               \"queryType\": 0,               \"resourceType\": \"microsoft.operationalinsights/workspaces\",               \"crossComponentResources\": [                 \"{Workspace}\"               ],               \"visualization\": \"table\",               \"gridSettings\": {                 \"formatters\": [                   {                     \"columnMatch\": \"count_\",                     \"formatter\": 4,                     \"formatOptions\": {                       \"min\": 1,                       \"palette\": \"orange\"                     }                   }                 ],                 \"filter\": true               }             },             \"customWidth\": \"50\",             \"conditionalVisibility\": {               \"parameterName\": \"selectedTab\",               \"comparison\": \"isEqualTo\",               \"value\": \"AADLegacy\"             },             \"name\": \"query - 30\"           },           {             \"type\": 3,             \"content\": {               \"version\": \"KqlItem/1.0\",               \"query\": \"SigninLogs\\r\\n| where ClientAppUsed !contains \\\"Browser\\\" and ClientAppUsed !contains \\\"Mobile Apps and Desktop clients\\\" and ClientAppUsed !contains \\\"Exchange ActiveSync\\\"\\r\\n| summarize count() by UserPrincipalName, bin(TimeGenerated, {TimeRange:grain})\\r\\n| order by count_\\r\\n\",               \"size\": 1,               \"title\": \"Account events over time - select timebrush\",               \"timeContext\": {                 \"durationMs\": 604800000               },               \"timeContextFromParameter\": \"TimeRange\",               \"timeBrushParameterName\": \"AADTimebrushAccount\",               \"queryType\": 0,               \"resourceType\": \"microsoft.operationalinsights/workspaces\",               \"crossComponentResources\": [                 \"{Workspace}\"               ],               \"visualization\": \"linechart\",               \"gridSettings\": {                 \"formatters\": [                   {                     \"columnMatch\": \"CountryOrRegion\",                     \"formatter\": 5,                     \"formatOptions\": {                       \"showIcon\": true                     }                   },                   {                     \"columnMatch\": \"ClientAppUsed\",                     \"formatter\": 0,                     \"formatOptions\": {                       \"showIcon\": true,                       \"aggregation\": \"Unique\"                     }                   },                   {                     \"columnMatch\": \"count_\",                     \"formatter\": 4,                     \"formatOptions\": {                       \"min\": 0,                       \"palette\": \"purple\",                       \"showIcon\": true,                       \"aggregation\": \"Sum\"                     }                   }                 ],                 \"hierarchySettings\": {                   \"treeType\": 1,                   \"groupBy\": [                     \"CountryOrRegion\"                   ]                 },                 \"labelSettings\": [                   {                     \"columnId\": \"CountryOrRegion\"                   },                   {                     \"columnId\": \"ClientAppUsed\"                   },                   {                     \"columnId\": \"count_\",                     \"label\": \"Count\"                   }                 ]               }             },             \"customWidth\": \"50\",             \"conditionalVisibility\": {               \"parameterName\": \"selectedTab\",               \"comparison\": \"isEqualTo\",               \"value\": \"AADLegacy\"             },             \"name\": \"query - 31 - Copy\"           },           {             \"type\": 3,             \"content\": {               \"version\": \"KqlItem/1.0\",               \"query\": \"SigninLogs\\r\\n| where ClientAppUsed !contains \\\"Browser\\\" and ClientAppUsed !contains \\\"Mobile Apps and Desktop clients\\\" and ClientAppUsed !contains \\\"Exchange ActiveSync\\\"\\r\\n| summarize Count=count() by UserPrincipalName, bin(TimeGenerated, {TimeRange:grain})\\r\\n| order by Count\\r\\n\",               \"size\": 1,               \"title\": \"Account events over time ({AADTimebrushAccount:label})\",               \"timeContext\": {                 \"durationMs\": 0               },               \"timeContextFromParameter\": \"AADTimebrushAccount\",               \"queryType\": 0,               \"resourceType\": \"microsoft.operationalinsights/workspaces\",               \"visualization\": \"table\",               \"gridSettings\": {                 \"formatters\": [                   {                     \"columnMatch\": \"count_\",                     \"formatter\": 4,                     \"formatOptions\": {                       \"min\": 0,                       \"palette\": \"blue\",                       \"aggregation\": \"Sum\"                     }                   }                 ],                 \"hierarchySettings\": {                   \"treeType\": 1,                   \"groupBy\": [                     \"UserPrincipalName\"                   ]                 }               }             },             \"customWidth\": \"50\",             \"conditionalVisibility\": {               \"parameterName\": \"selectedTab\",               \"comparison\": \"isEqualTo\",               \"value\": \"AADLegacy\"             },             \"name\": \"query - 26\"           },           {             \"type\": 3,             \"content\": {               \"version\": \"KqlItem/1.0\",               \"query\": \"SigninLogs\\r\\n| where ClientAppUsed !contains \\\"Browser\\\" and ClientAppUsed !contains \\\"Mobile Apps and Desktop clients\\\" and ClientAppUsed !contains \\\"Exchange ActiveSync\\\"\\r\\n| summarize count() by IPAddress, bin(TimeGenerated, {TimeRange:grain})\\r\\n| order by count_\\r\\n\",               \"size\": 1,               \"title\": \"IPAddresses over time - select timebrush\",               \"timeContext\": {                 \"durationMs\": 604800000               },               \"timeContextFromParameter\": \"TimeRange\",               \"timeBrushParameterName\": \"AADTimebrushIPAddress\",               \"queryType\": 0,               \"resourceType\": \"microsoft.operationalinsights/workspaces\",               \"crossComponentResources\": [                 \"{Workspace}\"               ],               \"visualization\": \"linechart\",               \"gridSettings\": {                 \"formatters\": [                   {                     \"columnMatch\": \"CountryOrRegion\",                     \"formatter\": 5,                     \"formatOptions\": {                       \"showIcon\": true                     }                   },                   {                     \"columnMatch\": \"ClientAppUsed\",                     \"formatter\": 0,                     \"formatOptions\": {                       \"showIcon\": true,                       \"aggregation\": \"Unique\"                     }                   },                   {                     \"columnMatch\": \"count_\",                     \"formatter\": 4,                     \"formatOptions\": {                       \"min\": 0,                       \"palette\": \"purple\",                       \"showIcon\": true,                       \"aggregation\": \"Sum\"                     }                   }                 ],                 \"hierarchySettings\": {                   \"treeType\": 1,                   \"groupBy\": [                     \"CountryOrRegion\"                   ]                 },                 \"labelSettings\": [                   {                     \"columnId\": \"CountryOrRegion\"                   },                   {                     \"columnId\": \"ClientAppUsed\"                   },                   {                     \"columnId\": \"count_\",                     \"label\": \"Count\"                   }                 ]               }             },             \"customWidth\": \"50\",             \"conditionalVisibility\": {               \"parameterName\": \"selectedTab\",               \"comparison\": \"isEqualTo\",               \"value\": \"AADLegacy\"             },             \"name\": \"IP Timebrush\"           },           {             \"type\": 3,             \"content\": {               \"version\": \"KqlItem/1.0\",               \"query\": \"SigninLogs\\r\\n| where ClientAppUsed !contains \\\"Browser\\\" and ClientAppUsed !contains \\\"Mobile Apps and Desktop clients\\\" and ClientAppUsed !contains \\\"Exchange ActiveSync\\\"\\r\\n| summarize Count=count() by IPAddress\\r\\n| order by Count\\r\\n\",               \"size\": 1,               \"title\": \"IP events over time ({AADTimebrushIPAddress:label})\",               \"timeContext\": {                 \"durationMs\": 0               },               \"timeContextFromParameter\": \"AADTimebrushIPAddress\",               \"queryType\": 0,               \"resourceType\": \"microsoft.operationalinsights/workspaces\",               \"visualization\": \"table\",               \"gridSettings\": {                 \"formatters\": [                   {                     \"columnMatch\": \"count_\",                     \"formatter\": 4,                     \"formatOptions\": {                       \"min\": 0,                       \"palette\": \"blue\",                       \"aggregation\": \"Sum\"                     }                   }                 ],                 \"sortBy\": [                   {                     \"itemKey\": \"IPAddress\",                     \"sortOrder\": 2                   }                 ]               },               \"sortBy\": [                 {                   \"itemKey\": \"IPAddress\",                   \"sortOrder\": 2                 }               ]             },             \"customWidth\": \"50\",             \"conditionalVisibility\": {               \"parameterName\": \"selectedTab\",               \"comparison\": \"isEqualTo\",               \"value\": \"AADLegacy\"             },             \"name\": \"query - 26 - Copy\"           },           {             \"type\": 3,             \"content\": {               \"version\": \"KqlItem/1.0\",               \"query\": \"SigninLogs\\r\\n| where ClientAppUsed !contains \\\"Browser\\\" and ClientAppUsed !contains \\\"Mobile Apps and Desktop clients\\\" and ClientAppUsed !contains \\\"Exchange ActiveSync\\\"\\r\\n| summarize count() by ClientAppUsed, UserPrincipalName //bar\",               \"size\": 0,               \"title\": \"Legacy authentications, by authentication type\",               \"timeContext\": {                 \"durationMs\": 604800000               },               \"timeContextFromParameter\": \"TimeRange\",               \"queryType\": 0,               \"resourceType\": \"microsoft.operationalinsights/workspaces\",               \"crossComponentResources\": [                 \"{Workspace}\"               ],               \"gridSettings\": {                 \"formatters\": [                   {                     \"columnMatch\": \"ClientAppUsed\",                     \"formatter\": 5,                     \"formatOptions\": {                       \"showIcon\": true                     }                   },                   {                     \"columnMatch\": \"UserPrincipalName\",                     \"formatter\": 0,                     \"formatOptions\": {                       \"showIcon\": true,                       \"aggregation\": \"Unique\"                     }                   },                   {                     \"columnMatch\": \"count_\",                     \"formatter\": 4,                     \"formatOptions\": {                       \"min\": 0,                       \"palette\": \"gray\",                       \"showIcon\": true,                       \"aggregation\": \"Sum\"                     }                   }                 ],                 \"hierarchySettings\": {                   \"treeType\": 1,                   \"groupBy\": [                     \"ClientAppUsed\"                   ]                 },                 \"labelSettings\": [                   {                     \"columnId\": \"ClientAppUsed\"                   },                   {                     \"columnId\": \"UserPrincipalName\"                   },                   {                     \"columnId\": \"count_\",                     \"label\": \"Count\"                   }                 ]               }             },             \"customWidth\": \"50\",             \"conditionalVisibility\": {               \"parameterName\": \"selectedTab\",               \"comparison\": \"isEqualTo\",               \"value\": \"AADLegacy\"             },             \"name\": \"query - 32\"           },           {             \"type\": 3,             \"content\": {               \"version\": \"KqlItem/1.0\",               \"query\": \"SigninLogs\\r\\n| where ClientAppUsed !contains \\\"Browser\\\" and ClientAppUsed !contains \\\"Mobile Apps and Desktop clients\\\" and ClientAppUsed !contains \\\"Exchange ActiveSync\\\"\\r\\n| summarize count() by tostring(CountryOrRegion=LocationDetails.countryOrRegion), ClientAppUsed //bar\\r\\n| order by count_\\r\\n\",               \"size\": 0,               \"title\": \"Legacy authentications, by country/region\",               \"timeContext\": {                 \"durationMs\": 604800000               },               \"timeContextFromParameter\": \"TimeRange\",               \"queryType\": 0,               \"resourceType\": \"microsoft.operationalinsights/workspaces\",               \"crossComponentResources\": [                 \"{Workspace}\"               ],               \"visualization\": \"table\",               \"gridSettings\": {                 \"formatters\": [                   {                     \"columnMatch\": \"CountryOrRegion\",                     \"formatter\": 5,                     \"formatOptions\": {                       \"showIcon\": true                     }                   },                   {                     \"columnMatch\": \"ClientAppUsed\",                     \"formatter\": 0,                     \"formatOptions\": {                       \"showIcon\": true,                       \"aggregation\": \"Unique\"                     }                   },                   {                     \"columnMatch\": \"count_\",                     \"formatter\": 4,                     \"formatOptions\": {                       \"min\": 0,                       \"palette\": \"purple\",                       \"showIcon\": true,                       \"aggregation\": \"Sum\"                     }                   }                 ],                 \"hierarchySettings\": {                   \"treeType\": 1,                   \"groupBy\": [                     \"CountryOrRegion\"                   ]                 },                 \"labelSettings\": [                   {                     \"columnId\": \"CountryOrRegion\"                   },                   {                     \"columnId\": \"ClientAppUsed\"                   },                   {                     \"columnId\": \"count_\",                     \"label\": \"Count\"                   }                 ]               }             },             \"customWidth\": \"50\",             \"conditionalVisibility\": {               \"parameterName\": \"selectedTab\",               \"comparison\": \"isEqualTo\",               \"value\": \"AADLegacy\"             },             \"name\": \"query - 31\"           },           {             \"type\": 3,             \"content\": {               \"version\": \"KqlItem/1.0\",               \"query\": \"SigninLogs\\r\\n| where ClientAppUsed !contains \\\"Browser\\\" and ClientAppUsed !contains \\\"Mobile Apps and Desktop clients\\\" and ClientAppUsed !contains \\\"Exchange ActiveSync\\\"\\r\\n| extend mergeCountry = toupper(LocationDetails.countryOrRegion)\\r\\n| summarize  IPaddress = make_set(IPAddress), Count=count() by UserPrincipalName,  ClientAppUsed, tostring(CountryOrRegion=mergeCountry) //table\\r\\n| order by Count desc\",               \"size\": 0,               \"title\": \"Legacy authentications details\",               \"timeContext\": {                 \"durationMs\": 604800000               },               \"timeContextFromParameter\": \"TimeRange\",               \"queryType\": 0,               \"resourceType\": \"microsoft.operationalinsights/workspaces\",               \"crossComponentResources\": [                 \"{Workspace}\"               ],               \"gridSettings\": {                 \"formatters\": [                   {                     \"columnMatch\": \"Count\",                     \"formatter\": 8,                     \"formatOptions\": {                       \"palette\": \"coldHot\"                     }                   }                 ],                 \"filter\": true               },               \"sortBy\": []             },             \"conditionalVisibility\": {               \"parameterName\": \"selectedTab\",               \"comparison\": \"isEqualTo\",               \"value\": \"AADLegacy\"             },             \"name\": \"query - 33\"           }         ]       },       \"conditionalVisibility\": {         \"parameterName\": \"selectedTab\",         \"comparison\": \"isEqualTo\",         \"value\": \"AADLegacy\"       },       \"name\": \"group - AAD\"     },     {       \"type\": 12,       \"content\": {         \"version\": \"NotebookGroup/1.0\",         \"groupType\": \"editable\",         \"title\": \"Group: Vulnerable Secure Channel\",         \"items\": [           {             \"type\": 1,             \"content\": {               \"json\": \"### Vulnerable Netlogon Secure Channel Help\\r\\n\\r\\n**Protocol Risk**\\r\\n\\t* An elevation of privilege vulnerability exists when an attacker establishes a vulnerable Netlogon secure channel connection to a domain controller\\r\\n\\t* An attacker who successfully exploited the vulnerability could run a specially crafted application on a device on the network\\r\\n\\r\\n**Auditing Settings**\\r\\n\\t* Apply relevant update from CVE-2020-1472 to enable logging\\r\\n\\t* In Log Analytics/Sentinel, set log collection to include Warning and Errors from the System Event log\\r\\n\\r\\n**Mitigation Planning**\\r\\n\\t* Review All Connections with an Insecure Netlogon Secure Channel\\r\\n\\t* Enforcement Mode is scheduled to be enabled on February 9, 2021\\r\\n\\t* Prior to Enforcement Mode enablement, ensure that all Netlogon clients are upgraded\\r\\n\\t* If upgrade is not possible at this time, grant an exemption in the Group Policy: Domain controller: Allow vulnerable Netlogon secure channel connections\\r\\n\\t* To enter Enforcement Mode ahead of schedule, configure the REG_DWORD FullSecureChannelProtection in key HKEY_LOCAL_MACHINE\\\\SYSTEM\\\\CurrentControlSet\\\\Services\\\\Netlogon\\\\Parameters to a value of 1\\r\\n\\r\\n**Data Filters**\\r\\n\\t* Machine\\r\\n\\t* ClientIP\\r\\n\\t* Status\\r\\n\\r\\n** References   **\\r\\n- [How to manage the changes in Netlogon secure channel connections associated with CVE-2020-1472](https://support.microsoft.com/help/4557222/how-to-manage-the-changes-in-netlogon-secure-channel-connections-assoc)\",               \"style\": \"info\"             },             \"conditionalVisibility\": {               \"parameterName\": \"Help\",               \"comparison\": \"isEqualTo\",               \"value\": \"Yes\"             },             \"name\": \"text - 9 - Copy\"           },           {             \"type\": 3,             \"content\": {               \"version\": \"KqlItem/1.0\",               \"query\": \"let scEvents = dynamic([5827, 5828, 5829, 5830, 5831]);\\r\\nEvent\\r\\n| where EventID in (scEvents)\\r\\n| where EventLog =~ \\\"System\\\" and Source =~ \\\"NETLOGON\\\"\\r\\n| extend Status = case(EventID == 5827 or EventID == 5828, \\\"Connection Denied\\\", EventID == 5829, \\\"Connection Allowed - Enforcement Mode Off\\\", EventID == 5830 or EventID == 5831, \\\"Connection Allowed - Policy\\\", \\\"Unknown\\\")\\r\\n| summarize Count=count() by Status\\r\\n| sort by Count desc\",               \"size\": 4,               \"title\": \"Secure Channel Status - click to filter\",               \"timeContext\": {                 \"durationMs\": 604800000               },               \"timeContextFromParameter\": \"TimeRange\",               \"exportFieldName\": \"Status\",               \"exportParameterName\": \"Status\",               \"exportDefaultValue\": \"All\",               \"queryType\": 0,               \"resourceType\": \"microsoft.operationalinsights/workspaces\",               \"visualization\": \"tiles\",               \"tileSettings\": {                 \"showBorder\": false,                 \"titleContent\": {                   \"columnMatch\": \"Status\",                   \"formatter\": 1                 },                 \"leftContent\": {                   \"columnMatch\": \"Count\",                   \"formatter\": 12,                   \"formatOptions\": {                     \"palette\": \"auto\"                   },                   \"numberFormat\": {                     \"unit\": 17,                     \"options\": {                       \"maximumSignificantDigits\": 3,                       \"maximumFractionDigits\": 2                     }                   }                 }               }             },             \"customWidth\": \"50\",             \"name\": \"query - 4\"           },           {             \"type\": 3,             \"content\": {               \"version\": \"KqlItem/1.0\",               \"query\": \"let scEvents = dynamic([5827, 5828, 5829, 5830, 5831]);\\r\\nEvent\\r\\n| where EventID in (scEvents)\\r\\n| where EventLog =~ \\\"System\\\" and Source =~ \\\"NETLOGON\\\"\\r\\n| extend Status = case(EventID == 5827 or EventID == 5828, \\\"Connection Denied\\\", EventID == 5829, \\\"Connection Allowed - Enforcement Mode Off\\\", EventID == 5830 or EventID == 5831, \\\"Connection Allowed - Policy\\\", \\\"Unknown\\\")\\r\\n| summarize Count=count() by bin(TimeGenerated, {TimeRange:grain}), Status\",               \"size\": 1,               \"title\": \"Secure Channel by Time - Select Time Range\",               \"timeContext\": {                 \"durationMs\": 604800000               },               \"timeContextFromParameter\": \"TimeRange\",               \"timeBrushParameterName\": \"SCTimeBrush\",               \"queryType\": 0,               \"resourceType\": \"microsoft.operationalinsights/workspaces\",               \"visualization\": \"timechart\"             },             \"customWidth\": \"50\",             \"name\": \"query - 8\"           },           {             \"type\": 1,             \"content\": {               \"json\": \"### Machine Accounts \\r\\n---\"             },             \"name\": \"text - 5\"           },           {             \"type\": 3,             \"content\": {               \"version\": \"KqlItem/1.0\",               \"query\": \"let scEvents = dynamic([5827, 5829, 5830]);\\r\\nEvent\\r\\n| where TimeGenerated between({SCTimeBrush:start}..({SCTimeBrush:end}+{TimeRange:grain}))\\r\\n| where EventID in (scEvents)\\r\\n| where EventLog =~ \\\"System\\\" and Source =~ \\\"NETLOGON\\\"\\r\\n| parse ParameterXml with \\\"\u003cParam\u003e\\\" Machine \\\"\u003c/P\\\" * \\\"\u003cParam\u003e\\\" Domain \\\"\u003c/P\\\" * \\\"\u003cParam\u003e\\\" AccountType \\\"\u003c/P\\\" * \\\"\u003cParam\u003e\\\" OperatingSystem \\\"\u003c/P\\\" *\\r\\n| extend Status = case(EventID == 5827 or EventID == 5828, \\\"Connection Denied\\\", EventID == 5829, \\\"Connection Allowed - Enforcement Mode Off\\\", EventID == 5830 or EventID == 5831, \\\"Connection Allowed - Policy\\\", \\\"Unknown\\\")\\r\\n| where Status =~ \\\"{Status}\\\" or \\\"{Status}\\\" =~ \\\"All\\\"\\r\\n| summarize Count=count() by Machine, Status\\r\\n| order by Count desc\",               \"size\": 0,               \"title\": \"By Machine - click to filter\",               \"exportFieldName\": \"Machine\",               \"exportParameterName\": \"Machine\",               \"exportDefaultValue\": \"All\",               \"queryType\": 0,               \"resourceType\": \"microsoft.operationalinsights/workspaces\",               \"crossComponentResources\": [                 \"{Workspace}\"               ],               \"visualization\": \"table\",               \"gridSettings\": {                 \"formatters\": [                   {                     \"columnMatch\": \"Count\",                     \"formatter\": 4,                     \"formatOptions\": {                       \"min\": 1,                       \"palette\": \"orange\"                     }                   }                 ]               },               \"sortBy\": []             },             \"customWidth\": \"30\",             \"name\": \"By Machine\"           },           {             \"type\": 3,             \"content\": {               \"version\": \"KqlItem/1.0\",               \"query\": \"let scEvents = dynamic([5827, 5829, 5830]);\\r\\nEvent\\r\\n| where TimeGenerated between({SCTimeBrush:start}..({SCTimeBrush:end}+{TimeRange:grain}))\\r\\n| where EventID in (scEvents)\\r\\n| where EventLog =~ \\\"System\\\" and Source =~ \\\"NETLOGON\\\"\\r\\n| parse ParameterXml with \\\"\u003cParam\u003e\\\" Machine \\\"\u003c/P\\\" * \\\"\u003cParam\u003e\\\" Domain \\\"\u003c/P\\\" * \\\"\u003cParam\u003e\\\" AccountType \\\"\u003c/P\\\" * \\\"\u003cParam\u003e\\\" OperatingSystem \\\"\u003c/P\\\" *\\r\\n| where Machine =~ \\\"{Machine}\\\" or \\\"{Machine}\\\" =~ \\\"All\\\"\\r\\n| extend Status = case(EventID == 5827 or EventID == 5828, \\\"Connection Denied\\\", EventID == 5829, \\\"Connection Allowed - Enforcement Mode Off\\\", EventID == 5830 or EventID == 5831, \\\"Connection Allowed - Policy\\\", \\\"Unknown\\\")\\r\\n| where Status =~ \\\"{Status}\\\" or \\\"{Status}\\\" =~ \\\"All\\\"\\r\\n| summarize FirstOccurance=min(TimeGenerated), LastOccurance=max(TimeGenerated), Count=count() by DomainController=Computer, Machine, Domain, AccountType, OperatingSystem, EventID, Status\\r\\n\",               \"size\": 0,               \"title\": \"Machine Account Connections\",               \"queryType\": 0,               \"resourceType\": \"microsoft.operationalinsights/workspaces\",               \"crossComponentResources\": [                 \"{Workspace}\"               ]             },             \"customWidth\": \"70\",             \"name\": \"query - 0\"           },           {             \"type\": 1,             \"content\": {               \"json\": \"### Trust Accounts\\r\\n---\"             },             \"name\": \"text - 6\"           },           {             \"type\": 3,             \"content\": {               \"version\": \"KqlItem/1.0\",               \"query\": \"let scEvents = dynamic([5828, 5831]);\\r\\nEvent\\r\\n| where TimeGenerated between({SCTimeBrush:start}..({SCTimeBrush:end}+{TimeRange:grain}))\\r\\n| where EventID in (scEvents)\\r\\n| where EventLog =~ \\\"System\\\" and Source =~ \\\"NETLOGON\\\"\\r\\n| parse ParameterXml with \\\"\u003cParam\u003e\\\" AccountType \\\"\u003c/P\\\" * \\\"\u003cParam\u003e\\\" TrustName \\\"\u003c/P\\\" * \\\"\u003cParam\u003e\\\" TrustTarget \\\"\u003c/P\\\" * \\\"\u003cParam\u003e\\\" ClientIP \\\"\u003c/P\\\" *\\r\\n| extend Status = case(EventID == 5827 or EventID == 5828, \\\"Connection Denied\\\", EventID == 5829, \\\"Connection Allowed - Enforcement Mode Off\\\", EventID == 5830 or EventID == 5831, \\\"Connection Allowed - Policy\\\", \\\"Unknown\\\")\\r\\n| where Status =~ \\\"{Status}\\\" or \\\"{Status}\\\" =~ \\\"All\\\"\\r\\n| summarize Count=count() by ClientIP, Status\\r\\n| order by Count desc\",               \"size\": 0,               \"title\": \"By Trust Account - click to filter\",               \"exportFieldName\": \"ClientIP\",               \"exportParameterName\": \"ClientIP\",               \"exportDefaultValue\": \"All\",               \"queryType\": 0,               \"resourceType\": \"microsoft.operationalinsights/workspaces\",               \"gridSettings\": {                 \"formatters\": [                   {                     \"columnMatch\": \"Count\",                     \"formatter\": 4,                     \"formatOptions\": {                       \"min\": 1,                       \"palette\": \"orange\"                     }                   }                 ]               }             },             \"customWidth\": \"30\",             \"name\": \"query - 7\"           },           {             \"type\": 3,             \"content\": {               \"version\": \"KqlItem/1.0\",               \"query\": \"let scEvents = dynamic([5828, 5831]);\\r\\nEvent\\r\\n| where TimeGenerated between({SCTimeBrush:start}..({SCTimeBrush:end}+{TimeRange:grain}))\\r\\n| where EventID in (scEvents)\\r\\n| where EventLog =~ \\\"System\\\" and Source =~ \\\"NETLOGON\\\"\\r\\n| parse ParameterXml with \\\"\u003cParam\u003e\\\" AccountType \\\"\u003c/P\\\" * \\\"\u003cParam\u003e\\\" TrustName \\\"\u003c/P\\\" * \\\"\u003cParam\u003e\\\" TrustTarget \\\"\u003c/P\\\" * \\\"\u003cParam\u003e\\\" ClientIP \\\"\u003c/P\\\" *\\r\\n| where ClientIP =~ \\\"{ClientIP}\\\" or \\\"{ClientIP}\\\" =~ \\\"All\\\"\\r\\n| extend Status = case(EventID == 5827 or EventID == 5828, \\\"Connection Denied\\\", EventID == 5829, \\\"Connection Allowed - Enforcement Mode Off\\\", EventID == 5830 or EventID == 5831, \\\"Connection Allowed - Policy\\\", \\\"Unknown\\\")\\r\\n| where Status =~ \\\"{Status}\\\" or \\\"{Status}\\\" =~ \\\"All\\\"\\r\\n| summarize FirstOccurance=min(TimeGenerated), LastOccurance=max(TimeGenerated), Count=count() by DomainController=Computer, AccountType, TrustName, TrustTarget, ClientIP, EventID, Status\",               \"size\": 0,               \"title\": \"Trust Account Connections\",               \"queryType\": 0,               \"resourceType\": \"microsoft.operationalinsights/workspaces\",               \"crossComponentResources\": [                 \"{Workspace}\"               ],               \"gridSettings\": {                 \"sortBy\": [                   {                     \"itemKey\": \"ClientIP\",                     \"sortOrder\": 1                   }                 ]               },               \"sortBy\": [                 {                   \"itemKey\": \"ClientIP\",                   \"sortOrder\": 1                 }               ]             },             \"customWidth\": \"70\",             \"name\": \"query - 0 - Copy\"           }         ]       },       \"conditionalVisibility\": {         \"parameterName\": \"selectedTab\",         \"comparison\": \"isEqualTo\",         \"value\": \"NetlogonSC\"       },       \"name\": \"NetlogonSC\"     }   ],   \"fromTemplateId\": \"sentinel-UserWorkbook\",   \"$schema\": \"https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json\" }",
                                             "category":  "workbook",
                                             "version":  "1.0",
                                             "sourceId":  "[resourceid('Microsoft.OperationalInsights/workspaces',parameters('workspacename'))]"
                                         },
                          "type":  "microsoft.insights/workbooks",
                          "kind":  "shared",
                          "apiVersion":  "2018-06-17-preview",
                          "location":  "[parameters('location')]"
                      },
                      {
                          "name":  "[parameters('security - SecurityStatus_id')]",
                          "properties":  {
                                             "displayName":  "security - CEF Security Status",
                                             "serializedData":  "{   \"version\": \"Notebook/1.0\",   \"items\": [     {       \"type\": 9,       \"content\": {         \"version\": \"KqlParameterItem/1.0\",         \"crossComponentResources\": [           \"value::selected\"         ],         \"parameters\": [           {             \"id\": \"688dc7cb-bea3-41ae-ae94-32d22e09568c\",             \"version\": \"KqlParameterItem/1.0\",             \"name\": \"DefaultWorkspace\",             \"type\": 5,             \"isRequired\": true,             \"value\": \"value::1\",             \"isHiddenWhenLocked\": true,             \"typeSettings\": {               \"resourceTypeFilter\": {                 \"microsoft.operationalinsights/workspaces\": true               },               \"additionalResourceOptions\": [                 \"value::1\"               ]             }           },           {             \"id\": \"c11b5651-cf86-4865-b23d-9ecc4f16b712\",             \"version\": \"KqlParameterItem/1.0\",             \"name\": \"ContextFree\",             \"type\": 1,             \"query\": \"{\\\"version\\\":\\\"1.0.0\\\",\\\"content\\\":\\\"\\\\\\\"{DefaultWorkspace}\\\\\\\"\\\"}\",             \"isHiddenWhenLocked\": true,             \"queryType\": 8           },           {             \"id\": \"bbbc300a-6f91-4b2b-b4b5-842b4bf8577a\",             \"version\": \"KqlParameterItem/1.0\",             \"name\": \"Selection\",             \"type\": 1,             \"query\": \"where type =~ 'microsoft.operationalinsights/workspaces'\\r\\n| extend match = strcat(\\\"'\\\", id, \\\"'\\\") =~ \\\"{DefaultWorkspace:value}\\\"\\r\\n| order by match desc, name asc\\r\\n| take 1\\r\\n| project value = tostring(pack('sub', subscriptionId, 'rg', resourceGroup, 'ws', id))\",             \"crossComponentResources\": [               \"value::selected\"             ],             \"isHiddenWhenLocked\": true,             \"queryType\": 1,             \"resourceType\": \"microsoft.resourcegraph/resources\"           }         ],         \"style\": \"above\",         \"queryType\": 1,         \"resourceType\": \"microsoft.resourcegraph/resources\"       },       \"conditionalVisibility\": {         \"parameterName\": \"_\",         \"comparison\": \"isEqualTo\",         \"value\": \"_\"       },       \"name\": \"parameters - 0\"     },     {       \"type\": 1,       \"content\": {         \"json\": \"# Computer Security Status\\r\\n\u003cbr\u003e\\r\\n### This report shows various security status messages from Azure Resource Graph and Log Analytics\"       },       \"conditionalVisibility\": {         \"parameterName\": \"ContextFree\",         \"comparison\": \"isEqualTo\",         \"value\": \"value::1\"       },       \"name\": \"text - 1\"     },     {       \"type\": 9,       \"content\": {         \"version\": \"KqlParameterItem/1.0\",         \"crossComponentResources\": [           \"{Workspaces}\"         ],         \"parameters\": [           {             \"id\": \"1db5ee15-fe52-458b-91d1-7ee39d8c2cd3\",             \"version\": \"KqlParameterItem/1.0\",             \"name\": \"Subscriptions\",             \"type\": 6,             \"isRequired\": true,             \"query\": \"summarize by subscriptionId\\r\\n| project value = strcat('/subscriptions/', subscriptionId), label = subscriptionId, selected = iff(subscriptionId =~ todynamic('{Selection}').sub, true, false)\",             \"crossComponentResources\": [               \"value::selected\"             ],             \"typeSettings\": {               \"additionalResourceOptions\": []             },             \"queryType\": 1,             \"resourceType\": \"microsoft.resourcegraph/resources\"           },           {             \"id\": \"9732eff8-fb57-4cbd-8ade-5ae746f33760\",             \"version\": \"KqlParameterItem/1.0\",             \"name\": \"Workspaces\",             \"type\": 5,             \"isRequired\": true,             \"query\": \"resources\\r\\n| where type =~ 'microsoft.operationalinsights/workspaces'\\r\\n| summarize by id, name\\r\\n| project id, selected = iff(id =~ todynamic('{Selection}').ws, true, false)\",             \"crossComponentResources\": [               \"{Subscriptions}\"             ],             \"value\": \"/subscriptions/\u003csubs_ID\u003e/resourcegroups/\u003crg_name\u003e/providers/microsoft.operationalinsights/workspaces/\u003cworkspace_name\u003e\",             \"typeSettings\": {               \"resourceTypeFilter\": {                 \"microsoft.operationalinsights/workspaces\": true               },               \"additionalResourceOptions\": []             },             \"queryType\": 1,             \"resourceType\": \"microsoft.resourcegraph/resources\"           },           {             \"id\": \"5f8cce4b-9c4c-47da-8683-7e5ccc9faed3\",             \"version\": \"KqlParameterItem/1.0\",             \"name\": \"TimeRange\",             \"type\": 4,             \"typeSettings\": {               \"selectableValues\": [                 {                   \"durationMs\": 300000,                   \"createdTime\": \"2018-10-04T22:01:18.372Z\",                   \"isInitialTime\": false,                   \"grain\": 1,                   \"useDashboardTimeRange\": false                 },                 {                   \"durationMs\": 900000,                   \"createdTime\": \"2018-10-04T22:01:18.372Z\",                   \"isInitialTime\": false,                   \"grain\": 1,                   \"useDashboardTimeRange\": false                 },                 {                   \"durationMs\": 1800000,                   \"createdTime\": \"2018-10-04T22:01:18.372Z\",                   \"isInitialTime\": false,                   \"grain\": 1,                   \"useDashboardTimeRange\": false                 },                 {                   \"durationMs\": 3600000,                   \"createdTime\": \"2018-10-04T22:01:18.372Z\",                   \"isInitialTime\": false,                   \"grain\": 1,                   \"useDashboardTimeRange\": false                 },                 {                   \"durationMs\": 14400000,                   \"createdTime\": \"2018-10-04T22:01:18.374Z\",                   \"isInitialTime\": false,                   \"grain\": 1,                   \"useDashboardTimeRange\": false                 },                 {                   \"durationMs\": 43200000,                   \"createdTime\": \"2018-10-04T22:01:18.374Z\",                   \"isInitialTime\": false,                   \"grain\": 1,                   \"useDashboardTimeRange\": false                 },                 {                   \"durationMs\": 86400000,                   \"createdTime\": \"2018-10-04T22:01:18.374Z\",                   \"isInitialTime\": false,                   \"grain\": 1,                   \"useDashboardTimeRange\": false                 },                 {                   \"durationMs\": 172800000,                   \"createdTime\": \"2018-10-04T22:01:18.374Z\",                   \"isInitialTime\": false,                   \"grain\": 1,                   \"useDashboardTimeRange\": false                 },                 {                   \"durationMs\": 259200000,                   \"createdTime\": \"2018-10-04T22:01:18.375Z\",                   \"isInitialTime\": false,                   \"grain\": 1,                   \"useDashboardTimeRange\": false                 },                 {                   \"durationMs\": 604800000,                   \"createdTime\": \"2018-10-04T22:01:18.375Z\",                   \"isInitialTime\": false,                   \"grain\": 1,                   \"useDashboardTimeRange\": false                 },                 {                   \"durationMs\": 1209600000,                   \"createdTime\": \"2018-10-04T22:01:18.375Z\",                   \"isInitialTime\": false,                   \"grain\": 1,                   \"useDashboardTimeRange\": false                 },                 {                   \"durationMs\": 2592000000,                   \"createdTime\": \"2018-10-04T22:01:18.375Z\",                   \"isInitialTime\": false,                   \"grain\": 1,                   \"useDashboardTimeRange\": false                 },                 {                   \"durationMs\": 5184000000,                   \"createdTime\": \"2018-10-04T22:01:18.375Z\",                   \"isInitialTime\": false,                   \"grain\": 1,                   \"useDashboardTimeRange\": false                 },                 {                   \"durationMs\": 7776000000,                   \"createdTime\": \"2018-10-04T22:01:18.375Z\",                   \"isInitialTime\": false,                   \"grain\": 1,                   \"useDashboardTimeRange\": false                 }               ],               \"allowCustom\": true             },             \"value\": {               \"durationMs\": 604800000             }           },           {             \"id\": \"d6de19ff-cde4-41c2-9fba-b441312ea5c9\",             \"version\": \"KqlParameterItem/1.0\",             \"name\": \"Test\",             \"type\": 1,             \"query\": \"Perf\\r\\n| where TimeGenerated {TimeRange}\\r\\n| take 1\",             \"crossComponentResources\": [               \"{Workspaces}\"             ],             \"isHiddenWhenLocked\": true,             \"queryType\": 0,             \"resourceType\": \"microsoft.operationalinsights/workspaces\"           },           {             \"id\": \"4e5f340e-9ca8-4f16-aa10-48d30b486cce\",             \"version\": \"KqlParameterItem/1.0\",             \"name\": \"Computer\",             \"type\": 5,             \"query\": \"resources\\r\\n| where type == \\\"microsoft.compute/virtualmachines\\\" or type == \\\"microsoft.hybridcompute/machines\\\"\\r\\n| project name\",             \"crossComponentResources\": [               \"{Workspaces}\"             ],             \"value\": \"default\",             \"typeSettings\": {               \"additionalResourceOptions\": []             },             \"queryType\": 1,             \"resourceType\": \"microsoft.resourcegraph/resources\"           }         ],         \"style\": \"above\",         \"queryType\": 1,         \"resourceType\": \"microsoft.resourcegraph/resources\"       },       \"name\": \"parameters - 2\"     },     {       \"type\": 1,       \"content\": {         \"json\": \"??A subscription has not yet been selected. Select a subscription under the `Subscriptions` dropdown or refresh the workbook.\"       },       \"conditionalVisibility\": {         \"parameterName\": \"Subscriptions\",         \"comparison\": \"isEqualTo\",         \"value\": null       },       \"name\": \"text - 29\"     },     {       \"type\": 1,       \"content\": {         \"json\": \"---\"       },       \"name\": \"text - 4\"     },     {       \"type\": 11,       \"content\": {         \"version\": \"LinkItem/1.0\",         \"style\": \"tabs\",         \"links\": [           {             \"cellValue\": \"selectedTab\",             \"linkTarget\": \"parameter\",             \"linkLabel\": \"Status\",             \"subTarget\": \"Status\",             \"style\": \"link\"           },           {             \"cellValue\": \"selectedTab\",             \"linkTarget\": \"parameter\",             \"linkLabel\": \"Events\",             \"subTarget\": \"Events\",             \"style\": \"link\"           },           {             \"cellValue\": \"selectedTab\",             \"linkTarget\": \"parameter\",             \"linkLabel\": \"Azure Arc\",             \"subTarget\": \"Arc\",             \"style\": \"link\"           }         ]       },       \"name\": \"links - 20\"     },     {       \"type\": 3,       \"content\": {         \"version\": \"KqlItem/1.0\",         \"query\": \"securityresources\\r\\n| where type == \\\"microsoft.security/securitystatuses\\\" or type == \\\"microsoft.security/securitystatuses/servers\\\" or type == \\\"microsoft.security/assessments\\\" \\r\\n//| where name startswith '{Computer}'\\r\\n| extend compute = tostring(properties.type)\\r\\n| where compute =~\\\"virtualmachine\\\"\\r\\n| summarize count() by name\",         \"size\": 4,         \"title\": \"Count of Computers with Securtity status info\",         \"queryType\": 1,         \"resourceType\": \"microsoft.resourcegraph/resources\",         \"crossComponentResources\": [           \"{Workspaces}\"         ],         \"visualization\": \"piechart\",         \"chartSettings\": {           \"showMetrics\": false         }       },       \"customWidth\": \"50\",       \"name\": \"query - 20 - Copy\"     },     {       \"type\": 3,       \"content\": {         \"version\": \"KqlItem/1.0\",         \"query\": \"union Syslog,SecurityEvent,CommonSecurityLog \\r\\n| summarize count() by Type\",         \"size\": 4,         \"title\": \"Count of log entries by Type\",         \"timeContext\": {           \"durationMs\": 0         },         \"timeContextFromParameter\": \"TimeRange\",         \"queryType\": 0,         \"resourceType\": \"microsoft.operationalinsights/workspaces\",         \"crossComponentResources\": [           \"{Workspaces}\"         ],         \"visualization\": \"piechart\"       },       \"customWidth\": \"50\",       \"name\": \"query - 20\"     },     {       \"type\": 3,       \"content\": {         \"version\": \"KqlItem/1.0\",         \"query\": \"securityresources\\r\\n| where type == \\\"microsoft.security/securitystatuses\\\" or type == \\\"microsoft.security/securitystatuses/servers\\\" or type == \\\"microsoft.security/assessments\\\" \\r\\n| where name startswith '{Computer}'\\r\\n| extend p=array_length(properties.resourceDetails) \\r\\n| extend compute = tostring(properties.type)\\r\\n| where compute =~\\\"virtualmachine\\\"\\r\\n| mvexpand prop=properties.resourceDetails\\r\\n| project ComputerName = name, Resource= prop.name, Status = prop.value \",         \"size\": 0,         \"title\": \"Security Status for {Computer}\",         \"queryType\": 1,         \"resourceType\": \"microsoft.resourcegraph/resources\",         \"crossComponentResources\": [           \"{Workspaces}\"         ],         \"gridSettings\": {           \"formatters\": [             {               \"columnMatch\": \"ComputerName\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"Resource\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"Status\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             }           ]         }       },       \"conditionalVisibility\": {         \"parameterName\": \"selectedTab\",         \"comparison\": \"isEqualTo\",         \"value\": \"Status\"       },       \"name\": \"query - 7\"     },     {       \"type\": 3,       \"content\": {         \"version\": \"KqlItem/1.0\",         \"query\": \"securityresources\\r\\n| where type == \\\"microsoft.security/assessments\\\"\\r\\n| where properties contains '{Computer}'\\r\\n| project Resource = properties.displayName, Status = trim(@\\\"[^\\\\w]+\\\",tostring(split(properties.status,\\\":\\\",1))), Location =  trim(@\\\"[^\\\\w]+\\\",tostring(split(properties.resourceDetails,\\\":\\\",1)))\\r\\n| extend Status  = iif(Status has \\\",\\\",trim(@\\\"[^\\\\w]+\\\",tostring(split(Status,\\\",\\\",0))),Status)\\r\\n| extend Location = iif(Location has \\\"\\\\\\\\\\\",trim(@\\\"[^\\\\w]+\\\",tostring(split(Location,\\\"\\\\\\\\\\\",0))),Location)\\r\\n| summarize count() by Status, tostring(Resource), Location\",         \"size\": 1,         \"title\": \"Security Asessment findings for {Computer}\",         \"queryType\": 1,         \"resourceType\": \"microsoft.resourcegraph/resources\",         \"crossComponentResources\": [           \"{Workspaces}\"         ],         \"visualization\": \"piechart\",         \"gridSettings\": {           \"filter\": true         }       },       \"conditionalVisibility\": {         \"parameterName\": \"selectedTab\",         \"comparison\": \"isEqualTo\",         \"value\": \"Status\"       },       \"name\": \"query - 18\"     },     {       \"type\": 3,       \"content\": {         \"version\": \"KqlItem/1.0\",         \"query\": \"securityresources\\r\\n| where type == \\\"microsoft.security/assessments\\\"\\r\\n| where properties contains '{Computer}'\\r\\n| project Resource = properties.displayName, Status = trim(@\\\"[^\\\\w]+\\\",tostring(split(properties.status,\\\":\\\",1))), Location =  trim(@\\\"[^\\\\w]+\\\",tostring(split(properties.resourceDetails,\\\":\\\",1)))\\r\\n| extend Status   = iif(Status has \\\",\\\",trim(@\\\"[^\\\\w]+\\\",tostring(split(Status,\\\",\\\",0))),Status)\\r\\n| extend Location = iif(Location has \\\"\\\\\\\\\\\",trim(@\\\"[^\\\\w]+\\\",tostring(split(Location,\\\"\\\\\\\\\\\",0))),Location)\\r\\n| summarize count() by Status, tostring(Resource), Location\\r\\n| order by count_ desc\",         \"size\": 0,         \"title\": \"Security Asessment findings for {Computer}\",         \"queryType\": 1,         \"resourceType\": \"microsoft.resourcegraph/resources\",         \"crossComponentResources\": [           \"{Workspaces}\"         ],         \"gridSettings\": {           \"filter\": true,           \"sortBy\": [             {               \"itemKey\": \"Status\",               \"sortOrder\": 2             }           ]         },         \"sortBy\": [           {             \"itemKey\": \"Status\",             \"sortOrder\": 2           }         ]       },       \"conditionalVisibility\": {         \"parameterName\": \"selectedTab\",         \"comparison\": \"isEqualTo\",         \"value\": \"Status\"       },       \"name\": \"query - 18 - Copy\"     },     {       \"type\": 3,       \"content\": {         \"version\": \"KqlItem/1.0\",         \"query\": \"SecurityEvent\\r\\n| where Computer startswith \\\"{Computer}\\\"\\r\\n| summarize count() by Activity\\r\\n\",         \"size\": 1,         \"title\": \"Securtity Events for: {Computer} \",         \"timeContext\": {           \"durationMs\": 0         },         \"timeContextFromParameter\": \"TimeRange\",         \"queryType\": 0,         \"resourceType\": \"microsoft.operationalinsights/workspaces\",         \"crossComponentResources\": [           \"{Workspaces}\"         ],         \"visualization\": \"piechart\",         \"tileSettings\": {           \"showBorder\": false,           \"titleContent\": {             \"columnMatch\": \"Activity\",             \"formatter\": 1           },           \"leftContent\": {             \"columnMatch\": \"count_\",             \"formatter\": 12,             \"formatOptions\": {               \"palette\": \"auto\"             },             \"numberFormat\": {               \"unit\": 17,               \"options\": {                 \"maximumSignificantDigits\": 3,                 \"maximumFractionDigits\": 2               }             }           }         },         \"graphSettings\": {           \"type\": 0,           \"topContent\": {             \"columnMatch\": \"Activity\",             \"formatter\": 1,             \"formatOptions\": {               \"showIcon\": true             }           },           \"centerContent\": {             \"columnMatch\": \"count_\",             \"formatter\": 1,             \"formatOptions\": {               \"showIcon\": true             },             \"numberFormat\": {               \"unit\": 17,               \"options\": {                 \"maximumSignificantDigits\": 3,                 \"maximumFractionDigits\": 2               }             }           },           \"nodeIdField\": \"Activity\",           \"nodeSize\": null,           \"staticNodeSize\": 100,           \"colorSettings\": null,           \"hivesMargin\": 5         }       },       \"conditionalVisibility\": {         \"parameterName\": \"selectedTab\",         \"comparison\": \"isEqualTo\",         \"value\": \"Events\"       },       \"name\": \"query - 8\"     },     {       \"type\": 3,       \"content\": {         \"version\": \"KqlItem/1.0\",         \"query\": \"Syslog\\r\\n| where Computer startswith \\\"{Computer}\\\"\\r\\n| summarize count() by Facility, SeverityLevel\\r\\n\",         \"size\": 1,         \"title\": \"Syslog for: {Computer}\",         \"timeContext\": {           \"durationMs\": 0         },         \"timeContextFromParameter\": \"TimeRange\",         \"queryType\": 0,         \"resourceType\": \"microsoft.operationalinsights/workspaces\",         \"crossComponentResources\": [           \"{Workspaces}\"         ],         \"visualization\": \"piechart\"       },       \"conditionalVisibility\": {         \"parameterName\": \"selectedTab\",         \"comparison\": \"isEqualTo\",         \"value\": \"Events\"       },       \"name\": \"query - 10\"     },     {       \"type\": 3,       \"content\": {         \"version\": \"KqlItem/1.0\",         \"query\": \"CommonSecurityLog\\r\\n| where Computer startswith \\\"{Computer}\\\"\\r\\n| summarize count() by DeviceVendor, DeviceEventClassID, Message\\r\\n\",         \"size\": 1,         \"title\": \"CommonSecurityEvent (CEF) for: {Computer}\",         \"timeContext\": {           \"durationMs\": 0         },         \"timeContextFromParameter\": \"TimeRange\",         \"queryType\": 0,         \"resourceType\": \"microsoft.operationalinsights/workspaces\",         \"crossComponentResources\": [           \"{Workspaces}\"         ],         \"visualization\": \"piechart\"       },       \"conditionalVisibility\": {         \"parameterName\": \"selectedTab\",         \"comparison\": \"isEqualTo\",         \"value\": \"Events\"       },       \"name\": \"query - 11\"     },     {       \"type\": 3,       \"content\": {         \"version\": \"KqlItem/1.0\",         \"query\": \"union isfuzzy=true     (W3CIISLog\\r\\n| extend TrafficDirection = \\\"InboundOrUnknown\\\", Country=RemoteIPCountry, Latitude=RemoteIPLatitude, Longitude=RemoteIPLongitude),     (DnsEvents\\r\\n| extend TrafficDirection = \\\"InboundOrUnknown\\\", Country= RemoteIPCountry, Latitude = RemoteIPLatitude, Longitude = RemoteIPLongitude),     (WireData\\r\\n| extend TrafficDirection = iff(Direction != \\\"Outbound\\\",\\\"InboundOrUnknown\\\", \\\"Outbound\\\"), Country=RemoteIPCountry, Latitude=RemoteIPLatitude, Longitude=RemoteIPLongitude),     (WindowsFirewall\\r\\n| extend TrafficDirection = iff(CommunicationDirection != \\\"SEND\\\",\\\"InboundOrUnknown\\\", \\\"Outbound\\\"), Country=MaliciousIPCountry, Latitude=MaliciousIPLatitude, Longitude=MaliciousIPLongitude),     (CommonSecurityLog\\r\\n| extend TrafficDirection = iff(CommunicationDirection != \\\"Outbound\\\",\\\"InboundOrUnknown\\\", \\\"Outbound\\\"), Country=MaliciousIPCountry, Latitude=MaliciousIPLatitude, Longitude=MaliciousIPLongitude, Confidence=ThreatDescription, Description=ThreatDescription),     (VMConnection\\r\\n| where Type == \\\"VMConnection\\\"\\r\\n| extend TrafficDirection = iff(Direction != \\\"outbound\\\",\\\"InboundOrUnknown\\\", \\\"Outbound\\\"), Country=RemoteCountry, Latitude=RemoteLatitude, Longitude=RemoteLongitude)\\r\\n| where isnotempty(MaliciousIP) and isnotempty(Country) and isnotempty(Latitude) and isnotempty(Longitude)\\r\\n| where Computer startswith \\\"{Computer}\\\"\\r\\n| summarize MaliciousIPcount = count(MaliciousIP) by Country//, Latitude, Longitude\\r\\n| order by MaliciousIPcount desc\\r\\n| top 10 by Country\\r\\n\",         \"size\": 0,         \"title\": \"Potential Locations for: {Computer}\",         \"timeContext\": {           \"durationMs\": 0         },         \"timeContextFromParameter\": \"TimeRange\",         \"queryType\": 0,         \"resourceType\": \"microsoft.operationalinsights/workspaces\",         \"crossComponentResources\": [           \"{Workspaces}\"         ],         \"visualization\": \"map\",         \"gridSettings\": {           \"sortBy\": [             {               \"itemKey\": \"MaliciousIPcount\",               \"sortOrder\": 2             }           ]         },         \"sortBy\": [           {             \"itemKey\": \"MaliciousIPcount\",             \"sortOrder\": 2           }         ],         \"mapSettings\": {           \"locInfo\": \"CountryRegion\",           \"locInfoColumn\": \"Country\",           \"latitude\": \"Latitude\",           \"longitude\": \"Longitude\",           \"sizeSettings\": \"MaliciousIPcount\",           \"sizeAggregation\": \"Sum\",           \"defaultSize\": 0,           \"labelSettings\": \"MaliciousIP\",           \"legendAggregation\": \"Sum\",           \"itemColorSettings\": {             \"nodeColorField\": \"MaliciousIPcount\",             \"colorAggregation\": \"Sum\",             \"type\": \"heatmap\",             \"heatmapPalette\": \"greenRed\"           }         }       },       \"conditionalVisibility\": {         \"parameterName\": \"selectedTab\",         \"comparison\": \"isEqualTo\",         \"value\": \"Events\"       },       \"name\": \"query - 14\"     },     {       \"type\": 3,       \"content\": {         \"version\": \"KqlItem/1.0\",         \"query\": \"union isfuzzy=true     (W3CIISLog\\r\\n| extend TrafficDirection = \\\"InboundOrUnknown\\\", Country=RemoteIPCountry, Latitude=RemoteIPLatitude, Longitude=RemoteIPLongitude),     (DnsEvents\\r\\n| extend TrafficDirection = \\\"InboundOrUnknown\\\", Country= RemoteIPCountry, Latitude = RemoteIPLatitude, Longitude = RemoteIPLongitude),     (WireData\\r\\n| extend TrafficDirection = iff(Direction != \\\"Outbound\\\",\\\"InboundOrUnknown\\\", \\\"Outbound\\\"), Country=RemoteIPCountry, Latitude=RemoteIPLatitude, Longitude=RemoteIPLongitude),     (WindowsFirewall\\r\\n| extend TrafficDirection = iff(CommunicationDirection != \\\"SEND\\\",\\\"InboundOrUnknown\\\", \\\"Outbound\\\"), Country=MaliciousIPCountry, Latitude=MaliciousIPLatitude, Longitude=MaliciousIPLongitude),     (CommonSecurityLog\\r\\n| extend TrafficDirection = iff(CommunicationDirection != \\\"Outbound\\\",\\\"InboundOrUnknown\\\", \\\"Outbound\\\"), Country=MaliciousIPCountry, Latitude=MaliciousIPLatitude, Longitude=MaliciousIPLongitude, Confidence=ThreatDescription, Description=ThreatDescription),     (VMConnection\\r\\n| where Type == \\\"VMConnection\\\"\\r\\n| extend TrafficDirection = iff(Direction != \\\"outbound\\\",\\\"InboundOrUnknown\\\", \\\"Outbound\\\"), Country=RemoteCountry, Latitude=RemoteLatitude, Longitude=RemoteLongitude)\\r\\n| where isnotempty(MaliciousIP) and isnotempty(Country) and isnotempty(Latitude) and isnotempty(Longitude)\\r\\n| where Computer startswith \\\"{Computer}\\\"\\r\\n| summarize MaliciousIPcount = dcount(MaliciousIP), TableSource = make_set(Type) by Country, TrafficDirection\\r\\n| top 10 by MaliciousIPcount\\r\\n| order by MaliciousIPcount desc\\r\\n\\r\\n\",         \"size\": 0,         \"title\": \"Top10: Potential Locations for: {Computer}\",         \"timeContext\": {           \"durationMs\": 0         },         \"timeContextFromParameter\": \"TimeRange\",         \"queryType\": 0,         \"resourceType\": \"microsoft.operationalinsights/workspaces\",         \"crossComponentResources\": [           \"{Workspaces}\"         ],         \"visualization\": \"table\",         \"gridSettings\": {           \"sortBy\": [             {               \"itemKey\": \"MaliciousIPcount\",               \"sortOrder\": 2             }           ]         },         \"sortBy\": [           {             \"itemKey\": \"MaliciousIPcount\",             \"sortOrder\": 2           }         ],         \"mapSettings\": {           \"locInfo\": \"CountryRegion\",           \"locInfoColumn\": \"Code\",           \"latitude\": \"Latitude\",           \"longitude\": \"Longitude\",           \"sizeSettings\": \"count_\",           \"sizeAggregation\": \"Sum\",           \"defaultSize\": 0,           \"labelSettings\": \"MaliciousIP\",           \"legendAggregation\": \"Sum\",           \"itemColorSettings\": {             \"nodeColorField\": \"MaliciousIPcount\",             \"colorAggregation\": \"Sum\",             \"type\": \"heatmap\",             \"heatmapPalette\": \"greenRed\"           }         }       },       \"conditionalVisibility\": {         \"parameterName\": \"selectedTab\",         \"comparison\": \"isEqualTo\",         \"value\": \"Events\"       },       \"name\": \"query - 14 - Copy\"     },     {       \"type\": 3,       \"content\": {         \"version\": \"KqlItem/1.0\",         \"query\": \" resources\\r\\n| where type == \\\"microsoft.hybridcompute/machines\\\"\\r\\n//| extend p=array_length(properties.provisioningState) \\r\\n| mvexpand prop=properties.provisioningState\\r\\n| project ComputerName = id,  Status = properties.status, State=prop, location, resourceGroup, type\",         \"size\": 1,         \"title\": \"All Azure Arc resources\",         \"queryType\": 1,         \"resourceType\": \"microsoft.resourcegraph/resources\",         \"crossComponentResources\": [           \"{Subscriptions}\"         ],         \"sortBy\": []       },       \"conditionalVisibility\": {         \"parameterName\": \"selectedTab\",         \"comparison\": \"isEqualTo\",         \"value\": \"Arc\"       },       \"name\": \"query - 18\"     },     {       \"type\": 3,       \"content\": {         \"version\": \"KqlItem/1.0\",         \"query\": \"securityresources\\r\\n| where type == \\\"microsoft.security/assessments\\\"\\r\\n| where properties has '{Computer}'\\r\\n| project Resource = properties.displayName, Status = trim(@\\\"[^\\\\w]+\\\",tostring(split(properties.status,\\\":\\\",1))), Location =  trim(@\\\"[^\\\\w]+\\\",tostring(split(properties.resourceDetails,\\\":\\\",1)))\\r\\n| extend Status   = iif(Status has \\\",\\\",trim(@\\\"[^\\\\w]+\\\",tostring(split(Status,\\\",\\\",0))),Status)\\r\\n| extend Location = iif(Location has \\\"\\\\\\\\\\\",trim(@\\\"[^\\\\w]+\\\",tostring(split(Location,\\\"\\\\\\\\\\\",0))),Location)\\r\\n| where Location == \\\"OnPremise\\\"\\r\\n| summarize count() by Status, tostring(Resource), Location=\\\"Azure Arc\\\"\\r\\n| order by count_ desc\",         \"size\": 1,         \"title\": \"Azure Arc Security Status for: {Computer}\",         \"queryType\": 1,         \"resourceType\": \"microsoft.resourcegraph/resources\",         \"crossComponentResources\": [           \"{Subscriptions}\"         ],         \"gridSettings\": {           \"formatters\": [             {               \"columnMatch\": \"Status\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"Resource\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"Location\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             },             {               \"columnMatch\": \"id\",               \"formatter\": 7,               \"formatOptions\": {                 \"linkTarget\": \"Resource\",                 \"showIcon\": true               }             },             {               \"columnMatch\": \"count_\",               \"formatter\": 0,               \"formatOptions\": {                 \"showIcon\": true               }             }           ]         },         \"sortBy\": []       },       \"conditionalVisibility\": {         \"parameterName\": \"selectedTab\",         \"comparison\": \"isEqualTo\",         \"value\": \"Arc\"       },       \"name\": \"query - 18 - Copy\"     }   ],   \"fromTemplateId\": \"sentinel-SecurityStatus\",   \"$schema\": \"https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json\" }",
                                             "category":  "workbook",
                                             "version":  "1.0",
                                             "sourceId":  "[resourceid('Microsoft.OperationalInsights/workspaces',parameters('workspacename'))]"
                                         },
                          "type":  "microsoft.insights/workbooks",
                          "kind":  "shared",
                          "apiVersion":  "2018-06-17-preview",
                          "location":  "[parameters('location')]"
                      }
                  ]
}
